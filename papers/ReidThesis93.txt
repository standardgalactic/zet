Computing
Science
M.Sc
Thesis
A
Precise
Semantics
fo
r
Ultralo
ose
Sp
ecications
A
lastair
D.
R
eid
Submitted
for
the
degree
of
Master
of
Science
c
		,
Alastair
D.
Reid

i
Abstract
All
formal
sp
eciers
face
the
danger
of
o
v
ersp
ecication:
acciden
tally
writing
an
o
v
erly
restrictiv
e
sp
ecication.
This
problem
is
particularly
acute
for
axiomatic
sp
ecications
b
ecause
it
is
so
easy
to
write
axioms
whic
h
hold
for
some
of
the
in
tended
implem
en
tati
ons
but
not
for
all
of
them
(or,
rather,
it
is
so
har
d
not
to
write
o
v
erly
strong
axioms).
One
of
the
b
est
dev
elop
ed
w
a
ys
of
reco
v
ering
some
of
those
implem
en
tations
whic
h
do
not
liter
al
ly
satisfy
the
sp
ecication
is
to
apply
a
\b
eha
vioural
abstraction
op
erator"
to
a
sp
ecication:
adding
in
those
implem
en
tations
whic
h
ha
v
e
the
same
\b
eha
viour"
as
an
implem
en
tation
whic
h
do
es
satisfy
the
sp
ecication.
In
t
w
o
recen
t
pap
ers
Wirsing
and
Bro
y
prop
ose
an
alternativ
e
(and
apparen
tly
simpler)
approac
h
whic
h
they
call
\ultralo
ose
sp
ecication."
This
approac
h
is
based
on
a
particular
st
yle
of
writing
axioms
whic
h
a
v
oids
certain
forms
of
o
v
ersp
ecica-
tion.
An
imp
ortan
t,
unansw
ered
question
is
\Ho
w
do
es
the
ultralo
ose
approac
h
re-
late
to
the
other
solutions?"
The
ma
jor
ac
hiev
emen
t
of
this
thesis
is
a
pro
of
that
the
ultralo
ose
approac
h
is
seman
tically
equiv
alen
t
to
the
use
of
the
\b
eha
vioural
abstraction
op
erator."
This
result
is
rather
surprising
in
the
ligh
t
of
a
result
b
y
Sc
ho
ett
whic
h
se
ems
to
sa
y
that
suc
h
a
result
is
imp
ossible.

Ac
kno
wledgemen
ts
I
w
ould
lik
e
to
thank
the
follo
wing
p
eople
for
their
help
during
the
p
erio
d
of
this
researc
h.

Dr.
Muy
Thomas
for
acting
as
m
y
sup
ervisor.

My
oce-mates
Kei
Da
vis
and
Shahad
Ahmed
for
their
supp
ort
and
advice.

My
paren
ts
for
nancial
and
other
supp
ort.

The
Computing
Science
Departmen
t
for
their
patience
and
generosit
y
in
pro-
viding
facilities.

The
Science
and
Engineering
Researc
h
Council
for
funding
(a
w
ard
]0).

Aran
Lunzer
for
caeine
xes
and
questions
for
all
m
y
L
a
T
E
X
answ
ers.
ii

Con
ten
ts

In
tro
duction


The
Seman
tics
of
ASL
and
USL

.
Signatures,
Algebras
and
Axioms
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

..
Signatures
and
Algebras
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

..
T
erms,
Deriv
ed
Op
erators
and
Reac
habilit
y
:
:
:
:
:
:
:
:
:
:
0
..
F
orm
ul
and
Axioms
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
Sp
ecications
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

..
Sp
ecication
Building
Op
erations
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
	
..
Examples
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
The
ASL
and
USL
sublanguages
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:


Beha
vioural
Equiv
alence

.
Beha
vioural
Equiv
alence
|
Sp
ecial
Case
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
0
.
Beha
vioural
Equiv
alence
|
General
Case
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
Prop
erties
of
Beha
vioural
Equiv
alence
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
Beha
vioural
Equiv
alence
and
Sp
ecications
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
Observ
ational
Axioms
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
Sc
ho
ett's
Imp
ossibilit
y
Theorem
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
Summary
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:


Ultralo
ose
Sp
ecications
	
.
Dening
Ultralo
ose
St
yle
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
0
.
Closure
of
SP
IN
OUT
under
IN
!
OUT
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
	
.
Closure
of
SP
IN
OUT
under
IN
 
!
OUT
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
Equiv
alence
of
ASL
and
USL
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
	0
.
Summary
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
0

Ease
of
Pro
ofs
in
ASL
and
USL
0
.
Dicult
y
of
Pro
ofs
in
ASL
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
0
.
Ease
of
Pro
ofs
in
USL
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
0
.
Comparision
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
Summary
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

iii

Con
ten
ts
iv

Summary
and
Conclusions


List
of
Figures
.
Stac
ks
in
ASL
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
A
Stac
k
Impleme
n
tation
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
Stac
ks
in
USL
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
Inconsisten
t
Stac
ks
in
ASL
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
Sp
ecication
of
Natural
Num
b
ers
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
Coun
ter
Sp
ecication
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
An
Ultralo
ose
Stac
k
Sp
ecication
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
A
\Normal"
Stac
k
Sp
ecication
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
An
Ultralo
ose
Stac
k
Sp
ecication
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
A
Beha
viourally
Closed
USL
Stac
k
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:

.
Multiple
Coun
ter
|
ASL
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
0
.
Multiple
Coun
ter
|
USL
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
0
.
Restructured
Multiple
Coun
ter
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
0	
v

List
of
Theorems
and
Denitions
.
Denition:
closure
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Denition:
signatures
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Denition:
signature
morphisms
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Denition:
algebras
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Denition:
reducts
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Denition:
homomorphisms
and
isomorphisms
.
.
.
.
.
.
.
.

.
Lemma:
bijectivit
y
and
uniqueness
of
isomorphisms
.
.
.
.
.
.

.
Coun
terexample:
Aj

0

=
B
j

0
)
A

=
B
.
.
.
.
.
.
.
.
.
.

.
Denition:
congruences
and
quotien
ts
.
.
.
.
.
.
.
.
.
.
.
.
	
.	
Lemma:
homomorphism
to
quotien
t
algebras
.
.
.
.
.
.
.
.
.
	
.0
Denition:
terms
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
0
.
Denition:
v
aluations
and
in
terpretation
.
.
.
.
.
.
.
.
.
.
.

.
Lemma:
represen
tation
of
terms
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Denition:
reac
habilit
y
,
reac
hable
subalgebras
.
.
.
.
.
.
.
.

.
Lemma:
homomorphism
from
reac
hable
subalgebras
.
.
.
.
.
.

.
Lemma:
quotien
ts
of
reac
hable
subalgebras
.
.
.
.
.
.
.
.
.
.

.
Denition:
w
ell
formed
form
ul,
axioms
and
satisfaction
.
.
.
.

.
Denition:
sp
ecications
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
0
.
Denition:
Beha
vioural
equiv
alence
|
ground
case
.
.
.
.
.
.

.
Denition:
Beha
vioural
equiv
alence
|
alternativ
e
denition
.
.

.
Denition:
Beha
vioural
equiv
alence
|
alternativ
e
denition
.
.

.
Denition:
IN
!
OUT
and
IN
 
!
OUT
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Denition:
observ
ational
and
b
eha
vioural
equiv
alence
.
.
.
.
.

.
Lemma:
IN
 
!
OUT


EQ
(IN
;OUT
)
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Lemma:
b
eha
vioural
equiv
alence
of
isomorphic
algebras
.
.
.
.

.
Lemma:
b
eha
vioural
equiv
alence
of
reac
hable
subalgebras
.
.
.

.	
Denition:
(
;
OUT
)-congruence
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.0
Lemma:
b
eha
vioural
equiv
alence
of
quotien
t
algebras
.
.
.
.
.

vi

List
of
Theorems
and
Denitions
vii
.
Lemma:
b
eha
vioural
equiv
alence
and
reac
habilit
y
.
.
.
.
.
.
.
	
.
Theorem:
A
IN
 
!
OUT
B
,
R(
;
IN
;
A)=

A

=
R(
;
IN
;
B)=

B
.
.
0
.
Denition:
b
eha
vioural
seman
tics,
equiv
alence
and
closure
.
.
.

.
Lemma:
SP
IN
 
!
OUT
SP
)
(SP
 
SP
)
,
(SP
 
SP
)
.
.
.
.

.
Denition:
observ
ational
form
ul
and
axioms
.
.
.
.
.
.
.
.

.
Theorem:
IN
 
!
OUT


Axm
(IN
;OUT
)
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Corollary:
SP
j
=
ax
,
b
eha
viour
SP
wrt
(IN
;
OUT
)
j
=
ax
.
	
.
Lemma:




Cl
()
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
0
.	
Coun
terexample:

EQ
(IN
;OUT
)


Axm
(IN
;OUT
)
.
.
.
.
.
.
.

.0
Corollary:
IN
 
!
OUT


EQ
(IN
;OUT
)
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Theorem:
Sc
ho
ett's
imp
ossibilit
y
result
.
.
.
.
.
.
.
.
.
.
.

.
Corollary:
w
eakness
of
observ
ational
axioms
.
.
.
.
.
.
.
.
.

.
Denition:
congruence
axioms
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Denition:
ultralo
ose
axiom
and
sp
ecication
transformation
.
.

.
Denition:
(A)
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Denition:

A
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Theorem:
do
wn
w
ard
closure
of
SP
IN
OUT
.
.
.
.
.
.
.
.
.
.
.
.
	
.
Denition:
negation
normal
form
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Theorem:
closure
of
SP
IN
OUT
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Lemma:
Mo
d(SP
IN
OUT
)

Mo
d
IN
OUT
(SP
)
.
.
.
.
.
.
.
.
.
.
	
.	
Lemma:
SP
IN
OUT
 
SP
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
	
.0
Theorem:
seman
tic
eect
of
ultralo
ose
transformation
.
.
.
.
.
	
.
Corollary:
Counter
fg
fBo
ol
g
is
b
eha
viourally
closed
.
.
.
.
.
.
.
.
00
.
Corollary:
SP
IN
OUT
=
b
eha
viour
SP
wrt
(IN
;
OUT
)
.
.
.
.
.
00
.
Lemma:
ignoring
b
eha
vioural
abstraction
is
unsound
.
.
.
.
.
0
.
Lemma:
minc
(m
+
n
;
c
)

minc
(m
;
minc
(n
;
c
))
.
.
.
.
.
.
.
.
0
.
Lemma:
mde
c
(n
;
minc
(n
;
c
))

c
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Theorem:
n
<
m
)
:isZer
o
(mde
c
(n
;
minc
(m
;
c
)))
.
.
.
.
.
.
.


Chapter

In
tro
duction
Tw
o
imp
ortan
t
requiremen
ts
of
a
framew
ork
for
formal
program
dev
elopmen
t
are
that
it
should
allo
w
an
y
\legitimate"
informal
program
dev
elopmen
t;
and
that
it
should
b
e
straigh
tforw
ard
to
pro
v
e
that
eac
h
step
in
a
program
dev
elopmen
t
is
allo
w
ed.
All
programmers
kno
w
that
replacing
one
mo
dule
b
y
another
mo
dule
with
the
same
external
b
eha
viour
has
no
eect
on
the
o
v
erall
b
eha
viour
of
a
program
and
so,
to
satisfy
the
rst
requiremen
t,
an
y
framew
ork
for
formal
program
dev
elopmen
t
should
supp
ort
the
replacemen
t
of
\b
eha
viourally
equiv
alen
t"
mo
dules
(i.e.
mo
dules
with
the
same
\external
b
eha
viour").
That
is,
program
sp
ecications
should
ha
v
e
the
follo
wing
closure
prop
ert
y
.
If
a
program
mo
dule
implem
en
ts
a
sp
ecication
then
so
should
all
b
e-
ha
viourally
equiv
alen
t
program
mo
dules.

This
thesis
is
concerned
with
dieren
t
w
a
ys
in
whic
h
axiomatic
(ak
a
algebraic)
sp
ec-
ication
languages
ac
hiev
e
this
closure
prop
ert
y
and
with
ho
w
these
dieren
t
ap-
proac
hes
aect
the
ease
of
pro
ving
prop
erties
of
the
resulting
sp
ecications.
In

W
e
are
b
eing
delib
erately
v
ague
ab
out
what
w
e
mean
b
y
\implemen
ts"
and
\b
eha
vioural
equiv
alence."
These
terms
are
dened
in
c
hapters

and

resp
ectiv
ely
.


In
tro
duction

particular,
w
e
lo
ok
at
t
w
o
closely-related
languages
due
to
Wirsing,
Sannella
and
T
arlec
ki
and
to
Wirsing
and
Bro
y
.
The
b
est
dev
elop
ed
axiomatic
sp
ecication
language
whic
h
addresses
the
issue
of
b
eha
vioural
closure
is
ASL
prop
osed
b
y
Wirsing
and
Sannella
[,0]
and
dev
elop
ed
further
b
y
Sannella
and
T
arlec
ki
[{0].
ASL
is
a
k
ernel
sp
ecication
language
used
to
dene
the
seman
tics
of
higher-lev
el
sp
ecication
languages
suc
h
as
PLUSS
[]
and
Extended
ML
[].
Not
all
sp
ecications
written
in
ASL
are
b
eha
viourally
closed:
for
example,
the
sp
ecication
of
stac
ks
of
natural
n
um
b
ers
in
gure
.
admits
some
stac
k-lik
e
im-
plemen
tations
suc
h
as
the
ob
vious
list-based
implem
en
tation
but
rejects
others
with
the
same
b
eha
viour
suc
h
as
the
\arra
y
and
p
oin
ter"
implem
en
tation
in
gure
..

enric
h
Nat
b
y
sign
Stack
:
t
yp
e
empty
:
!
Stack
push
:
Nat

Stack
!
Stack
p
op
:
Stack
!
Stack
top
:
Stack
!
Nat
isEmpty
:
Stack
!
Bo
ol
axioms
s
:
Stack
;
x
:
Nat
:
top
(push
(x
;
s
))
=
x
s
:
Stack
;
x
:
Nat
:
p
op
(push
(x
;
s
))
=
s
isEmpty
(empty
)
=
T
rue
s
:
Stack
;
x
:
Nat
:
isEmpty
(push
(x
;
s
))
=
F
alse
end
Figure
.:
Stac
ks
in
ASL
There
are
t
w
o
reasons
wh
y
the
stac
k
sp
ecication
in
gure
.
is
to
o
strong
and
so
fails
to
ha
v
e
the
desired
closure
prop
ert
y
.
.
The
use
of
equations
b
et
w
een
stac
ks
is
to
o
strong.
This
can
b
e
seen
b
y
considering
the
arra
y
and
p
oin
ter
implem
en
tation's
failure
to
satisfy
the
second
axiom.

W
e
use
an
ad-ho
c
but,
w
e
hop
e,
clear
notation
to
dene
the
\implem
en
tation."
In
c
hapter

w
e
will
see
that
implemen
tations
should
b
e
dened
in
the
same
language
that
is
used
to
write
sp
ecications.

In
tro
duction

t
yp
e
Stac
k
=
P
air(In
t,
Arra
y
of
Nat)
empty
=
h0
;
emptyA
rr
ay
i
push
(x
;
hi
;
a
i
)
=
hi
+

;
a
[i
]:
=
x
i
p
op
(hi
;
a
i
)
=
hi
 
;
a
i
top
(hi
;
a
i
)
=
a
[i
]
isEmpty
(hi
;
a
i
)
=
i
==
0
Figure
.:
A
Stac
k
Implem
en
tation
p
op
(push
(x
;
empty
))
=
f
denition
of
empty
g
p
op
(push
(x
;
h0
;
emptyA
rr
ay
i))
=
f
denition
of
push
g
p
op
(h
;
emptyA
rr
ay
[0
]:
=
x
i)
=
f
denition
of
p
op
g
h0
;
emptyA
rr
ay
[0
]:
=
x
i
=
h0
;
emptyA
rr
ay
i
=
f
denition
of
empty
g
empty
Although
the
arra
y
and
p
oin
ter
implem
en
tation
do
es
not
satisfy
this
axiom,
there
is
no
\real"
problem
(from
the
programmer's
p
oin
t
of
view)
b
ecause
it
is
not
p
ossible
to
distinguish
p
op
(push
(x
;
empty
))
from
empty
using
the
op
erations
pro
vided
(i.e.
empty
,
push
,
p
op
and
top
).
The
problem
with
the
sp
ecication
is
that
is
that
it
requires
t
w
o
v
alues
to
b
e
identic
al
when
it
is
sucien
t
for
them
to
b
e
indistinguishable
(with
resp
ect
to
the
op
erations
pro
vided).
.
The
use
of
univ
ersal
quan
tication
is
to
o
strong.
This
can
b
e
seen
for
the
arra
y
and
p
oin
ter
implem
en
tation
b
y
considering
the
fourth
axiom
and
instan
tiating
s
with
the
\nonsense"
v
alue
h 
;
emptyA
rr
ay
i
.
s
:
Stack
;
x
:
Nat
:
isEmpty
(push
(x
;
s
))
=
F
alse
)
x
:
Nat
:
isEmpty
(push
(x
;
h 
;
emptyA
rr
ay
i
))
=
F
alse
=
f
denition
of
push
g
x
:
Nat
:
isEmpty
(h0
;
emptyA
rr
ay
[ 
]:
=
x
i))
=
F
alse

In
tro
duction

=
f
denition
of
isEmpty
g
x
:
Nat
:
(0
==
0
)
=
F
alse
=
f
arithmetic,
predicate
calculus
g
false
Again,
the
non-satisfaction
of
this
axiom
is
not
a
\real"
problem
b
ecause
\nonsense"
v
alues
suc
h
as
h 
;
emptyA
rr
ay
i
cannot
b
e
constructed
using
the
op
erations
pro
vided
and
so
will
nev
er
arise
during
the
running
of
a
program.
The
problem
with
the
sp
ecication
is
that
it
requires
a
condition
to
hold
for
all
v
alues
of
t
yp
e
Stack
when
it
is
sucien
t
for
the
condition
to
hold
only
for
v
alues
that
can
b
e
constructed
using
the
op
erations
pro
vided.
The
solution
to
these
problems
adopted
in
ASL
is
to
pro
vide
a
\b
eha
vioural
ab-
straction
op
erator"
whic
h
mo
dies
the
meaning
of
a
sp
ecication
SP
b
y
allo
wing
an
y
implem
en
tation
whic
h
is
b
eha
viourally
equiv
alen
t
to
an
implem
en
tation
of
SP
.
Wirsing
and
Bro
y's
\ultralo
ose
framew
ork"
[,]
tak
es
the
alternativ
e
approac
h
of
trying
to
x
the
problems
with
equations
and
quan
tication
directly
.
The
language
(whic
h
w
e
shall
call
USL)
used
in
this
framew
ork
is
closely
related
to
ASL
(it
shares
four
of
ASL's
v
e
basic
sp
ecication
building
op
erations.)
It
lac
ks
ASL's
b
eha
vioural
abstraction
op
erator
but
ac
hiev
es
a
similar
eect
b
y
allo
wing
the
use
of
sligh
tly
dieren
t
notions
of
equalit
y
and
quan
tication.
The
sp
ecication
in
gure
.
is
a
USL
sp
ecication
of
a
stac
k.
There
are
t
w
o
imp
ortan
t
dierences:
.
T
o
a
v
oid
the
ab
o
v
e
problems
with
univ
ersal
quan
tication,
the
ultralo
ose
sp
ec-
ication
uses
\reac
hable
quan
tication"
(
r
)
whic
h
only
ranges
o
v
er
the
v
alues
whic
h
can
b
e
constructed
using
the
a
v
ailable
op
erations.
.
T
o
a
v
oid
the
ab
o
v
e
problems
with
equalit
y
,
the
ultralo
ose
sp
ecication
uses
a
congruence

instead
of
equalit
y
.
(Since
congruences
are
not
\built
in"
to
the
sp
ecication
language
as
equalit
y
is,
it
is
necessary
to
add
the
last
eigh
t
axioms
sp
ecifying
the
reexivit
y
,
symmetry
,
transitivit
y
and
substitutivit
y
of
.)
Unlik
e
ASL,
USL
has
not
b
een
extensiv
ely
studied.
The
ma
jor
con
tribution
of
this
thesis
are
answ
ers
to
the
follo
wing
questions:

In
tro
duction

enric
h
Nat
b
y
sign
Stack
:
t
yp
e
empty
:
!
Stack
push
:
Nat

Stack
!
Stack
p
op
:
Stack
!
Stack
top
:
Stack
!
Nat
isEmpty
:
Stack
!
Bo
ol
:
Stack

Stack
!
Bo
ol
axioms

r
s
:
Stack
;
x
:
Nat
:
top
(push
(x
;
s
))
=
x

r
s
:
Stack
;
x
:
Nat
:
p
op
(push
(x
;
s
))

s
isEmpty
(s
)
=
T
rue

r
s
:
Stack
;
x
:
Nat
:
isEmpty
(push
(x
;
s
))
=
F
alse
s
:
Stack
:
s

s
s
;
s
:
Stack
:
s

s
,
s

s
s
;
s
;
s
:
Stack
:
s

s
^
s

s
)
s

s
empty

empty
s
;
s
:
Stack
;
x
:
Nat
:
s

s
)
push
(x
;
s
)

push
(x
;
s
)
s
;
s
:
Stack
:
s

s
)
p
op
(s
)

p
op
(s
)
s
;
s
:
Stack
:
s

s
)
top
(s
)
=
top
(s
)
s
;
s
:
Stack
:
s

s
)
isEmpty
(s
)
=
isEmpty
(s
)
end
Figure
.:
Stac
ks
in
USL

Under
what
circumstances
are
USL
sp
ecications
b
eha
viourally
closed?
W
e
tac
kle
this
question
b
y
dening
a
transformation
(the
\ultralo
ose
trans-
formation")
from
ASL
sp
ecications
suc
h
as
that
in
gure
.
to
USL
sp
eci-
cations
suc
h
as
that
in
gure
.
and
iden
tifying
sucien
t
conditions
under
whic
h
the
transformed
sp
ecication
is
b
eha
viourally
closed.

There
are
t
w
o
ob
vious
w
a
ys
of
making
the
sp
ecication
in
gure
.
b
e-
ha
viourally
closed:
apply
ASL's
b
eha
vioural
abstraction
op
eration;
or
apply
the
ultralo
ose
transformation
men
tioned
ab
o
v
e.
Under
what
circumstances
do
these
t
w
o
approac
hes
giv
e
the
same
result?

In
tro
duction


F
or
whic
h
approac
h
is
it
easiest
to
pro
v
e
prop
erties
of
the
resulting
sp
ecications?
Since
the
ASL
sp
ecication
is
shorter
than
the
corresp
onding
USL
sp
eci-
cation,
one
migh
t
think
that
the
ASL
sp
ecication
is
simpler
than
the
USL
sp
ecication;
but,
Wirsing
and
Bro
y
claim
that
the
b
eha
vioural
abstraction
op
erator
is
\mathematically
dicult"
and
that
their
approac
h
a
v
oids
these
diculties
[
paragraphs
{].
It
is
not
immedi
ately
ob
vious
whic
h
argumen
t
is
correct.
W
e
tac
kle
the
question
b
y
comparing
pro
ofs
for
ASL
and
USL
sp
ecications.
Our
in
terest
in
these
results
is
t
w
ofold:
they
pro
vide
a
basis
on
whic
h
to
compare
the
approac
hes
tak
en
in
ASL
and
in
USL;
and
they
pro
vide
useful
results
for
use
in
pro
ving
prop
erties
of
sp
ecications
and
of
sp
ecication
transformations.
Related
W
ork
The
notion
of
b
eha
vioural
equiv
alence
can
b
e
traced
bac
k
to
Hoare's
pap
er
\Pro
of
of
Correctness
of
Data
Represen
tation"
[]
whic
h
uses
abstraction
functions
to
describ
e
the
relationship
b
et
w
een
t
w
o
mo
dules.
The
use
of
functions
rather
than
relations
resulted
in
an
asymmetri
c
relation
|that
is,
Hoare
dened
a
b
eha
vioural
ordering.
Later
w
ork
in
the
area
of
mo
del-based
formal
program
dev
elopmen
t
(for
example,
[,	])
generalised
the
abstraction
function
to
a
represen
tation
relation
yielding
an
equiv
alence
lik
e
that
discussed
in
this
thesis.
Early
w
ork
on
axiomatic
sp
ecications
(in
partciular,
that
of
the
inuen
tial
ADJ
group
[	
section
.])
adopted
a
notion
of
implem
en
tation
lik
e
that
of
Hoare.
This
has
b
een
dev
elop
ed
further
b
y
(amongst
others)
Ehrig
et
al.
[]
and
is
discussed
in
detail
b
y
Wirsing
in
[].
One
of
the
earliest
uses
of
b
eha
vioural
equiv
alence
in
the
seman
tics
of
a
sp
ecication
language
is
that
of
Sannella
and
Wirsing
discussed
earlier
(notable
previous
mo
v
es
in
this
direction
are
those
of
Giarratana
et
al.
[]
and
of
W
and
[	]).
Making
the
use
of
b
eha
vioural
equiv
alence
b
y
inclusion
of
the
b
eha
vioural
abstraction
op
erator

In
tro
duction

in
ASL
allo
w
ed
Sannella
and
Wirsing
to
adopt
a
notion
of
implem
en
tation
whic
h
w
as
v
ery
m
uc
h
simpler
than
that
of
the
ADJ
group
and
Ehrig
et
al.
(this
is
p
erhaps
the
ma
jor
tec
hnical
inno
v
ation
in
ASL).
The
ASL
language
has
subsequen
tly
b
een
rened
in
a
series
of
pap
ers
including
[{0].
Instead
of
explicitly
including
the
b
eha
vioural
abstraction
op
erator
in
the
language,
sev
eral
w
ork
ers
[,,,,0]
ha
v
e
dened
notions
of
\b
eha
vioural
satisfaction"
of
axioms.
Roughly
,
a
mo
del
b
ehaviour
al
ly
satises
an
axiom
i
there
is
a
b
eha
viourally
equiv
alen
t
mo
del
whic
h
satises
(in
the
usual
sense)
that
axiom.
This
approac
h
(p
oten
tially)
suers
from
a
ma
jor
problem:
b
eha
vioural
satisfaction
leads
to
strange
results
if
w
e
allo
w
arbitrary
rst-order
axioms.
F
or
example,
under
the
usual
seman
tics
the
sp
ecication
in
gure
.
w
ould
b
e
inconsisten
t
(unimpleme
n
table)
b
ecause
the
second
and
third
axioms
conict
but
under
a
b
eha
vioural
seman
tics
based
on
this
notion
of
b
eha
vioural
satisfaction,
this
sp
ecication
is
consisten
t.
(F
or
example,
the
usual
list-based
implem
en
tation
sat-
ises
the
rst
t
w
o
axioms
directly
and
b
eha
viourally
satises
the
third
axiom
since
the
b
eha
viourally
equiv
alen
t
arra
y
and
p
oin
ter-based
implem
en
tation
satises
the
third
axiom.)
enric
h
Nat
b
y
sign
Stack
:
t
yp
e
empty
:
!
Stack
push
:
Nat

Stack
!
Stack
p
op
:
Stack
!
Stack
top
:
Stack
!
Nat
axioms
s
:
Stack
;
x
:
Nat
:
top
(push
(x
;
s
))
=
x
s
:
Stack
;
x
:
Nat
:
p
op
(push
(x
;
s
))
=
s
s
:
Stack
;
x
:
Nat
:
p
op
(push
(x
;
s
))
=
s
end
Figure
.:
Inconsisten
t
Stac
ks
in
ASL
T
o
a
v
oid
this
problem,
this
approac
h
(sev
erely)
restricts
the
form
of
axioms
allo
w
ed
in
sp
ecications
to
b
eing
conditional
equations.
That
is,
axioms
m
ust
b
e
of
the
form
xs
:

s
:
l
=
r
^
:
:
:
lm
=
rm
)
l
=
r
:

In
tro
duction

An
early
attempt
to
a
v
oid
the
need
for
a
radically
dieren
t
seman
tics
is
that
of
Maibaum,
Sadler
and
V
eloso
[,]
who
used
a
direct
enco
ding
of
Hoare's
ab-
straction
function.
A
t
rst
glance,
their
approac
h
seems
v
ery
complex
since
it
uses
innitary
logic
suggesting
that
it
w
ould
b
e
hard
to
carry
out
nite
pro
ofs.
Ho
w
ev
er,
their
use
of
innitary
logic
could
ha
v
e
b
een
replaced
b
y
use
of
the
quan
tier

r
used
in
gure
.
for
whic
h
w
e
need
only
structural
induction.
The
imp
ortance
of
this
w
ork
is
that
using
essen
tially
the
same
simple
notion
of
implem
en
tation
as
in
ASL
and
USL,
this
approac
h
allo
ws
broadly
the
same
implem
en
tati
ons
as
under
the
more
complex
seman
tics
of
the
ADJ
group.
(W
e
shall
not
attempt
to
giv
e
a
more
precise
c
haracterisation
of
the
seman
tics
here.)
Sc
ho
ett's
imp
ossibilit
y
theorems
[,]
sho
w
that
neither
the
usual
language
of
rst
order
logic
with
equalit
y
(as
used
in
gure
.)
nor
Wirsing
and
Bro
y's
logic
(with

r
instead
of
)
is
p
o
w
erful
enough
to
precisely
c
haracterise
a
simple
b
eha
viourally
closed
class
of
algebras.
This
seems
to
suggest
that
something
lik
e
ASL's
b
eha
vioural
abstraction
op
erator
is
essen
tial.
Ho
w
ev
er,
as
a
corollary
he
sho
w
ed
that
pro
ving
simple
prop
erties
of
mo
dules
using
sp
ecications
written
using
the
b
eha
vioural
ab-
straction
op
erator
can
require
innite
pro
ofs
if
one
uses
the
pro
of
tec
hnique
sug-
gested
b
y
Sannella
and
T
arlec
ki
in
[].
This
suggests
that
the
goal
of
a
simple
b
eha
viourally
closed
axiomatic
sp
ecication
language
is
unattainable.
Most
algebraic
sp
ecication
languages
pro
vide
a
w
a
y
to
con
trol
whic
h
sorts
and
op
erations
are
exp
orted
from
a
sp
ecication.
W
e
shall
sho
w
that,
for
suc
h
languages,
Wirsing
and
Bro
y's
logic
is
p
o
w
erful
enough
to
precisely
c
haracterise
the
class
of
all
stac
k-lik
e
algebras
(this
is
a
corollary
to
our
discussion
of
the
relation
b
et
w
een
ASL
and
USL
in
c
hapter
).
(Since
	
it
has
b
een
kno
wn
that
allo
wing
op
erations
to
b
e
\hidden"
b
y
not
exp
orting
them
greatly
increases
the
p
o
w
er
of
sp
ecication
languages
(see,
for
example,
[,])
so
our
result
is
p
erhaps
not
o
v
erly
surprising.
Indeed,
in
[
section

]
Sc
ho
ett
suggests
that
op
eration
hiding
may
b
e
one
w
a
y
of
a
v
oiding
the
problem
but
do
es
not
sho
w
ho
w
it
could
b
e
done.
Our
con
tribution
is
to
conrm
that
op
eration
hiding
c
an
b
e
used
to
solv
e
the
problem
and
to
pro
vide
a
systematic
metho
d
for
doing
so.)
Finally
,
it
is
w
orth
remarking
that
Sc
ho
ett's
thesis
[]
is
the
only
w
ork
w
e
kno
w

In
tro
duction
	
of
whic
h
relates
(an
y
of
)
the
ab
o
v
e
the
or
etic
al
notions
of
b
eha
vioural
equiv
alence
to
the
mo
dularisation
facilities
found
in
programming
languages.
Sc
ho
ett
in
tro
duces
a
concept
he
calls
\stabilit
y
(for
b
eha
vioural
equiv
alence)"
(discussed
further
in
c
hapter
)
and
sho
ws
that
if
a
programming
language
only
pro
vides
\stable"
mo
d-
ularisation
facilities,
then
traditional
Abstract
Data
T
yp
e
theory
is
v
alid.
That
is,
it
is
v
alid
to
replace
an
impleme
n
tation
of
a
mo
dule
b
y
an
y
b
eha
viourally
equiv
a-
len
t
mo
dule.
Sc
ho
ett
is
primarily
concerned
with
programming
languages
and
so
his
ideas
do
not
directly
apply
to
this
thesis.
Sannella
and
T
arlec
ki
[
section
]
discuss
ho
w
the
notion
of
stabilit
y
can
b
e
applied
to
sp
ecication
languages
|
w
e
giv
e
a
brief
outline
in
c
hapter
.
Organisation
of
this
Thesis
The
remainder
of
this
c
hapter
discusses
v
arious
pieces
of
notation
used
throughout
this
thesis.
Sp
ecications
in
b
oth
ASL
and
USL
denote
a
class
of
algebras.
Chapter

denes
b
oth
languages
and
a
satisfaction
relation
b
et
w
een
algebras
and
sp
ecications.
This
is
used
to
dene
the
implem
en
tation
and
equiv
alence
relations
b
et
w
een
sp
ecica-
tions.
Chapter

denes
the
ma
jor
to
ol
used
in
exploring
the
seman
tics
of
USL
sp
ecica-
tions:
b
eha
vioural
equiv
alence.
Chapter

explores
t
w
o
of
the
main
themes
of
this
thesis:
b
eha
vioural
closure
of
USL
sp
ecications
and
the
relationship
b
et
w
een
USL
and
ASL.
Ha
ving
sho
wn
that
the
ASL
and
the
USL
approac
hes
to
b
eha
vioural
closure
ha
v
e
the
same
result,
c
hapter

demonstrates
an
adv
an
tage
of
USL
o
v
er
ASL:
it
can
b
e
easier
to
pro
v
e
that
a
USL
sp
ecication
satises
a
giv
en
axiom
than
to
sho
w
that
the
corresp
onding
ASL
sp
ecication
satises
the
same
axiom.
Chapter

concludes.

In
tro
duction
0
Notation
Our
notation
for
the
predicate
calculus
closely
follo
ws
that
of
the
Eindho
v
en
Sc
ho
ol.
That
is:
Logical
Op
erators
:,
^,
_,
),
,
denote
negation,
conjunction,
disjunction,
im-
plication
and
equiv
alence
resp
ectiv
ely
as
usual.
(
pronounced
\follo
ws
from,"
is
dened
b
y
P
(
Q
def
=
Q
)
P
.
In
decreasing
binding
p
o
w
er
w
e
ha
v
e
:;
^
and
_;
)
and
(;
and
,.
F
ormat
of
Pro
ofs
Man
y
of
our
pro
ofs
ha
v
e
the
shap
e
P
,
f
hin
t
wh
y
P
,
Q
g
Q
)
f
hin
t
wh
y
Q
)
R
g
R
.
.
.
This
is
used
as
a
shorthand
for
P
,
Q
^
Q
)
R
^
:
:
:.
Quan
tiers
The
general
pattern
for
a
quan
tied
expression
is
(Q
xs
:
P
(xs
)
:
F
(xs
))
with
Q
a
quan
tier,
xs
a
list
of
v
ariables,
P
(xs
)
a
predicate
in
terms
of
the
v
ariables
(the
range)
and
F
(xs
)
the
term
of
the
quan
tication.
(F
(xs
)
should
b
e
dened
for
all
xs
that
satisfy
P
(xs
).)
(F
or
sets,
the
notation
f
x
:
P
(x
)
:
F
(x
)
g
is
used
as
an
abbreviation
for
([x
:
P
(x
)
:
fF
(x
)g).)
The
follo
wing
table
giv
es
a
few
examples
in
\con
v
en
tional"
notation
and
in
the
notation
used
in
this
rep
ort.
[
i
I
A
i
[
B
i
([i
:
i

I
:
A
i
[
B
i
)
\
a
vx
vb
F
(x
)
(\x
:
a
v
x
v
b
:
F
(x
))

In
tro
duction

f
y
j
	x

dom
(f
):
f
(x
)
=
y
g
f
x
:
x

dom
(f
)
:
f
(x
)
g
One
adv
an
tage
of
this
notation
that
it
eliminates
an
y
am
biguit
y
as
to
whic
h
v
ariables
are
b
eing
quan
tied
o
v
er
(as
sho
wn
in
the
second
example).
In
this
thesis
w
e
mak
e
extensiv
e
use
of
the
notion
of
the
(do
wn
w
ard)
closure
of
a
set.
Denition
.
(closure)
Let
A
b
e
a
set
and
:
A
$
A
a
reexiv
e
transitiv
e
relation
on
A.
The
downwar
d
closur
e
of
a
subset
A
0
of
A
with
r
esp
e
ct
to

(written
Cl

(A
0
))
is
dened
b
y
Cl

(A
0
)
def
=
fa
;
a
0
:
a

A
^
a
0

A
0
^
a

a
0
:
a
g
A
subset
A
0
of
A
is
said
to
b
e
downwar
d
close
d
with
r
esp
e
ct
to

if
Cl

(A
0
)
=
A
0
.
In
the
common
case
that

is
an
equiv
alence,
w
e
drop
the
w
ord
\do
wn
w
ard"
|
that
is
w
e
refer
to
Cl

(A
0
)
as
\the
closure
of
A
0
with
resp
ect
to
"
and
sa
y
that
A
0
is
\closed
with
resp
ect
to

if
Cl

(A
0
)
=
A
0
."
End
Denition.
Muc
h
of
our
other
notation
is
tak
en
from
the
Z
sp
ecication
language.
(F
or
example,
the
image
of
a
set
X
under
a
function
f
is
f
(
jX
j
)
def
=
fx
:
x

X
:
f
(x
)g.)
Other
notation
will
b
e
in
tro
duced
as
the
need
arises.

Chapter

The
Seman
tics
of
ASL
and
USL
This
c
hapter
denes
the
language
and
seman
tics
of
ASL
and
USL.
Giv
en
the
sim-
ilarit
y
b
et
w
een
the
t
w
o
languages
it
is
con
v
enien
t
to
dene
the
seman
tics
of
the
\union"
of
the
the
languages
and
dene
ASL
and
USL
as
sublanguages.
In
b
oth
languages,
the
simplest
and
most
fundamen
tal
form
of
sp
ecication
consists
of
a
signature
(whic
h
names
the
t
yp
es
and
op
erations
dened
b
y
the
sp
ecication)
and
a
set
of
axioms.
F
or
example,
sp
ec
sign
Bo
ol
:t
yp
e
T
rue
;
F
alse
:!
Bo
ol
axioms
T
rue
=
F
alse
x
:
Bo
ol
:
x
=
T
rue
_
x
=
F
alse
end
The
seman
tics
of
suc
h
sp
ecications
is
the
class
of
algebras
satisfying
the
axioms.
Section
.
denes
signatures,
algebras,
axioms
and
related
concepts.
Those
familiar
with
the
seman
tics
of
axiomatic
sp
ecications
will
b
e
able
to
skim
ev
erything
except
the
denition
of
axioms.
Section
.
denes
the
sp
ecication
building
op
erations
used
to
construct
large,
structured
sp
ecications
from
these
comp
onen
ts
and
denes
the
notion
of
imple-
men
tation
used
in
ASL
and
USL.
Again,
those
familiar
with
ASL
will
b
e
able
to
skim
this
section.
Finally
,
section
.
denes
the
sublanguages
corresp
onding
to
ASL
and
USL.


..
Signatures,
Algebras
and
Axioms

.
Signatures,
Algebras
and
Axioms
This
section
denes
the
mathematical
structures
used
to
dene
t
w
o
imp
ortan
t
as-
p
ects
of
ASL
and
USL:
the
syn
tax
and
the
seman
tics.
The
syn
tactic
asp
ects
of
ASL
and
USL
are
signatures
(whic
h
name
the
t
yp
es
and
functions
in
a
sp
ecication),
signature
morphisms
(functions
b
et
w
een
signatures),
terms
(expressions)
and
axioms.
The
seman
tics
asp
ects
of
ASL
and
USL
are
algebras
(whic
h
dene
in
terpretations
of
the
t
yp
es
and
functions
in
a
signature).
Algebras
are
used
to
giv
e
a
meaning
to
terms
(b
y
dening
a
notion
of
ev
aluation
of
a
term)
and
to
axioms
(b
y
dening
a
satisfaction
relation
b
et
w
een
algebras
and
axioms).
..
Signatures
and
Algebras
In
essence
a
signature
is
a
set
of
sym
b
ols
with
an
additional
(monomorphic,
rst-
order)
t
yp
e
structure.
The
denition
of
this
\set
with
structure"
is
as
follo
ws.
Denition
.
(signatures)
A
\signature"
is
a
triple

=
hT
;
F
;
:
F
!
[T
]

T
i
where
T
and
F
are
disjoin
t
sets
con
taining
the
\sort
sym
b
ols"
and
the
\function
sym
b
ols"
of

resp
ectiv
ely
.

F
or
f

F
,
the
\t
yp
e"
of
f
in

is
(f
);
and
if
(f
)
=
h[

;
:
:
:

m
];

i
,
w
e
write
f
:







m
!

in

.
W
e
dene
Tp(hT
;
F
;
i)
def
=
T
and
Op
(hT
;
F
;
i
)
def
=
F
.
W
e
write
Sign
to
denote
the
class
of
all
signatures
and
write

:
Sign
to
indicate
that

is
a
signature.
End
Denition.

Our
notation
for
lists
is
based
on
the
functional
programmi
ng
language
Hask
ell:
[A]
denotes
the
set
of
lists
of
A;
[a
;
:
:
:
am
]
denotes
the
list
of
length
m
with
elemen
ts
a
,
:
:
:
am
;
as
+
+
bs
denotes
the
concatenation
of
the
lists
as
and
bs
;
and
]as
denotes
the
length
of
the
list
as
.

The
Seman
tics
of
ASL
and
USL

[Note:
In
the
literature,
F
and

are
often
replaced
b
y
a
[T
]

T
-indexed
set
of
function
sym
b
ols
whic
h
ma
y
b
e
(and
o
ccasionally
is)
used
to
express
\o
v
erloading"
of
function
sym
b
ols.
e.g.
+:
Nat

Nat
!
Nat
and
+:
Int

Int
!
Int
could
app
ear
in
the
same
signature.
Our
denitions
resem
ble
those
of
Wirsing
and
Sc
ho
ett:
in
[],
Wirsing
denes
a
signature
as
a
pair
hT
;
F
i
but
lea
v
es

implicit;
in
[],
Sc
ho
ett
denes
a
signature
as
a
pair
hT
;
i
but
lea
v
es
F
implicit.]
F
or
example,
the
follo
wing
is
a
t
ypical
signature
for
a
stac
k.
StackSig
def
=
h
fNat
;
Stack
g;
f0
;
suc
c
;
empty
;
push
;
p
op
;
top
g;
f
:

>
>
>
>
>
>
>
<
>
>
>
>
>
>
>
:
h[];
Nat
i
;
if
f
=
0
;
h[Nat
];
Nat
i
;
if
f
=
suc
c
;
h[];
Stack
i
;
if
f
=
empty
;
h[Nat
;
Stack
];
Stack
i
;
if
f
=
push
;
h[Stack
];
Stack
i
;
if
f
=
p
op
;
h[Stack
];
Nat
i
;
if
f
=
top
.
i
This
notation
is
a
bit
un
wieldy
and
so
w
e
usually
use
the
follo
wing
more
readable
notation
instead.
StackSig
def
=
sign
Nat
;
Stack
:
t
yp
e
0
:
!
Nat
suc
c
:
Nat
!
Nat
empty
:
!
Stack
push
:
Nat

Stack
!
Stack
p
op
:
Stack
!
Stack
top
:
Stack
!
Nat
end
Signature
morphisms
are
functions
b
et
w
een
signatures
whic
h
resp
ect
the
t
yp
e
struc-
ture.
Denition
.
(signature
morphisms)
Let

=
hT
;
F
;
i
and

0
=
hT
0
;
F
0
;

0
i
b
e
signatures.

..
Signatures,
Algebras
and
Axioms

A
signature
morphism

from

to

0
(written

:

!

0
)
is
a
function
of
t
yp
e
(T
[
F
)
!
(T
0
[
F
0
)
suc
h
that

j
T
:
T
!
T
0
,

j
F
:
F
!
F
0
and,
for
eac
h
f
:







m
!

in

,

(f
):

(

)





(
m
)
!

(
)
in

0
.

The
signature

is
a
subsignature
of

0
(written



0
)
if
T

T
0
,
F

F
0
and

=

0
j
F
.
A
signature
morphism

:

!

0
is
said
to
b
e
an
inclusion
(written

:

,
!

0
)
if



0
and

=
id
T
[F
.

Where

is
ob
vious
from
con
text
and

0


,
w
e
sometime
s
use
the
set
T
0
[
F
0
to
denote

0
.
End
Denition.
In
essence
an
algebra
is
an
abstraction
of
a
program
mo
dule:
it
is
a
function
mapping
sym
b
ols
in
a
signature
to
their
in
terpretation
(either
a
set
of
v
alues
or
a
function).
Algebras
abstract
a
w
a
y
from
details
lik
e
the
execution
time
or
space
of
a
function:
this
reects
the
emphasis
of
formal
metho
ds
on
correctness
rather
than
eciency
.
Denition
.
(algebras)
Let

=
hT
;
F
;
i
b
e
a
signature.
A

-algebra
A
is
a
T
[
F
-indexed
family
suc
h
that
for
eac
h


T
,
A

is
a
set
(the
\carrier
of

")
and
for
eac
h
f
:







m
!

in

,
A
f
is
a
(total)
function
of
t
yp
e
A
f
:
A






A

m
!
A

If
A
and
B
are

-algebras,
A
is
a
sub
algebr
a
of
B
(written
A

B
)
if,
for
eac
h
sort


T
,
A


B

and,
for
eac
h
function
sym
b
ol
f
:




m
!

in

and
eac
h
a

A


,
:
:
:
am

A

m
,
A
f
(a
;
:
:
:
am
)
=
B
f
(a
;
:
:
:
am
).

The
notation
h
j
X
0
denotes
the
restriction
of
a
function
h
:
X
!
Y
to
a
subset
X
0
of
its
domain
X
.
That
is,
h
j
X
0
(x
0
)
def
=
h
(x
0
)
for
x
0

X
0
.

The
notation
id
X
denotes
the
iden
tit
y
function
o
v
er
the
set
X
dened
b
y
id
X
(x
)
def
=
x
for
x

X
.

The
Seman
tics
of
ASL
and
USL

The
class
of
all

-algebras
is
denoted
b
y
Alg(
).
End
Denition.
[Our
denition
of
an
algebra
is
essen
tially
the
same
as
that
of
Sc
ho
ett
[].
Other
authors
suc
h
as
Ehrig
and
Mahr
[]
use
t
w
o
functions
S
A
and
OP
A
(resp
ectiv
ely)
to
assign
in
terpretations
to
sort
and
function
sym
b
ols
(resp
ectiv
ely)
instead
of
a
single
family
A.]
F
or
example,
the
follo
wing
is
a
StackSig
-algebra
called
stack
.
stack
Nat
def
=
f0
;

;

;
:
:
:
g
stack
Stack
def
=
[f0
;

;

;
:
:
:
g]
stack
0
def
=
0
stack
suc
c
def
=
x
:
x
+

stack
empty
def
=
[
]
stack
push
def
=
x
;
s
:
[x
]
+
+
s
stack
p
op
def
=
s
:
if
s
=
[
]
then
[
]
else
tail
(s
)
stack
top
def
=
s
:
if
s
=
[
]
then
0
else
he
ad
(s
)
This
notation
is
a
bit
un
wieldy
and
so
w
e
usually
use
the
follo
wing
more
readable
notation
instead.
stack
def
=
h
Nat
=
f0
;

;

;
:
:
:
g
Stack
=
[Nat
]
0
=
0
suc
c
(x
)
=
x
+

empty
=
[
]
push
(x
;
s
)
=
[x
]
+
+
s
p
op
(s
)
=
if
s
=
[
]
then
[
]
else
tail
(s
)
top
(s
)
=
if
s
=
[
]
then
0
else
he
ad
(s
)
i
One
of
the
most
useful
op
erations
on
an
algebra
is
to
comp
ose
it
with
a
signature
morphism
and
so
rename,
cop
y
or
hide
some
of
the
in
terpretations
of
the
sym
b
ols
in
the
algebra.

..
Signatures,
Algebras
and
Axioms

Denition
.
(reducts)
Let

and

0
b
e
signatures,

:

0
!

a
signature
morphism
and
A
a

-algebra.
The
\
-reduct
of
A"
(written
Aj

)
is
the

0
-algebra
dened
b
y
Aj

def
=
A
.

If

is
an
inclusion,
and
B
=
Aj

,
A
is
an
extension
of
B
.
End
Denition.
W
e
note
that
if

is
an
inclusion,
then
Aj

is
the
algebra
obtained
b
y
restricting
the
domain
of
A
to
the
sort
and
function
sym
b
ols
named
in

0
(hence
the
c
hoice
of
notation).
Where

is
ob
vious
from
con
text
and
an
inclusion,
w
e
write
Aj

0
instead
of
Aj

.
A
homomorphism
can
b
e
though
t
of
as
a
\represen
tation
function"
describing
ho
w
v
alues
in
one
algebra
ma
y
b
e
represen
ted
b
y
v
alues
in
another
algebra.
Denition
.
(homomorphisms
and
isomorphisms)
Let

b
e
a
signature
with
sorts
T
and
let
A
and
B
b
e

-algebras.
A
total
T
-indexed
function
h
:
A
j
T
!
B
j
T
is
a

-homomorphism
if,
for
eac
h
f
:







m
!

in

and
v
alues
a

A


,
:
:
:
am

A

m
,
h

(A
f
(a
;
:
:
:
am
))
=
B
f
(h


(a
);
:
:
:
h

m
(am
))
If
h
:
A
!
B
and
h
0
:
B
!
A
are

-homomorphisms
suc
h
that
h
0
.
h
=
id
A
and
h
.
h
0
=
id
B
then
b
oth
h
and
h
0
are
said
to
b
e

-isomorphisms
(written
h
:
A

=
B
or
just
A

=
B
.)
End
Denition.
[Notes:
Since
A
is
a
family
(i.e.
a
function),
Aj
T
denotes
the
T
-indexed
set
of
\carriers"
of
the
sorts
T
.
Th
us,
a
homomorphism
relates
the
values
in
one
algebra
to
the
values
in
another.

The
Seman
tics
of
ASL
and
USL

The
condition
h

(A
f
(a
;
:
:
:
am
))
=
B
f
(h


(a
);
:
:
:
h

m
(am
))
is
kno
wn
as
\the
homomorphism
condition."]
The
follo
wing
result
is
standard
(see,
for
example,
[
section
.]):
Lemma
.
(bijectivit
y
and
uniqueness
of
isomorphisms)
Let

b
e
a
signature
and
A
and
B
t
w
o

-algebras.
If
h
:
A
!
B
is
a

-isomorphism,
then
h
is
bijectiv
e;
and
there
is
exactly
one

-
isomorphism
h
0
:
B
!
A
suc
h
that
h
0
.
h
=
id
A
and
h
.
h
0
=
id
B
.
End
Lemma.
It
is
easily
seen
that
reducts
preserv
e
isomorphisms
(that
is:
A

=
B
)
A
j


=
B
j

).
It
has
b
een
remark
ed
(see,
for
example
[
section
]
that
reducts
need
not
reect
isomorphisms
(that
is:
Aj


=
B
j

)
A

=
B
).
Coun
terexample
.
(Aj

0

=
B
j

0
)
A

=
B
)
Let

def
=
sign
Bo
ol
:t
yp
e
;
T
rue;
F
alse
:!
Bo
ol
end,

0
def
=
sign
Bo
ol
:t
yp
e
end
and
let
the

-algebras
A
and
B
b
e
dened
b
y
A
def
=
h
Bo
ol
def
=
f0
;

g
T
rue
def
=

F
alse
def
=
0
i
and
B
def
=
h
Bo
ol
def
=
f0
;

g
T
rue
def
=

F
alse
def
=

i
It
is
clear
that
A
j

0

=
B
j

0
(since
A
j

0
=
B
j

0
)
but
A


=
B
.
Hence,
Aj

0

=
B
j

0
)
A

=
B
End
Coun
terexample.

..
Signatures,
Algebras
and
Axioms
	
Denition
.
(congruences
and
quotien
ts)
Let

b
e
a
signature
with
sorts
T
,
let
A
b
e
a

-algebra.
If

is
a
T
-indexed
equiv
alence
o
v
er
A
(that
is,
for
eac
h


T
,


:
A

$
A

is
an
equiv
alence)
and,
for
eac
h
function
sym
b
ol
f
:







m
!

in

and
elemen
ts
a
;
a
0

A


,
:
:
:
am
;
am
0

A

m
,
a



a
0
^
:
:
:
am


m
am
0
)
A
f
(a
;
:
:
:
am
)


A
f
(a
0
;
:
:
:
am
0
)
then
w
e
sa
y
that

is
a

-c
ongruenc
e
over
A.
If

is
a

-congruence
relation
o
v
er
A,
the
quotien
t
algebra
A=

is
dened
for
eac
h
sort


T
b
y

(A=

)

def
=
fa
:
a

A

:
[
[a
]
]


g
and
for
eac
h
function
sym
b
ol
f
:







m
!

b
y
(A=

)
f
([
[a
]
]



;
:
:
:
[
[am
]
]


m
)
def
=
[
[A
f
(a
;
:
:
:
am
)]
]


End
Denition.
It
is
w
ell
kno
wn
(see,
for
example,
[
section
.])
that
there
is
a
surjectiv
e
ho-
momorphism
from
an
algebra
A
to
an
y
quotien
t
of
A
.
(This
fact
is
used
in
the
discussion
of
b
eha
vioural
equiv
alence
in
c
hapter
.)
Lemma
.	
(homomorphism
to
quotien
t
algebras)
Let

b
e
a
signature
with
sorts
T
,
A
a

-algebra,
and

a

-congruence
o
v
er
A.
The
T
-indexed
function
[
[
]
]

dened
for
eac
h


T
b
y
([
[
]
]

)

def
=
[
[
]
]
(

)
is
a
surjectiv
e

-homomorphism
from
A
to
A=

.
Pro
of
The
homomorphism
condition
follo
ws
immedi
ately
from
the
denition
of
(A=

)
f
.
Surjectivit
y
of
[
[
]
]

follo
ws
from
the
denition
of
(A=

)

.
End
Lemma.

F
or
an
y
equiv
alence
relation
:
A
$
A,
the
e
quivalenc
e
class
[
[a
]
]

of
an
elemen
t
a

A
is
the
set
of
all
v
alues
equiv
alen
t
to
a
.
That
is,
[
[a
]
]

def
=
fa
0
:
a
0

A
^
a

a
0
:
a
0
g.

The
Seman
tics
of
ASL
and
USL
0
..
T
erms,
Deriv
ed
Op
erators
and
Reac
habilit
y
This
section
denes
terms,
in
terpretations
and
deriv
ed
op
erators.
In
essence,
a

(X
)-term
is
an
expression
constructed
using
the
function
sym
b
ols
in
a
signature

and
a
set
of
v
ariable
sym
b
ols
X
.
Throughout
this
thesis,
w
e
use
X
to
denote
an
innite
indexed
set
of
v
ariable
sym
b
ols
suc
h
that
X

and
X

0
are
disjoin
t
if

=

0
.
W
e
sa
y
x
has
sort

(written
x
:

)
if
x

X

.
Denition
.0
(terms)
Let

b
e
a
signature
with
sorts
T
and
X
a
T
-indexed
set
of
v
ariables.
The
T
-indexed
set
W
(
;
X
)
of
nite

-terms
with
v
ariables
X
is
the
least
T
-
indexed
set
(with
resp
ect
to
)
suc
h
that:

x

W
(
;
X
)

if
x

X

f
(ts
)

W
(
;
X
)

if

s

[T
],
f
:

s
!

and
ts

W
(
;
X
)

s
W
e
sa
y
that
t
is
a
\
(X
)-term"
(or
just
\
-term")
if
t

W
(
;
X
).
The
set
of
v
ariables
used
in
a
term
t
(written
v
ars(t
))
is
dened
b
y
v
ars(x
)
def
=
fx
g
v
ars(f
(t
;
:
:
:
tm
))
def
=
v
ars
(t
)
[
:
:
:
v
ars(tm
)
W
e
sa
y
that
a
term
t
is
\ground"
(or
that
t
is
a
\ground
term")
if
v
ars(t
)
=
;.
The
T
-indexed
set
of
v
ariables
used
in
a
term
t
(written
V
ars
(t
))
is
dened
for
eac
h


T
b
y
V
ars

(t
)
def
=
X

\
v
ars
(t
).
W
e
sa
y
that
a

-term
t
has
sort

(written
t
:

)
if
t

W
(
;
X
)

.
This
is
extended
to
lists
and
tuples
of
terms
in
the
ob
vious
w
a
y
.
That
is,
t
;
:
:
:
tm
:


;
:
:
:

m
def
=
t
:


;
:
:
:
tm
:

m
End
Denition.

The
notation
[a
;
:
:
:
am
]

A
[i
;:::
in
]
(where
i
;
:
:
:
in

I
and
A
is
an
I
-indexed
set)
is
an
abbreviation
for
m
=
n
^
a

A
i
^
:
:
:
am

A
in
.

..
Signatures,
Algebras
and
Axioms

F
or
example,
empty
():
Stack
and
top
(push
(x
;
empty
())):
Nat
.
Where
ob
vious
from
con
text,
w
e
drop
the
redundan
t
\()"
after
constan
t
op
erators.
F
or
example,
w
e
write
empty
and
top
(push
(x
;
empty
))
for
the
ab
o
v
e
terms.
Denition
.
(v
aluations
and
in
terpretation)
Let

b
e
a
signature
with
sorts
T
,
A
a

-algebra.
A
v
aluation
is
an
y
partial
T
-indexed
function
v
:
X
+
!
A
(it
\assigns"
v
alues
to
v
ariables).

F
or
an
y
set
of
v
ariables
x

X


,
:
:
:
xm

X

m
and
v
alues
a

A


,
:
:
:
am

A

m
w
e
write
fx
:
=
a
;
:
:
:
xm
:
=
am
g
to
denote
the
least
v
aluation
whic
h,
for
eac
h
i

f
;
:
:
:
m
g
assigns
the
v
alue
ai
to
the
v
ariable
xi
.
That
is,
for
eac
h
i

f
;
:
:
:
m
g,
fx
:
=
a
;
:
:
:
xm
:
=
am
g

i
(xi
)
def
=
ai
Let
t
b
e
a

(X
)-term
and
v
:
X
+
!
A
a
v
aluation
suc
h
that
the
v
alue
of
v

(x
)
is
dened
for
eac
h
x

V
ars
(t
)

(and
p
ossibly
undened
otherwise).
The
v
alue
(or
\in
terpretation")
of
t
in
A
under
v
(written
t
A
(v
))
is
inductiv
ely
dened
b
y:
x
A
(v
)
def
=
v
(x
)
f
(t
;
:
:
:
tm
)
A
(v
)
def
=
A
f
(t
A
(v
);
:
:
:
tm
A
(v
))
If
v
ars(t
)
=
;,
the
v
alue
of
t
A
(v
)
is
indep
enden
t
of
v
and
so
w
e
dene
t
A
def
=
t
A
(fg)
where
fg
denotes
the
completely
undened
v
aluation.
T
o
let
us
emphasize
that
a
function
v
:
X
+
!
A
is
a
v
aluation,
w
e
dene
the
set
V
al
(A)
to
b
e
the
set
of
all
partial
T
-indexed
functions
v
:
X
+
!
A
and
the
set
V
al
(A;
t
)
to
b
e
the
set
of
all
partial
T
-indexed
functions
v
:
X
+
!
A
suc
h
that
v

(x
)
is
dened
for
eac
h
x

V
ars
(t
).
End
Denition.

P
artial
functions
are
used
to
a
v
oid
the
problem
that,
if
an
y
carrier
of
an
algebra
is
empt
y
,
there
is
no
total
T
-indexed
function
v
:
X
!
Aj
T
.
This
solution
is
based
on
that
used
b
y
Sc
ho
ett
in
[].

The
Seman
tics
of
ASL
and
USL

The
follo
wing
prop
ert
y
of
homomorphisms
is
used
in
c
hapter
:
Lemma
.
(represen
tation
of
terms)
Let

b
e
a
signature
with
sorts
T
,
X
a
T
-indexed
set
of
v
ariables,
A
and
B
,

-
algebras
and
h
:
A
!
B
a

-homomorphism.
Then,
for
an
y

(X
)-term
t
and
v

V
al
(A;
t
)
a
v
aluation.
h
(t
A
(v
))
=
t
B
(h
.
v
)
Pro
of
The
pro
of
is
b
y
induction
o
v
er
the
structure
of
t
.
Base
case
(t
def
=
x
)
h
(x
A
(v
))
=
f
denition
of
t
A
(v
)
g
h
(v
(x
))
=
f
denition
of
comp
osition
g
(h
.
v
)(x
)
=
f
denition
of
t
B
(v
)
g
x
B
(h
.
v
)
Inductiv
e
step
(t
def
=
f
(t
;
:
:
:
tm
))
Assume
that
h
(t
A
(v
))
=
t
B
(h
.
v
),
:
:
:
h
(tm
A
(v
))
=
tm
B
(h
.
v
).
h
(f
(t
;
:
:
:
tm
)
A
(v
))
=
f
denition
of
t
A
(v
)
g
h
(A
f
(t
A
(v
);
:
:
:
tm
A
(v
)))
=
f
homomorphism
condition
g
B
f
(h
(t
A
(v
));
:
:
:
h
(tm
A
(v
)))
=
f
ind.
assumption:
h
(t
A
(v
))
=
t
B
(h
.
v
),
:
:
:
h
(tm
A
(v
))
=
tm
B
(h
.
v
)
g
B
f
(t
B
(h
.
v
);
:
:
:
tm
B
(h
.
v
))
=
f
denition
of
t
B
(v
)
g
f
(t
;
:
:
:
tm
)
B
(h
.
v
)
So,
h
(x
A
(v
))
=
x
B
(h
.
v
)
and,
if
h
(t
A
(v
))
=
t
B
(h
.
v
),
:
:
:
h
(tm
A
(v
))
=
tm
B
(h
.
v
),
then
h
(f
(t
;
:
:
:
tm
)
A
(v
))
=
f
(t
;
:
:
:
tm
)
B
(h
.
v
).
Th
us,
b
y
the
principle
of
structural
induction,
h
(t
A
(v
))
=
t
B
(h
.
v
).

..
Signatures,
Algebras
and
Axioms

End
Lemma.
An
elemen
t
a

A

is
reac
hable
if
a
can
b
e
constructed
using
the
op
erations
named
in

.
That
is,
if
for
some
t

W
(
;
;)

,
t
A
=
a
.
More
generally
,
for
some
subsignature

0
of

and
subset
T
0
of
the
sorts
of

,
a
is

0
(T
0
)-reac
hable
if
a
can
b
e
constructed
using
the
op
erations
named
in

0
and
the
v
alues
in
A
j
T
0
.
More
formally
,
Denition
.
(reac
habilit
y
,
reac
hable
subalgebras)
Let

b
e
a
signature
with
sort
sym
b
ols
T
,

0
a
subsignature
of

,
T
0
a
subset
of
T
and
A
a

-algebra.
Let
X
0
b
e
the
T
-indexed
set
of
v
ariables
dened
for
eac
h


T
b
y
X
0

def
=
(
X

;
if


T
0
;
and
;;
otherwise.
F
or
eac
h
sort
sym
b
ol


T
and
v
alue
a

A

,
w
e
sa
y
that
a
is

0
(T
0
)-reac
hable
if
R
(
0
;
T
0
;
a
)
where
R
(
0
;
T
0
;
a
)
def
=
(	t
;
v
:
t

W
(
0
;
X
0
)

^
v

V
al
(A
;
t
)
:
t
A
(v
)
=
a
)
The

0
-algebra
R(
0
;
T
0
;
A)
is
dened
for
eac
h
sort
sym
b
ol



0
b
y
R
(
0
;
T
0
;
A)

def
=
fa
:
a

A

^
R(
0
;
T
0
;
a
):
a
g
and
for
eac
h
function
sym
b
ol
f
:







m
!

in

0
b
y
R
(
0
;
T
0
;
A)
f
def
=
(A
f
)j
R(
0
;T
0
;A)


R(
0
;T
0
;A)

m
Let
B
b
e
a

-algebra
and
h
:
A
!
B
a

-homomorphism.
The
homomorphism
R
(
0
;
T
0
;
h
):
R(
0
;
T
0
;
A)
!
R
(
0
;
T
0
;
B
)
is
dened
for
eac
h
sort


T
b
y
R
(
0
;
T
0
;
h
)

def
=
h
j
R
(
0
;T
0
;A)

End
Denition.

The
Seman
tics
of
ASL
and
USL

[In
early
w
ork
on
algebraic
sp
ecication
(including,
for
example,
[
section
.]),
the
w
ord
\generated"
or
\term-generated"
is
used
instead
of
\reac
hable."
]
It
is
w
ell
kno
wn
(see,
for
example,
[
pro
of
of
theorem
.,
pro
of
of
fact
..
])
that
there
is
an
injectiv
e
homomorphism
to
an
algebra
from
an
y
of
its
reac
h-
able
subalgebras.
(This
fact
is
used
in
the
discussion
of
b
eha
vioural
equiv
alence
in
c
hapter
.)
Lemma
.
(homomorphism
from
reac
hable
subalgebras)
Let

b
e
a
signature
with
sorts
T
,
T
0
a
subset
of
T
,
and
A
a

-algebra.
The
T
-indexed
function
h
dened
for
eac
h


T
and
a

R(
;
T
0
;
A)

b
y
h

(a
)
def
=
a
is
an
injectiv
e

-homomorphism
from
R(
;
T
0
;
A)
to
A.
Pro
of
Since
all
elemen
ts
of
R(
;
T
0
;
A)

can
b
e
written
in
the
form
t
A
(v
)
where
t

W
(
;
X
0
)

and
v

V
al
(A
;
t
),
it
is
straigh
tforw
ard
to
v
erify
that
the
homomorphism
condition
holds.
Injectivit
y
follo
ws
imm
ediatel
y
from
the
denition
of
h
.
End
Lemma.
The
follo
wing
prop
ert
y
is
less
w
ell
kno
wn
|
it
is
used
in
c
hapter

when
establishing
prop
erties
of
b
eha
vioural
equiv
alence.
Lemma
.
(quotien
ts
of
reac
hable
subalgebras)
Let

b
e
a
signature
with
sorts
T
,

0
a
subsignature
of

and
T
0
a
subset
of
T
and
A
and
B

-algebras.
If
h
:
A
!
B
and
h
j
T
0
is
surjectiv
e
then
R
(
0
;
T
0
;
A)=


=
R(
0
;
T
0
;
B
)
where
:
A
j
T
$
Aj
T
is
the

-congruence
dened
for
eac
h
sort


T
and
v
alues
a
;
a

A

b
y
a


a
def
=
h

(a
)
=
h

(a
)

..
Signatures,
Algebras
and
Axioms

Pro
of
Let
the
T
-indexed
function
g
:
R(
0
;
T
0
;
B
)
!
R
(
0
;
T
0
;
A)=

b
e
dened
for
eac
h
sort


T
and
(
0
;
T
0
)-reac
hable
v
alue
b

B

b
y
g

(b
)
def
=
fa
:
h

(a
)
=
b
:
a
g
Then:
.
g
is
bijectiv
e.
Since
R
(
0
;
T
0
;
h
)
is
surjectiv
e,
ev
ery
equiv
alence
class
in
R(
0
;
T
0
;
A)=

cor-
resp
onds
to
precisely
one
(
0
;
T
0
)-reac
hable
v
alue
in
B
.
.
g
is
a
homomorphism.
Since
R(
0
;
T
0
;
h
)
is
surjectiv
e,
it
suces
to
sho
w
that,
for
eac
h
function
sym
b
ol
f
:







m
!

and
(
0
;
T
0
)-reac
hable
v
alues
a
;
:
:
:
am

A


;:::
m
g

(B
f
(h


(a
);
:
:
:
h

m
(am
)))
=
f
h
is
a
homomorphism
g
g

(h

(A
f
(a
;
:
:
:
am
)))
=
f
denition
of
g
g
fa
:
h

(a
)
=
h

(A
f
(a
;
:
:
:
am
)):
a
g
=
f
denition
of

g
fa
:
a


A
f
(a
;
:
:
:
am
):
a
g
=
f
denition
of
[
[
]
]

g
[
[A
f
(a
;
:
:
:
am
)]
]


=
f
denition
of
R(
0
;
T
0
;
A
)
g
[
[R(
0
;
T
0
;
A)
f
(a
;
:
:
:
am
)]
]


=
f
[
[
]
]

is
a
homomorphism
g
R(
0
;
T
0
;
A
)=

f
([
[a
]
]


;
:
:
:
[
[am
]
]


m
)
=
f
[
[a
]
]

=
g

(h

(a
))
g
R(
0
;
T
0
;
A
)=

f
(g


(h


(a
));
:
:
:
g

m
(h

m
(am
)))
Since
g
is
a
bijectiv
e

-homomorphism,
w
e
conclude
that
g
is
a

-isomorphism.
Hence
result.
End
Lemma.

The
Seman
tics
of
ASL
and
USL

..
F
orm
ul
and
Axioms
This
section
denes
form
ul
and
axioms.

-form
ul
are
just
the
standard
form
ul
of
rst-order
logic
with
the
addition
of
equalit
y
o
v
er

-terms
(t
=
t
)
and
\reac
h-
able"
quan
tication
(

0
T
0
x
:

:
P
);

-axioms
are

-form
ul
with
no
free
v
ariables.
Reac
hable
quan
tication
diers
from
normal
quan
tication
in
that
w
e
only
quan
tify
o
v
er
reac
hable
v
alues.
Denition
.
(w
ell
formed
form
ul,
axioms
and
satisfaction)
Let

b
e
a
signature.
The
set
WFF
(
)
of
w
ell-formed

-form
ul
is
dened
as
the
least
set
satisfying
true

WFF
(
)
t
=

t

WFF
(
)
if
t
;
t
in
W
(
;
X
)

:P

WFF
(
)
if
P

WFF
(
)
P
^
Q

WFF
(
)
if
P

WFF
(
)
and
Q

WFF
(
)


0
T
0
x
:

:
P

WFF
(
)
if
P

WFF
(
),

0


and
x

X

x
:

:
P

WFF
(
)
if
P

WFF
(
)
and
x

X

The
set
of
free
v
ariables
in
a
w
ell-formed

-form
ula
is
dened
as
follo
ws.
(Note
the
use
of
free(P
)
 fx
g
in
the
last
line
whic
h
remo
v
es
a
v
ariable
x
from
the
set
of
free
v
ariables
when
it
is
b
ound
b
y
a
quan
tier.)
free(true
)
=
;
free(t
=

t
)
=
v
ars
(t
)
[
v
ars
(t
)
free(:P
)
=
free
(P
)
free(P
^
Q
)
=
free
(P
)
[
free(Q
)
free(

0
T
0
x
:

:
P
)
=
free
(P
)
 fx
g
free(x
:

:
P
)
=
free
(P
)
 fx
g
The
T
-indexed
set
of
free
v
ariables
in
a
form
ula
P
(written
F
ree(P
))
is
dened
for
eac
h


T
b
y
F
ree

(P
)
def
=
X

\
free
(P
).
W
e
extend
the
notation
for
v
aluations
b
y
dening
V
al(A;
P
)
to
b
e
the
set
of
all
partial
T
-indexed
functions
v
:
X
+
!
A
suc
h
that
v

(x
)
is
dened
for
eac
h
x

F
ree(P
).

..
Signatures,
Algebras
and
Axioms

A
w
ell-formed

-form
ula
ax
is
a

-axiom
if
free
(ax
)
=
;.
W
e
write
Axm
(
)
to
denote
the
set
of
all

-axioms.
Let
A
b
e
an
algebra,
P
a
w
ell-formed

-form
ula
and
v

V
al(A;
P
)
a
v
aluation.
The
satisfaction
of
P
b
y
A
with
resp
ect
to
v
(written
A
j
=
v
P
)
is
dened
b
y
A
j
=
v
true
def
=
true
A
j
=
v
t
=

t
def
=
t
A
(v
)
=
t
A
(v
)
A
j
=
v
:P
def
=
:(A
j
=
v
P
)
A
j
=
v
P
^
Q
def
=
(A
j
=
v
P
)
^
(A
j
=
v
Q
)
A
j
=
v
(

0
T
0
x
:

:
P
)
def
=
(a
:
a

A

^
R
(
0
;
T
0
;
a
)
:
A
j
=
v
fx
:=a
g
P
)
A
j
=
v
(x
:

:
P
)
def
=
(a
:
a

A

:
A
j
=
v
fx
:=a
g
P
)
F
or
an
y

-algebra
A
and

-axiom
ax
,
A
satises
ax
(written
A
j
=
ax
)
i
A
j
=
fg
ax
where
fg
denotes
the
completely
undened
v
aluation.
Also,
for
an
y
set
Ax
of

-
axioms,
w
e
write
A
j
=
Ax
as
an
abbreviation
for
(ax
:
ax

Ax
:
A
j
=
ax
).
End
Denition.
Our
denition
of
reac
hable
quan
tication
is
based
on
that
of
Sc
ho
ett
[,].
It
diers
in
that
w
e
mak
e
the
signature

0
and
set
of
sorts
T
0
explicit
whereas
Sc
ho
ett
requires

0
=

and
mak
es
the
set
T
0
implicit
in
what
he
calls
an
\observ
ational
signature."
The
use
of
reac
hable
quan
tication
in
the
algebraic
literature
can
b
e
traced
(at
least)
as
far
bac
k
as
Maibaum
et
al.
[,]
and
P
oign

e
[].
All
these
early
w
orks
use
reac
hable
quan
tication
for
the
same
purp
ose
as
mo
del-based
sp
ecications
use
in
v
arian
ts:
to
restrict
the
domain
of
concern
to
those
v
alues
whic
h
the
sp
ecier
exp
ects
programs
to
encoun
ter
during
execution
|
that
is,
the
reac
hable
v
alues.
Wirsing
and
Bro
y
[]
dene
a
family
of
predicates


0

for
eac
h
(non-empt
y)
subsignature

0
of

and
eac
h
sort


Tp(
)
with
seman
tics
A
j
=
v
t


0

def
=
R(
0
;
;;
t
A
(v
))

The
Seman
tics
of
ASL
and
USL

whic
h
they
use
to
dene
a
less
general
form
of
reac
hable
quan
tication
(restricted
to
the
case
that
T
0
=
;)
b
y


0
x
:

:
P
def
=
x
:

:
x


0

)
P
W
e
could
remo
v
e
x
:

:
P
from
the
denition
of
WFF
(
)
since
it
can
b
e
dened
as
follo
ws:
x
:

:
P
def
=

;
f
g
x
:

:
P
W
e
dene
the
abbreviations
=,
_,
),
,,
:
:
:
in
the
usual
manner.
F
or
example,
w
e
ha
v
e:
t
=

t
def
=
:(t
=

t
)
P
_
Q
def
=
:((:P
)
^
(:Q
))
P
)
Q
def
=
(:P
)
_
Q
P
,
Q
def
=
(P
)
Q
)
^
(Q
)
P
)
	x
:

:
P
def
=
:x
:

:
:P
	

0
T
0
x
:

:
P
def
=
:

0
T
0
x
:

:
:P
t


0
(T
0
)

def
=
(	

0
T
0
y
:

:
y
=

t
)
It
is
w
ell
kno
wn
that
rst-order
logic
cannot
distinguish
reac
hable
and
unreac
hable
mo
dels
of
the
natural
n
um
b
ers
(see,
for
example,
[
corollary
..])
whereas
the
axiom
x
:
Nat
:
	
f0
;suc
c
g
;
y
:
Nat
:
x
=
Nat
y
can.
Therefore,
the
addition
of
reac
hable
quan
tication
increases
the
expressiv
e
p
o
w
er
of
rst-order
logic.
.
Sp
ecications
This
section
denes
the
seman
tics
of
the
languages
ASL
and
USL
and
presen
ts
some
examples
of
their
use.
The
bulk
of
this
w
ork
lies
in
the
denition
of
some
\sp
eci-
cation
building
op
erations"
whic
h
are
used
to
construct
complex
sp
ecications
out
of
simple
sp
ecications.

..
Sp
ecications
	
One
imp
ortan
t
p
oin
t
to
note
ab
out
ASL
and
USL
is
that
if
an
axiom
holds
in
an
ASL/USL
sp
ecication,
then
it
m
ust
hold
in
all
impleme
n
tations
of
that
sp
ecica-
tion.
F
or
example,
all
implem
en
tations
of
the
sp
ecication
Bo
ol
in
the
in
tro
duction
to
this
c
hapter
will
satisfy
the
axiom
x
:
Bo
ol
:
x
=
T
rue
_
x
=
F
alse
and
so
will
ha
v
e
at
most
t
w
o
elemen
ts
in
the
sort
Bo
ol
.
ASL
and
USL
are
un
usual
in
this
resp
ect
in
that
the
seman
tics
of
man
y
alternativ
e
sp
ecication
languages
allo
w
implem
en
tations
whic
h
do
not
literally
satisfy
the
ax-
ioms
as
long
as
the
user
of
suc
h
an
implem
e
n
tation
could
not
tell
that
the
axiom
w
as
brok
en.
F
or
example,
the
notion
of
impleme
n
tation
prop
osed
b
y
ADJ
[	
section
.]
is
based
on
the
relationship


meaning
\isomorphic
to
a
subalgebra
of
".
Under
this
notion
of
implem
e
n
tation,
it
w
ould
b
e
p
ossible
for
an
implem
en
tation
of
the
sp
eci-
cation
Bo
ol
to
ha
v
e
three
elemen
ts
in
the
sort
Bo
ol
since
suc
h
an
implem
en
tation
w
ould
ha
v
e
mo
dels
whic
h
are
isomorphic
to
a
subalgebra
of
a
mo
del
of
Bo
ol
.
..
Sp
ecication
Building
Op
erations
Man
y
pap
ers
ha
v
e
b
een
written
ab
out
ASL
(see,
for
example,
[{0,{,0
,]);
eac
h
dening
a
sligh
tly
dieren
t
set
of
sp
ecication
building
op
erations.
Rather
than
list
all
op
erations
ev
er
dened
for
ASL,
w
e
shall
consider
only
those
op
erations
whic
h
app
ear
in
all
denitions
of
ASL.
That
is,
w
e
consider
the
follo
wing
v
e
sp
ecication
building
op
erations:

The
simplest
form
of
sp
ecication
consists
of
a
signature
and
set
of
axioms.
Suc
h
sp
ecications
are
kno
wn
as
\at"
sp
ecications.

Just
as
reducts
are
used
to
hide,
rename
or
cop
y
ob
jects
in
an
algebra,
so
the
sp
ecication
building
op
eration
\deriv
e"
is
used
to
hide,
rename
or
cop
y
ob
jects
in
a
sp
ecication.

The
Seman
tics
of
ASL
and
USL
0

The
con
v
erse
of
\deriv
e"
is
\translate"
whic
h
is
primarily
used
to
dene
the
extension
of
a
sp
ecication
to
a
larger
signature.

The
constrain
ts
placed
on
implem
en
tations
of
the
sp
ecication
SP
[
SP
con-
sists
of
the
constrain
ts
placed
on
implem
en
tations
of
SP
and
the
constrain
ts
placed
on
implem
en
tations
of
SP
.

The
abstractor
\b
eha
viour"
closes
a
sp
ecication
under
b
eha
vioural
equiv-
alence.
W
e
ha
v
e
c
hosen
to
dela
y
the
denition
and
discussion
of
b
eha
vioural
equiv
alence
un
til
c
hapter

to
k
eep
all
discussion
of
b
eha
vioural
equiv
alence
and
b
eha
vioural
closure
in
one
c
hapter.
F
or
no
w,
it
suces
to
kno
w
that
w
e
are
going
to
mo
del
b
eha
vioural
equiv
alence
of
program
mo
dules
b
y
an
equiv
alence
relation
IN
 
!
OUT
:
Alg(
)
$
Alg
(
)
b
et
w
een
algebras.
These
v
e
sp
ecication
building
op
erations
are
dened
as
follo
ws:
Denition
.
(sp
ecications)
Let

and

0
b
e
signatures,
Ax
a
set
of

-axioms.
The
set
Sp
ec
(
)
of

-sp
ecications
is
dened
as
the
least
set
satisfying
h
;
Ax
i

Sp
ec
(
)
if
Ax

Axm

deriv
e
from
SP
0
b
y


Sp
ec
(
)
if
SP
0

Sp
ec
(
0
)
and

:

!

0
translate
SP
0
b
y


Sp
ec
(
)
if
SP
0

Sp
ec
(
0
)
and

:

0
!

SP
[
SP

Sp
ec
(
)
if
SP
;
SP

Sp
ec
(
)
b
eha
viour
SP
wrt
(IN
;
OUT
)

Sp
ec
(
)
if
SP

Sp
ec
(
)
and
IN
;
OUT

Tp
(
)
The
signature
of
a
sp
ecication
SP

Sp
ec
(
)
(written
Sig(SP
))
is
the
signature

.
Ev
ery
w
ell-formed
sp
ecication
SP

Sp
ec(
)
determines
a
class
of
algebras
Mo
d(SP
)

Alg
(
)
(the
\mo
dels"
of
SP
).
This
set
is
inductiv
ely
dened
b
y

..
Sp
ecications

Mo
d(h
;
Ax
i)
def
=
fA
:
A

Alg
(
)
^
A
j
=
Ax
:
A
g
Mo
d(deriv
e
from
SP
0
b
y

)
def
=
fA
:
A

Mo
d
(SP
0
)
:
Aj

g
Mo
d(translate
SP
0
b
y

)
def
=
fA
:
Aj


Mo
d
(SP
0
)
:
Ag
Mo
d(SP
[
SP
)
def
=
Mo
d(SP
)
\
Mo
d(SP
)
Mo
d(b
eha
viour
SP
wrt
(IN
;
OUT
))
def
=
Cl
IN
 
!
OUT
(SP
)
A

-algebra
A
is
said
to
b
e
a
mo
del
of
a

-sp
e
cic
ation
SP
(written
A:
SP
)
if
A

Mo
d(SP
).
Tw
o
sp
ecications
SP
;
SP
:
Sp
ec
(
)
are
said
to
b
e
equiv
alen
t
(written
SP
=
SP
)
if
Mo
d(SP
)
=
Mo
d(SP
).
A
sp
ecication
is
said
to
b
e
\inconsisten
t"
if
Mo
d(SP
)
=
;
and
\consisten
t"
otherwise.
A
sp
ecication
SP

Sp
ec(
)
is
said
to
satisfy
a

-axiom
ax
(written
SP
j
=
ax
)
if
ev
ery
mo
del
of
SP
satises
ax
.
End
Denition.
Omissions
and
Abbreviations
Man
y
other
ASL
op
erations
ha
v
e
b
een
suggested
in
[{0,{,0,].
Some
of
these
are
easily
dened
as
abbreviations
using
the
ab
o
v
e
op
erations
whilst
others
are
rarely
used
but
are
included
for
completeness.
(The
rst

are
used
in
this
thesis;
quotien
t
and
extend
to
via
are
used
as
examples
in
c
hapter
.)

sp
ec
sign

axioms
Ax
end
def
=
h
;
Ax
i

The
op
eration
exp
ort

0
from
hides
those
sym
b
ols
not
o
ccurring
in

0
;
the
op
eration
hide
S
in
hides
those
sym
b
ols
that
o
ccur
in
a
set
S
of
sym
b
ols.
exp
ort

0
from
SP
def
=
deriv
e
from
SP
b
y

hide
S
in
SP
def
=
exp
ort

 S
from
SP
where

:

0
,
!
Sig(SP
)

The
op
eration
extend
to

adds
the
sym
b
ols
o
ccurring
in

to
a
sp
ecica-
tion.
extend
SP
0
to

def
=
translate
SP
0
b
y


The
Seman
tics
of
ASL
and
USL

where

:
Sig(SP
0
)
,
!


The
op
eration
+
is
lik
e
[
but
is
used
to
com
bine
sp
ecications
with
o
v
erlapping
(rather
than
iden
tical)
signatures.
SP
+
SP
def
=
(extend
SP
to

[

)
[
(extend
SP
to

[

)
where

=
Sig
(SP
)
and

=
Sig
(SP
).

The
op
eration
imp
ose
Ax
on
restricts
the
mo
dels
of
a
sp
ecication
to
those
satisfying
the
axioms
Ax
.
imp
ose
Ax
on
SP
def
=
SP
[
hSig
(SP
)
;
Ax
i

The
op
eration
enric
h
b
y
sign
S
axioms
Ax
end
tak
es
a
sp
ecication
SP
0
and
b
oth
adds
the
sym
b
ols
S
to
the
signature
of
SP
0
and
imp
oses
the
axioms
Ax
on
SP
0
.
enric
h
SP
0
b
y
sign

 
0
axioms
Ax
end
def
=
SP
0
+
h
;
Ax
i
where

0
=
Sig
(SP
0
).

The
op
eration
reac
hable
on
T
0
restricts
the
mo
dels
of
a
sp
ecication
to
those
whic
h
are
reac
hable
on
the
sorts
T
0
.
reac
hable
SP
on
T
0
def
=
imp
ose
x
:


:
x


(T
 T
0
)


.
.
.
xm
:

m
:
xm


(T
 T
0
)

m
on
SP
where

=
Sig(SP
),
T
=
Tp(
)
and
T
0
=
f

;
:
:
:

m
g.

..
Sp
ecications


The
op
eration
quotien
t
wrt
E
is
dened
in
[	]
b
y
Mo
d(quotien
t
SP
wrt
E
)
def
=
fA
:
A

Mo
d(SP
):
A=

g
where

is
a

-congruence
determined
b
y
the
set
E
of

-equations
(see
[	]
for
details
of
).

The
op
eration
extend
to
SP
0
via

is
dened
in
[	]
b
y
Mo
d(extend
SP
to
SP
0
via

)
def
=
fA:
A

Mo
d(SP
):
F

(A)g
where
SP
0
is
an
equational
sp
ecication
and
F

:
Alg(Sig
(SP
))
!
Mo
d(SP
0
)
is
a
free
functor
(see
[	]
for
details
of
F

).

Most
pap
ers
describing
ASL
describ
e
an
op
erator

for
forming
parameterised
sp
ecications;
t
w
o
recen
t
pap
ers
describing
ASL
[0,]
dene
an
op
erator

for
forming
sp
ecications
of
parameterised
programs
(cf.
Standard
ML's
\functors").
W
e
do
not
attempt
to
discuss
parameterisation
in
this
thesis.
Implemen
tation
Informal
notions
of
step
wise
implem
en
tation
of
a
sp
ecication
or
step
wise
program
design
are
based
on
the
idea
that
one
program
design
is
an
implem
en
tation
of
another
if
it
incorp
orates
more
design
decisions.
Sannella
and
T
arlec
ki
[	]
formalise
this
using
the
renemen
t
relation
\ "
on
sp
ecications
dened
b
y
SP
 
SP
def
=
Mo
d(SP
)

Mo
d(SP
)
Since
the
relation
 
is
transitiv
e,
w
e
can
conclude
that
SP
 
SPm
if
w
e
ha
v
e
sho
wn
that
SP
 
SP
 



SPm
.
That
is,
if
w
e
dev
elop
an
implem
en
tation
SPm
from
SP
in
a
series
of
renemen
t
steps,
w
e
are
guaran
teed
that
SPm
is
an
impleme
n
tation
of
SP
.

The
Seman
tics
of
ASL
and
USL

A
t
rst
glance,
this
idea
of
\implem
en
ti
ng"
a
sp
ecication
b
y
another
sp
ecication
migh
t
seem
to
b
e
rather
useless:
if
an
\implem
en
tati
on"
is
itself
an
ASL
sp
ecica-
tion,
it
will
not
b
e
p
ossible
to
directly
execute
the
\implem
en
t
ation."
Bro
y
et
al.'s
justication
for
suc
h
a
denition
is
as
follo
ws
[
section
]:
:
:
:
if
it
happ
ens
that
SP
sp
ecies
precisely
the
b
eha
viour
of
particular
data
structures
in
a
concrete
programming
language
then
a
program
o
v
er
these
t
yp
es
is
b
oth
abstract
and
concrete.
So
a
class
of
data
t
yp
es
(for
whic
h
soft
w
are
realisations
are
a
v
ailable)
should
b
e
giv
en,
and
the
t
yp
es
of
an
abstract
program
should
b
e
replaced
b
y
algebraic
implem
en
tati
ons
un
til
it
is
based
on
the
giv
en
target
t
yp
es.
An
example
of
a
sp
ecication
language
whic
h
includes
a
set
of
concrete
data
t
yp
es
is
Extended
ML
[,,]
whic
h
consists
of
a
blend
of
rst-order
logic
and
(a
functional
subset
of
)
the
programming
language
Standard
ML.
..
Examples
This
section
giv
es
some
examples
of
t
ypical
sp
ecications
written
in
the
ab
o
v
e
sp
ec-
ication
language
and
informally
explains
their
meaning.
The
rst
sp
ecication
is
a
rep
eat
of
the
sp
ecication
of
b
o
oleans
from
the
in
tro
duc-
tion
to
this
c
hapter.
The
sp
ecication
has
a
single
sort
and
t
w
o
constan
t
op
erations
on
that
sort.
The
rst
axiom
requires
that
these
constan
ts
ha
v
e
dieren
t
v
alues;
and
the
second
axiom
requires
that
ev
ery
v
alue
of
the
sort
Bo
ol
is
equal
to
one
constan
t
or
another.
The
result
is
that
the
sort
Bo
ol
has
precisely
t
w
o
v
alues
in
it:
T
rue
and
F
alse.
Bo
olBase
def
=
sp
ec
sign
Bo
ol
:t
yp
e
T
rue
;
F
alse
:!
Bo
ol
axioms
T
rue
=
F
alse
x
:
Bo
ol
:
x
=
T
rue
_
x
=
F
alse
end

..
Sp
ecications

Using
the
abbreviation
x


0
(T
0
)
from
section
..,
the
second
axiom
could
also
ha
v
e
b
een
written
as:
x
:
Bo
ol
:
x

fT
rue
;
F
alseg(;)
The
second
sp
ecication
is
a
small
sp
ecication
of
the
natural
n
um
b
ers.
The
sp
eci-
cation
has
a
single
sort
Nat
and
op
erations
0
and
suc
c
for
constructing
the
naturals
(
=
suc
c
(0
),

=
suc
c
(
),
etc.).
The
third
axiom
ensures
that
eac
h
v
alue
in
Nat
can
b
e
constructed
using
0
and
suc
c
(eliminating
v
alues
lik
e
 
or
innit
y)
while
the
rst
and
second
axioms
ensure
that
ev
ery
v
alue
can
b
e
uniquely
constructed
(so
0
=

=

=

=
:
:
:
).
NatBase
def
=
sp
ec
sign
Nat
:t
yp
e
0
:!
Nat
suc
c
:
Nat
!
Nat
axioms
m
:
Nat
:
suc
c
(m
)
=
0
m
;
n
:
Nat
:
suc
c
(m
)
=
suc
c
(n
)
)
m
=
n
m
:
Nat
:
m

f0
;
suc
c
g(;)
end
If
w
e
allo
w
ed
innitary
axioms,
it
w
ould
b
e
p
ossible
to
replace
the
third
axiom
b
y
m
:
Nat
:
m
=
0
_
m
=
suc
c
(0
)
_
m
=
suc
c
(suc
c
(0
))
_
:
:
:
Our
nal
example
(gure
.)
sho
ws
ho
w
these
simple
sp
ecications
can
b
e
com
bined
and
extended
to
giv
e
larger
sp
ecications.
The
rst
four
axioms
sp
ecify
the
usual
logical
op
erators
on
b
o
oleans.
The
remaining
axioms
sp
ecify
addition,
subtraction
and
comparision
op
erators
and
the
constan
ts

and

.
Note
that
all
axioms
are
either
an
exhaustiv
e
case
analysis
or
of
the
form
xs
:

s
:
f
(xs
)
=
t
so
these
op
erations
are
fully
dened
o
v
er
their
inputs.

The
Seman
tics
of
ASL
and
USL

Nat
def
=
enric
h
Bo
olBase
+
NatBase
b
y
sign
and
;
or
:
Bo
ol

Bo
ol
!
Bo
ol
not
:
Bo
ol
!
Bo
ol
+
;
 :
Nat

Nat
!
Nat

;

:!
Nat

;
<
;
>
;

:
Nat

Nat
!
Bo
ol
axioms
T
rue
and
T
rue
=
T
rue
^
T
rue
and
F
alse
=
F
alse
F
alse
and
T
rue
=
F
alse
^
F
alse
and
F
alse
=
F
alse
not
(T
rue)
=
F
alse
^
not
(F
alse
)
=
F
alse
b
;
b
:
Bo
ol
:
b
or
b
=
not
(not
(b
)
and
not
(b
))
m
;
n
:
Nat
:
m
+
suc
c
(n
)
=
suc
c
(m
+
n
)
^
m
+
0
=
m
^
suc
c
(m
)
 suc
c
(n
)
=
m
 n
^
m
 0
=
m
^
0
 n
=
0
^
suc
c
(m
)

suc
c
(n
)
=
m

n
^
suc
c
(m
)

0
=
T
rue
^
0

suc
c
(n
)
=
F
alse
^
0

0
=
T
rue
^
m
<
n
=
not
(m

n
)
^
m

n
=
n

m
^
m
>
n
=
not
(m

n
)

=
suc
c
(0
)
^

=
suc
c
(
)
end
Figure
.:
Sp
ecication
of
Natural
Num
b
ers
.
The
ASL
and
USL
sublanguages
This
c
hapter
has
dened
a
large
sp
ecication
language
con
taining
t
w
o
smaller
lan-
guages.
This
section
denes
these
sublanguages.

The
rst
sublanguage
is
ASL:
a
sp
ecication
language
dev
elop
ed
b
y
Sannella,
T
arlec
ki
and
Wirsing
[	,0,].
When
it
w
as
rst
describ
ed
[],
a
distinguishing
feature
w
as
the
use
of
the
b
eha
vioural
abstraction
op
erator
b
eha
viour
wrt
(
;
).
Although
ASL
is

..
The
ASL
and
USL
sublanguages

generally
describ
ed
in
an
\institution
indep
enden
t"
manner
(that
is
without
reference
to
an
y
particular
logical
framew
ork),
w
e
shall
only
consider
that
of
rst
order
logic
in
this
thesis.
That
is,
ASL
sp
ecications
are
all
sp
ecications
in
Sp
ec
whic
h
do
not
use
reac
hable
quan
tication.

The
second
sublanguage
is
the
language
dev
elop
ed
b
y
Wirsing
and
Bro
y
[,]
whic
h
w
e
call
USL.
A
notable
feature
of
this
language
is
its
use
of
reac
hable
quan
tication
and
its
lac
k
of
the
b
eha
vioural
abstraction
op
erator
b
eha
viour
wrt
(
;
)
(c
hap-
ter

explores
ho
w
\abstract"
sp
ecications
can
b
e
written
without
suc
h
an
op
erator.)
That
is,
USL
sp
ecications
are
all
sp
ecications
in
Sp
ec
whic
h
do
not
use
b
eha
vioural
abstraction.
In
summary
,
the
dierences
b
et
w
een
the
languages
ASL
and
USL
lies
in
ho
w
they
a
v
oid
o
v
ersp
ecication:
ASL
allo
ws
the
b
eha
vioural
abstraction
op
erator
but
USL
do
es
not;
and
ASL
do
es
not
allo
w
reac
hable
quan
tication
but
USL
do
es.

Chapter

Beha
vioural
Equiv
alence
Chapter

argues
that
it
is
imp
ortan
t
that
an
y
framew
ork
for
formal
program
dev
el-
opmen
t
should
allo
w
an
y
\legitimate"
informal
program
dev
elopmen
t
and
fo
cusses
on
the
follo
wing
closure
prop
ert
y:
If
a
program
mo
dule
implem
en
ts
a
sp
ecication
then
so
should
all
b
e-
ha
viourally
equiv
alen
t
program
mo
dules.
This
c
hapter
formally
denes
the
notion
of
b
eha
vioural
equiv
alence
used
in
this
thesis.
There
are
a
v
ariet
y
of
alternativ
e
denitions
used
in
the
literature
and
so
it
is
imp
or-
tan
t
to
sho
w
ho
w
our
denition
relates
to
these
denitions
and
to
justify
our
c
hoice
o
v
er
the
alternativ
es.
W
e
sho
w
that
our
denition
is
a
sligh
t
generalisation
of
that
of
Meseguer
and
Goguen
[]
and
sligh
tly
stronger
than
the
notions
of
b
eha
vioural
reduction
and
b
eha
vioural
equiv
alence
of
Sannella
and
T
arlec
ki
[].
Section
.
explores
the
utilit
y
of
our
generalisation
of
Meseguer
and
Goguen's
de-
nition
|
demonstrating
that
sp
ecial
cases
corresp
ond
to
isomorphism,
isomorphism
of
subalgebras,
etc.
and
in
v
estigating
a
few
simple
prop
erties
of
b
eha
vioural
equiv-
alence.
Section
.
discusses
ho
w
b
eha
vioural
equiv
alence
ma
y
b
e
applied
to
sp
ecications
and
sho
ws
ho
w
the
sp
ecial
cases
discussed
in
the
previous
section
giv
e
rise
to
a


Beha
vioural
Equiv
alence
	
v
ariet
y
of
common
sp
ecication
building
op
erations.
In
[],
Sc
ho
ett
iden
ties
a
set
of
axioms
he
calls
\observ
ational
axioms"
(written
Axm
(IN
;
OUT
)

)
and
argues
(without
pro
of
)
that,
for
an
y
observ
ational
axiom
ax

Axm
(IN
;
OUT
),
and
b
eha
viourally
equiv
alen
t
algebras
A
and
B
,
A
j
=
ax
,
B
j
=
ax
Section
.
denes
observ
ational
axioms
and
v
eries
that
their
satisfaction
is
indeed
in
v
arian
t
under
our
denition
of
b
eha
vioural
equiv
alence.
This
result
is
in
teresting
for
three
reasons:
.
Sc
ho
ett's
argues
that
an
y
notion
of
b
eha
vioural
equiv
alence
should
satisfy
this
condition
|
v
erifying
that
it
do
es
so
increases
condence
that
our
denition
is
useful.
.
Sannella
and
T
arlec
ki
ha
v
e
demonstrated
that
their
notion
of
b
eha
vioural
equiv
alence
do
es
not
quite
satisfy
the
ab
o
v
e
condition
(they
are
forced
to
constrain
the
form
of
quan
tication
allo
w
ed).
W
e
use
this
fact
in
demonstrat-
ing
that
our
denition
of
b
eha
vioural
equiv
alence
is
indeed
stronger
than
that
of
Sannella
and
T
arlec
ki.
.
Finally
,
this
result
se
ems
to
p
oin
t
the
w
a
y
to
w
ards
a
subset
of
USL
based
only
on
observ
ational
axioms
in
whic
h
all
sp
ecications
w
ould
naturally
b
e
b
eha
viourally
closed.
Sadly
,
an
\imp
ossibilit
y
theorem"
b
y
Sc
ho
ett
[]
sho
ws
that
the
resulting
language
w
ould
b
e
to
o
w
eak
to
b
e
useful
(this
result
is
discussed
in
section
..)
The
w
eakness
of
suc
h
a
language
motiv
ates
the
w
ork
in
the
next
c
hapter
where
w
e
examine
the
approac
h
tak
en
b
y
Wirsing
and
Bro
y
[,].
W
e
b
egin
with
an
informal
justication
for
b
eha
vioural
equiv
alence;
similar
justi-
cations
can
b
e
found
in,
for
example,
[,,,,].)

Sc
ho
ett's
notation
is
L
(
;
V
)
where
V
=
IN
=
OUT
.

Beha
vioural
Equiv
alence
0
The
essence
of
b
eha
vioural
equiv
alence
is
an
attempt
to
mo
del
the
eect
of
infor-
mation
hiding
in
mo
dular
programming.
Sp
ecically
,
t
w
o
algebras
are
regarded
as
b
eha
viourally
equiv
alen
t
(with
resp
ect
to
a
giv
en
\in
terface")
if
their
\visible
parts"
(as
determined
b
y
the
\in
terface")
are
indistinguishable.
An
example
(due
to
Sannella
and
T
arlec
ki
[])
is
of
a
mo
dule
pro
viding
a
set-lik
e
abstract
data
t
yp
e
Bunch
and
op
erations
empty
:
!
Bunch
,
add
:
Nat

Bunch
!
Bunch
and
:
Nat

Bunch
!
Bo
ol
(as
w
ell
as
the
t
yp
es
Bo
ol
and
Nat
and
the
usual
op
erations
on
these
t
yp
es).
There
are
sev
eral
sensible
implem
en
tations
of
suc
h
a
mo
dule
diering
only
in
their
implem
e
n
tation
of
the
t
yp
e
Bunch
and
op
erations
on
that
t
yp
e.
F
or
example,
one
migh
t
ha
v
e
implem
en
tation
A
whic
h
represen
ts
a
Bunch
b
y
an
unordered
arra
y
of
naturals;
and
implem
e
n
tation
B
whic
h
represen
ts
a
Bunch
b
y
an
ordered
binary
tree
with
no
duplicates.
Despite
A
and
B
ha
ving
dieren
t
represen
tations,
a
program
whic
h
uses
implem
e
n
tation
A
should
b
e
able
to
use
impleme
n
tation
B
(and
vice-v
ersa)
without
(other)
mo
dication.
W
e
sa
y
\should"
b
ecause
this
will
ob
viously
only
b
e
true
if
the
program
treats
Bunch
as
an
abstract
data
t
yp
e
|
that
is,
if
it
only
constructs,
mo
dies
and
accesses
v
alues
of
t
yp
e
Bunch
through
the
a
v
ailable
op
erations
(empty
,
add
and
)
and
if
its
correctness
dep
ends
only
on
the
v
alues
of
expressions
of
the
form
a

add
(a
;
:
:
:
add
(am
;
empty
)
:
:
:
)
giving
the
appropriate
answ
er.
That
is,
A
ma
y
b
e
replaced
b
y
B
b
ecause
A
is
b
ehaviour
al
ly
e
quivalent
to
B
with
r
esp
e
ct
to
terms
of
sort
Bo
ol
.
W
e
shall
no
w
formally
dene
the
b
eha
vioural
equiv
alence
relation.
It
is
con
v
enien
t
to
b
egin
with
a
sp
ecial
case
directly
inspired
b
y
the
ab
o
v
e
example
and
then
generalise.
.
Beha
vioural
Equiv
alence
|
Sp
ecial
Case
The
\Bunch
example"
ab
o
v
e
immediatel
y
suggests
the
follo
wing
denition
(due
to
Sannella
and
T
arlec
ki
[	
example
.]).
Note
that
this
is
a
sp
e
cial
c
ase
of
deni-
tion
.
b
elo
w.

..
Beha
vioural
Equiv
alence
|
Sp
ecial
Case

Denition
.
(Beha
vioural
equiv
alence
|
ground
case)
Let

b
e
a
signature
with
sorts
T
,
W
a
subset
ofW
(
;
;)
and
let
A
and
B
b
e
t
w
o

-algebras.
The
algebras
A
and
B
are
observational
ly
e
quivalent
with
r
esp
e
ct
to
W
(written
A

W
B
)
if,
for
all
sorts


T
and
terms
t
;
t

W

,
A
j
=
t
=

t
,
B
j
=
t
=

t
Let
OBS
b
e
a
subset
of
T
.
The
algebras
A
and
B
are
b
ehaviour
al
ly
e
quivalent
with
r
esp
e
ct
to
OBS
(written
A

OBS
B
)
if
A

W
(
;;)j
OBS
B
(That
is,
if
A

W
0
B
where
W
0
is
the
T
-indexed
set
of
all
ground
terms
with
sort


OBS
.)
End
Denition.
There
are
t
w
o
alternativ
e
(equiv
alen
t)
w
a
ys
of
dening
this
sp
ecial
case
of
b
e-
ha
vioural
equiv
alence.
The
rst
is
(also)
due
to
Sannella
and
T
arlec
ki
while
the
second
is
based
on
a
denition
due
to
Meseguer
and
Goguen.
Sannella
and
T
arlec
ki's
alternativ
e
denition
[
section
]
has
a
more
\axiomatic
a
v
our"
and
is
based
on
the
use
of
axioms
instead
of
terms.
They
dene
observ
a-
tional
equiv
alence
with
resp
ect
to
a
set
of
axioms
and
suggest
b
eha
vioural
equiv
a-
lence
with
resp
ect
to
a
set
of
sorts
as
a
sp
ecic
instance.
Denition
.
(Beha
vioural
equiv
alence
|
alternativ
e
denition)
Let

b
e
a
signature,
OBS
a
subset
of
the
sorts
of

,
Ax
a
set
of

-axioms
and
A
and
B
t
w
o

-algebras.
The
algebras
A
and
B
are
observational
ly
e
quivalent
with
r
esp
e
ct
to
Ax
(written
A

Ax
B
)
if,
for
all
axioms
ax

Ax
,
A
j
=
ax
,
B
j
=
ax

Beha
vioural
Equiv
alence

The
set
EQ
OBS
of
ground

-equations
o
v
er
sorts
in
OBS
is
dened
b
y
EQ
OBS
def
=
f
;
t
;
t
:


OBS
^
t
;
t

W
(
;
;)

:
t
=

t
g
End
Denition.
[W
e
note
that
the
prop
ert
y
of
observ
ational
axioms
claimed
b
y
Sc
ho
ett
page
	
is
almost
iden
tical
to
the
denition
of

Ax
.
The
dierence
is
that
the
former
is
a
pr
op
erty
of
the
set
Axm
(IN
;
OUT
)
while
the
latter
is
the
denition
of

Ax
.]
It
is
trivial
to
sho
w
that

OBS
is
equiv
alen
t
to

EQ
OBS
.
Meseguer
and
Goguen's
alternativ
e
denition
of
b
eha
vioural
equiv
alence
[
sec-
tion
]
uses
homomorphisms
giving
it
a
more
\mo
del-theoretic
a
v
our."
An
appro-
priate
sp
e
cial
c
ase
of
their
denition
is
the
follo
wing
(w
e
dela
y
stating
the
precise
relationship
of
this
sp
ecial
case
to
their
actual
denition
un
til
after
the
general
denition).
Denition
.
(Beha
vioural
equiv
alence
|
alternativ
e
denition)
Let

b
e
a
signature,
OBS
a
subset
of
the
sorts
of

and
A
and
B
t
w
o

-algebras.
If
h
:
A
!
B
is
a

-homomorphism
suc
h
that,
for
eac
h
sort


OBS
,
h

is
injectiv
e,
w
e
sa
y
that
h
is
a
OBS
-homomorphism
and
write
h
:
A
!
OBS
B
.
The
relation
!
OBS
:
Alg(
)
$
Alg(
)
is
dened
for

-algebras
A
and
B
b
y
A
!
OBS
B
i
there
is
a
OBS
-homomorphism
h
:
A
!
OBS
B
The
relation
 
!
OBS
:
Alg(
)
$
Alg(
)
is
dened
to
b
e
the
least
equiv
alence
con
tain-
ing
!
OBS
.
If
A
 
!
OBS
B
w
e
sa
y
that
A
and
B
are
OBS
-b
ehaviour
al
ly
e
quivalent.
End
Denition.
F
or
the
\Bunch
example"
giv
en
ab
o
v
e,
one
could
dene
a
homomorphism
h
suc
h
that
h
Bunch
maps
an
arra
y
with
elemen
ts
a
,
:
:
:
am
to
an
ordered
binary
tree
with

..
Beha
vioural
Equiv
alence
|
General
Case

elemen
ts
a
,
:
:
:
am
and
h
Nat
and
h
Bo
ol
are
iden
tit
y
functions.
Since
h
Bo
ol
is
injectiv
e,
it
follo
ws
that
A
and
B
are
fBo
ol
g-b
eha
viourally
equiv
alen
t.
Using
lemm
a
.
it
is
straigh
tforw
ard
to
sho
w
that
if
A
!
OBS
B
then
A

OBS
B
.
It
follo
ws
from
prop
erties
of
equiv
alences
that
if
A
 
!
OBS
B
,
then
A

OBS
B
.
(W
e
omit
details
of
the
pro
of
since
it
is
a
sp
ecial
case
of
a
similar
result
(lemma
.)
for
the
more
general
denition.)
Using
the
injectivit
y
of
the
inclusions

A
:
R(
;
;;
A
)
,
!
A
and

B
:
R(
;
;;
B
)
,
!
B
it
is
straigh
tforw
ard
to
sho
w
that
if
A

OBS
B
then
A
 
!
OBS
B
.
.
Beha
vioural
Equiv
alence
|
General
Case
Under
most
circumstances,
the
ab
o
v
e
denitions
w
ould
b
e
p
erfectly
adequate.
Ho
w-
ev
er,
there
are
some
algebras
whic
h
are
b
eha
viourally
equiv
alen
t
to
the
t
w
o
\Bunch
algebras"
ab
o
v
e
whic
h
w
e
migh
t
w
an
t
to
exclude.
F
or
example,
consider
the
algebra
C
whic
h
is
iden
tical
to
A
except
that
C
Nat
is
the
set
of
in
tegers
and,
for
an
y
negativ
e
in
teger
n
,
and
bunc
h
b
add
(n
;
b
)
def
=
b
n

b
def
=
F
alse
Under
the
ab
o
v
e
denitions,
the
algebras
A
,
B
and
C
are
b
eha
viourally
equiv
alen
t
with
resp
ect
to
the
sort
Bo
ol
since
the
additional
elemen
ts
in
C
are
unreac
hable
and
so
cannot
b
e
observ
ed
using
ground
equations.
Ho
w
ev
er,
whilst
A
and
B
are
ob
viously
quite
similar,
C
b
eha
v
es
a
bit
dieren
tly
.
More
precisely
,
while
A
and
B
b
oth
satisfy
the
axiom
n
:
Nat
;
b
:
Bunch
:
n

add
(n
;
b
)
=
T
rue
the
algebra
C
do
es
not
(if
n
is
negativ
e).
Suc
h
considerations
suggest
that
w
e
migh
t
sometimes
w
an
t
to
use
a
stronger
notion
of
b
eha
vioural
equiv
alence
whic
h
constrains
not
just
the
\output"
sort
of
terms
w
e

Beha
vioural
Equiv
alence

consider
but
the
\input"
sorts
to
o.
That
is,
w
e
migh
t
w
an
t
to
consider
b
eha
vioural
equiv
alence
with
resp
ect
to
a
set
IN
of
\input"
sorts
and
a
set
OUT
of
\output"
sorts.
The
denition
of
 
!
OBS
is
the
simplest
to
generalise.
Denition
.
(
IN
!
OUT
and
IN
 
!
OUT
)
Let

b
e
a
signature,
IN
and
OUT
subsets
of
the
sorts
in

and
A
and
B
t
w
o

-algebras.
If
h
:
A
!
B
is
a

-homomorphism
suc
h
that
h
j
IN
is
surjectiv
e
and
h
j
OUT
is
injectiv
e,
then
h
is
said
to
b
e
an
(IN
;
OUT
)-homomorphism
(written
h
:
A
IN
!
OUT
B
).
The
preorder
IN
!
OUT
:
Alg
(
)
$
Alg
(
)
is
dened
for

-algebras
A
and
B
b
y
A
IN
!
OUT
B
i
there
exists
h
:
A
IN
!
OUT
B
The
equiv
alence
IN
 
!
OUT
:
Alg
(
)
$
Alg
(
)
is
the
smallest
equiv
alence
con
taining
IN
!
OUT
.
If
A
IN
 
!
OUT
B
,
w
e
sa
y
that
A
and
B
are
(IN
;
OUT
)-b
ehaviour
al
ly
e
quivalent.
End
Denition.
This
is
a
straigh
tforw
ard
generalisation
of
the
denition
of
b
eha
vioural
equiv
alence
used
b
y
Meseguer
and
Goguen
[].
Meseguer
and
Goguen
discuss
V
-b
eha
vioural
equiv
alence
whic
h
is
a
sp
ecial
case
of
(IN
;
OUT
)-b
eha
vioural
equiv
alence
with
IN
=
V
and
OUT
=
V
.
Their
denition
uses
what
they
call
V
-homomorphisms
whic
h
are
homomorphisms
that
are
bijectiv
e
on
all
sorts
in
V
|
again,
this
is
just
a
sp
ecial
case
of
our
(IN
;
OUT
)-homomorphisms
with
IN
=
V
and
OUT
=
V
.
It
is,
p
erhaps,
w
orth
p
oin
ting
out
that
this
is
not
just
generalisation
for
the
sak
e
of
it.
Lemma
.
b
elo
w
sho
ws
that,
for
the
sp
ecial
case
that
OUT
=
Tp(
),
t
w
o
algebras
are
(IN
;
OUT
)-b
eha
viourally
equiv
alen
t
i
their
(
;
IN
)-reac
hable
subalgebras
are
isomorphic.
That
is,
A
IN
 
!
Tp(
)
B
i
R(
;
IN
;
A
)

=
R
(
;
IN
;
B)

..
Beha
vioural
Equiv
alence
|
General
Case

and
so
the
relation
IN
 
!
OUT
with
IN
=
OUT
is
b
oth
meaningful
and,
in
appropriate
circumstances,
useful.
(See
also
section
..)
There
is
an
ob
vious
generalisation
of
the
denition
of

OBS
and

EQ
OBS
.
Namely
F
or
all
sorts


OUT
and
terms
t
;
t

W
(
;
X
)

(with
all
free
v
ariables
in
t
and
t
b
eing
of
a
sort
in
IN
)
and
all
v
aluations
v

V
al
(A;
t
=

t
),
A
j
=
v
t
=

t
,
B
j
=
v
t
=

t
Ho
w
ev
er,
suc
h
a
denition
w
ould
b
e
w
ell
dened
only
if
Aj
IN
=
B
j
IN
.
Sannella
and
T
arlec
ki
[
section
]
a
v
oid
this
requiremen
t
with
the
follo
wing
denition.
(Discussion
of
other
inappropriate
generalisations
ma
y
b
e
found
in
[
section
].)
Denition
.
(observ
ational
and
b
eha
vioural
equiv
alence)
Let

b
e
a
signature
with
sorts
T
and

a
set
of

-form
ul,
F
or
an
y
t
w
o

-algebras
A
and
B
,
A
is
\observ
ationally
reducible
to
B
with
resp
ect
to
"
(written
A


B
)
if,
for
an
y
v
aluation
va

V
al(A),
there
is
a
v
aluation
vb

V
al
(B
)
with
dom
(va
)
=
dom
(vb
)
suc
h
that,
for
ev
ery
form
ula
'


A
j
=
va
'
,
B
j
=
vb
'
if
va

V
al
(A
;
').
F
or
an
y
t
w
o

-algebras
A
and
B
,
A
is
\observ
ationally
equiv
alen
t
to
B
with
resp
ect
to
"
(written
A


B
)
if
A


B
and
B


A.
Let
IN
and
OUT
b
e
subsets
of
T
.
The
set
EQ
(IN
;
OUT
)
consists
of
all
equations
t
=

t
where
t
;
t

W
(
;
X
)

and
all
v
ariables
in
t
and
t
are
of
sorts
in
IN
.
End
Denition.
It
is
easy
to
sho
w
that
IN
 
!
OUT
is
at
least
as
strong
as

EQ
(IN
;OUT
)
.

Beha
vioural
Equiv
alence

Lemma
.
(
IN
 
!
OUT


EQ
(IN
;OUT
)
)
Let

b
e
a
signature,
IN
and
OUT
b
e
subsets
of
the
sorts
in

,
A
and
B
t
w
o

-algebras
and
h
:
A
!
B
a

-homomorphism.
If
h
:
A
IN
!
OUT
B
,
then
A

EQ
(IN
;OUT
)
B
.
Pro
of.
F
or
all
sorts


OUT
and
terms
t
;
t

W
(
;
X
)

(with
all
free
v
ariables
in
t
and
t
b
eing
of
a
sort
in
IN
)
and
all
v
aluations
v

V
al(A;
t
=

t
),
A
j
=
v
t
=

t
=
f
denition
of
j
=
t
=
t
g
t
A
(v
)
=
t
A
(v
)
=
f
injectivit
y
of
h

g
h
(t
A
(v
))
=
h
(t
A
(v
))
=
f
lemma
.
g
t
B
(h
.
v
)
=
t
B
(h
.
v
)
=
f
denition
of
j
=
t
=
t
g
B
j
=
h
.
v
t
=

t
Hence,
A

EQ
(IN
;OUT
)
B
.
Since
h
is
surjectiv
e
on
all
sorts
in
IN
,
it
follo
ws
that
there
is
at
least
one
injectiv
e
IN
-indexed
function
g
:
B
j
IN
!
Aj
IN
suc
h
that
g
.
h
j
IN
=
id
.
Then,
for
eac
h
'

EQ
(IN
;
OUT
)
and
v
aluation
va

V
al(A;
'),
B
j
=
h
.
va
'
=
f
ab
o
v
e
g
A
j
=
va
'
=
f
g
.
h
=
id
g
A
j
=
g
.
h
.
va
'
Since
h
is
surjectiv
e
on
IN
,
w
e
can
let
vb
=
h
.
va
.
It
follo
ws
that,
for
eac
h
'

EQ
(IN
;
OUT
)
and
v
aluation
vb

V
al(B
;
v
)
B
j
=
vb
'
=
A
j
=
g
.
vb
'
and
so
B

EQ
(IN
;OUT
)
A
and
hence,
A

EQ
(IN
;OUT
)
B
.
End
Lemma.

..
Prop
erties
of
Beha
vioural
Equiv
alence

It
is
considerably
less
ob
vious
that

EQ
(IN
;OUT
)
is
w
eak
er
than
IN
 
!
OUT
.
W
e
dela
y
the
pro
of
un
til
later
in
this
c
hapter
(corollary
.0).
.
Prop
erties
of
Beha
vioural
Equiv
alence
This
section
explores
the
extra
generalit
y
of
our
denition:
demonstrating
that
sp
e-
cial
cases
corresp
ond
to
isomorphism,
isomorphism
of
subalgebras,
etc.
dev
eloping
an
alternativ
e
c
haracterisation
of
IN
 
!
OUT
.
An
in
teresting
sp
ecial
case
of
IN
 
!
OUT
concerns
isomorphisms.
Lemma
.
(b
eha
vioural
equiv
alence
of
isomorphic
algebras)
Let

b
e
a
signature
with
sorts
T
and
A
and
B
t
w
o

-algebras.
Then
A
T
 
!
T
B
i
A

=
B
.
Pro
of.
This
follo
ws
from
the
fact
that
(T
;
T
)-homomorphism
s
are
bijectiv
e
homo-
morphisms
and
hence
isomorphisms;
and
that
isomorphisms
are
bijectiv
e
homomor-
phisms
and
hence
(T
;
T
)-homomorphism
s.
End
Lemma.
*
The
next
t
w
o
lemmas
demonstrate
that
an
y
algebra
A
is
b
eha
viourally
equiv
alen
t
to
its
reac
hable
subalgebra
R(
;
IN
;
A
)
and
to
an
y
quotien
t
A=

if

is
what
w
e
call
a
(
;
OUT
)-congruence.
Lemma
.
(b
eha
vioural
equiv
alence
of
reac
hable
subalgebras)
Let

b
e
a
signature,
IN
and
OUT
subsets
of
the
sorts
in

and
A
a

-algebra.
Then,
R
(
;
IN
;
A
)
IN
 
!
OUT
A

Beha
vioural
Equiv
alence

Pro
of.
The
homomorphism
from
R(
;
IN
;
A
)
to
A
dened
in
lemma
.
is
injec-
tiv
e
on
all
sorts
and
surjectiv
e
on
all
sorts
in
IN
.
Hence,
R(
;
IN
;
A
)
IN
!
OUT
A
and,
so,
b
y
the
denition
of
IN
 
!
OUT
,
R(
;
IN
;
A
)
IN
 
!
OUT
A.
End
Lemma.
Denition
.	
((
;
OUT
)-congruence)
Let

b
e
a
signature,
OUT
a
subset
of
the
sorts
in

and
A
a

-algebra.
W
e
sa
y
that
a

-congruence

o
v
er
A
is
a
(
;
OUT
)-congruence
if,
for
all
sorts


OUT
and
v
alues
a
;
a

A

,
a


a
)
a
=
a
End
Denition.
Lemma
.0
(b
eha
vioural
equiv
alence
of
quotien
t
algebras)
Let

b
e
a
signature,
IN
and
OUT
subsets
of
the
sorts
in

,
A
a

-algebra.
If

is
a
(
;
OUT
)-congruence
o
v
er
A,
then
A
IN
 
!
OUT
A=

Pro
of.
The
homomorphism
[
[
]
]

dened
in
lemma
.	
is
surjectiv
e
on
all
sorts
and
injectiv
e
on
all
sorts
in
OUT
.
Hence,
A
IN
!
OUT
A
=

and,
so,
b
y
the
denition
of
IN
 
!
OUT
,
A
IN
 
!
OUT
A=
.
End
Lemma.
*
The
follo
wing
lemma
sho
ws
the
relationship
b
et
w
een
b
eha
vioural
equiv
alence
and
reac
habilit
y
.
(It
is
a
generalisation
of
[
fact
].)
(Note
here
that
IN
and
OUT
will
generally
b
e
dieren
t.)

..
Prop
erties
of
Beha
vioural
Equiv
alence
	
Lemma
.
(b
eha
vioural
equiv
alence
and
reac
habilit
y)
Let

b
e
a
signature
with
sort
T
,
IN
a
subset
T
and
A
and
B
t
w
o

-algebras.
Then,
A
IN
 
!
T
B
,
R(
;
IN
;
A)

=
R(
;
IN
;
B
)
Pro
of.
W
e
pro
v
e
the
t
w
o
directions
separately
|
the
simplest
is
the
left-to-righ
t
direction.

R
)
L
R(
;
IN
;
A
)

=
R(
;
IN
;
B
)
=
f
lemma
.
g
R(
;
IN
;
A
)
T
 
!
T
R(
;
IN
;
B
)
)
f
T
 
!
T

IN
 
!
T
g
R(
;
IN
;
A
)
IN
 
!
T
R(
;
IN
;
B
)
=
f
lemma
.
g
A
IN
 
!
T
B

L
)
R
Let
the
relation
:
Alg(
)
$
Alg
(
)
b
e
dened
b
y
A

A
def
=
R
(
;
IN
;
A

)

=
R(
;
IN
;
A

)
Supp
ose
that
there
is
an
(IN
;
OUT
)-homomorphism
h
:
A

IN
!
T
A

.
Then,
R
(
;
IN
;
h
):
R
(
;
IN
;
A

)
T
!
T
R(
;
IN
;
A

)
and
so,
b
y
lemma
.,
R(
;
IN
;
A

)

=
R(
;
IN
;
A
).
That
is,
IN
!
OUT


Let
us
write
R

for
the
least
equiv
alence
con
taining
a
binary
relation
R
.
The
result
follo
ws
b
y
straigh
tforw
ard
calculation:

Beha
vioural
Equiv
alence
0
true
=
f
ab
o
v
e
g
IN
!
OUT

)
f
set
theory
g
(
IN
!
OUT
)


()

=
f
denition
of
IN
 
!
OUT
and

is
an
equiv
alence
g
IN
 
!
OUT

So,
if
A
IN
 
!
OUT
B
,
then
A

B
.
Hence
result.
End
Lemma.
*
W
e
end
this
section
with
an
alternativ
e
c
haracterisation
of
IN
 
!
OUT
.
Theorem
.
(A
IN
 
!
OUT
B
,
R(
;
IN
;
A
)=

A

=
R(
;
IN
;
B
)=

B
)
Let
A
and
B
b
e

-algebras.
There
exist
(
;
OUT
)-congruences

A
o
v
er
R(
;
IN
;
A
)
and

B
o
v
er
R(
;
IN
;
B
)
suc
h
that
R
(
;
IN
;
A
)=

A

=
R(
;
IN
;
B
)=

B
if
and
only
if
A
IN
 
!
OUT
B
Pro
of
Let
the
relation
:
Alg(
)
$
Alg(
)
b
e
dened
b
y
A

B
i
there
exist
(
;
OUT
)-
congruences

A
,

B
suc
h
that
R
(
;
IN
;
A
)=

A

=
R(
;
IN
;
B
)=

B

..
Prop
erties
of
Beha
vioural
Equiv
alence

By
lemm
a
.
w
e
ha
v
e
that,
if
h
:
A
IN
!
OUT
B
,
then
R
(
;
IN
;
A
)=

A

=
R(
;
IN
;
B
)
where

A
:
A
j
T
$
A
j
T
is
the
(
;
OUT
)-congruence
dened
for
eac
h
sort


T
and
v
alues
a
;
a

A

b
y
a

A

a
def
=
h

(a
)
=
h

(a
)
Let

B
:
B
j
T
$
B
j
T
b
e
equalit
y
.
It
is
straigh
tforw
ard
to
sho
w
that
R
(
;
IN
;
B)

=
R(
;
IN
;
B
)=

B
and
so
A
IN
!
OUT
B
)
A

B
Let
us
write
R

for
the
least
equiv
alence
con
taining
a
binary
relation
R
.
The
result
follo
ws
b
y
straigh
tforw
ard
calculation:
true
=
f
ab
o
v
e
g
IN
!
OUT


)
f
set
theory
g
(
IN
!
OUT
)


()

=
f
denition
of
IN
 
!
OUT
and

is
an
equiv
alence
g
IN
 
!
OUT


So,
if
A
IN
 
!
OUT
B
,
then
A

B
.
T
o
see
that
the
con
v
erse
is
true,
observ
e
that
R(
;
IN
;
A
)=

A

=
R(
;
IN
;
B
)=

B
=
f
lemma
.
g
R(
;
IN
;
A
)=

A
T
 
!
T
R(
;
IN
;
B
)=

B
)
f
lemma
.0
t
wice
g
R(
;
IN
;
A
)
T
 
!
OUT
R(
;
IN
;
B
)

Beha
vioural
Equiv
alence

)
f
lemma
.
t
wice
g
A
IN
 
!
OUT
B
Hence
result.
End
Theorem.
.
Beha
vioural
Equiv
alence
and
Sp
ecications
This
section
uses
the
denitions
and
results
of
the
previous
c
hapter
to
dene
the
notion
of
b
eha
vioural
closure
(v
erifying
that
it
matc
hes
the
discussion
in
c
hapter
)
and
relates
the
b
eha
vioural
abstraction
op
erator
to
v
arious
sp
ecication
building
op
erations
discussed
in
the
literature.
Denition
.
(b
eha
vioural
seman
tics,
equiv
alence
and
closure)
Let

b
e
a
signature
and
IN
and
OUT
subsets
of
the
sorts
of

.
The
(IN
;
OUT
)-b
ehaviour
al
semantics
of
a

-sp
e
cic
ation
SP
is
the
set
Mo
d
IN
OUT
(SP
)
of

-algebras
dened
b
y
Mo
d
IN
OUT
(SP
)
def
=
Cl
IN
 
!
OUT
(Mo
d(SP
)
)
Tw
o

-sp
ecications
SP
,
SP
are
(IN
;
OUT
)-b
ehaviour
al
ly
e
quivalent
(written
SP
IN
 
!
OUT
SP
)
if
Mo
d
IN
OUT
(SP
)
=
Mo
d
IN
OUT
(SP
)
A

-sp
ecication
SP
is
(IN
;
OUT
)-b
ehaviour
al
ly
close
d
if
Mo
d(SP
)
=
Mo
d
IN
OUT
(SP
)
End
Denition.

..
Beha
vioural
Equiv
alence
and
Sp
ecications

In
c
hapter

w
e
informally
c
haracterised
b
eha
vioural
closure
as
follo
ws:
If
a
program
mo
dule
implem
en
ts
a
sp
ecication
then
so
should
all
b
e-
ha
viourally
equiv
alen
t
program
mo
dules.
\T
ranslating"
this
in
to
the
usual
terminology
(i.e.
that
used
throughout
this
rep
ort),
that
is
If
a
sp
ecication
SP
is
b
eha
viourally
closed
then
whenev
er
a
sp
ecication
SP
implem
e
n
ts
SP
,
all
b
eha
viourally
equiv
alen
t
sp
ecications
SP
also
impleme
n
t
SP
.
The
follo
wing
lemma
conrms
that
(whic
hev
er
equiv
alence
w
e
c
ho
ose)
this
statemen
t
is
true.
Lemma
.
(SP

SP
)
(SP
 
SP
)
,
(SP
 
SP
))
Let

b
e
a
signature,
:
Alg
(
)
$
Alg(
)
an
equiv
alence
and
SP
a

-
sp
ecication.
If
SP
is
closed
with
resp
ect
to

then
for
an
y

-sp
ecications
SP
and
SP
,
suc
h
that
SP

SP
,
(SP
 
SP
)
,
(SP
 
SP
)
Pro
of
The
pro
of
is
b
y
straigh
tforw
ard
calculation:
(SP
 
SP
)
,
(SP
 
SP
)
=
f
denition
of
 
g
(Mo
d(SP
)

Mo
d
(SP
))
,
(Mo
d(SP
)

Mo
d(SP
))
=
f
closure
of
SP
g
(Cl

(Mo
d(SP
)
)

Mo
d(SP
))
,
(Cl

(Mo
d(SP
)
)

Mo
d
(SP
))
=
f
Cl

(A)

B
,
Cl

(A)

Cl

(B
)
g
(Cl

(Mo
d(SP
)
)

Cl

(Mo
d(SP
)
)
,
(Cl

(Mo
d(SP
)
)

Cl

(Mo
d(SP
)
)
(
f
Liebniz
g
Cl

(Mo
d(SP
)
)
=
Cl

(Mo
d(SP
)
)

Beha
vioural
Equiv
alence

=
f
denition
of

for
sp
ecications
g
SP

SP
End
Lemma.
In
the
previous
section,
w
e
sa
w
that
b
eha
vioural
equiv
alence
is
a
sp
ecial
case
of
a
v
ariet
y
of
standard
equiv
alences
used
in
the
literature.
It
is
therefore
p
ossible
to
use
the
b
eha
vioural
abstraction
op
erator
b
eha
viour
wrt
(
;
)
to
dene
sev
eral
standard
closure
op
erations.

F
or
example:

In
[0],
Sannella
and
T
arlec
ki
dene
the
closure
op
erator
iso
close
b
y
Mo
d(iso
close
SP
)
def
=
Cl

=
(Mo
d
(SP
)
)
But
lemma
.
sho
ws
that,
for
a
signature

with
sorts
T
,

=
=
T
 
!
T
.
Therefore
iso
close
is
just
a
sp
ecial
case
of
b
eha
viour
wrt
(
;
).
iso
close
SP
def
=
b
eha
viour
SP
wrt
(T
;
T
)
where
T
=
Tp
(Sig(SP
))

In
[0],
Sannella
and
T
arlec
ki
dene
the
closure
op
erator
junk
b
y
Mo
d(junk
IN
on
SP
)
def
=
Cl

(Mo
d
(SP
)
)
where
A

B
def
=
R
(
;
IN
;
A
)

=
R(
;
IN
;
B
)
But
lemma
.
sho
ws
that,
for
a
signature

with
sorts
T
,
=
IN
 
!
T
.
Therefore
junk
is
just
a
sp
ecial
case
of
b
eha
viour
wrt
(
;
).
junk
IN
on
SP
def
=
b
eha
viour
SP
wrt
(IN
;
T
)
where
T
=
Tp
(Sig(SP
))

These
op
erations
are
not
used
in
the
sequel
|
they
are
included
to
demonstrate
that
the
generalit
y
pro
vided
in
b
eha
vioural
abstraction
is
a
useful
op
eration.

..
Observ
ational
Axioms


In
[0]
Sannella
and
T
arlec
ki
dene
the
op
erator
restrict
to
b
y
Mo
d(restrict
SP
to
IN
)
def
=
fA:
A

Mo
d(SP
):
R
(Sig(SP
);
IN
;
A)g
This
op
erator
remo
v
es
the
junk
from
eac
h
mo
del
of
SP
.
A
similar
op
eration
can
b
e
dened
using
the
junk
on
op
erator.
restrict
SP
to
IN
def
=
reac
hable
(junk
IN
on
SP
)
on
IN
The
use
of
the
junk
on
op
erator
adds
mo
dels
with
dier
only
with
resp
ect
to
non-junk
v
alues
and,
in
particular,
adds
reac
hable
mo
dels;
the
use
of
the
reac
hable
op
erator
remo
v
es
the
unreac
hable
mo
dels
lea
ving
the
reac
hable
subalgebras
of
SP
.
Our
v
ersion
of
the
op
eration
diers
sligh
tly
in
that,
ev
en
if
SP
is
not
closed
under
isomorphism,
the
result
(under
our
denition)
will
b
e
closed
under
iso-
morphism
whereas
it
ma
y
not
b
e
with
the
original
denition.
.
Observ
ational
Axioms
So
far
w
e
ha
v
e
considered
b
eha
vioural
equiv
alence
from
a
v
ery
\mo
del-theoretic"
viewp
oin
t
|
dening
the
relation
in
terms
of
homomorphisms.
This
is
useful
b
ecause
it
is
clear
ho
w
this
st
yle
of
denition
can
b
e
used
to
deriv
e
a
notion
of
b
eha
vioural
equiv
alence
for
program
mo
dules.
(See
Hoare
[]
for
a
demonstration).
This
section
examines
b
eha
vioural
equiv
alence
from
a
more
\axiomatic"
view-
p
oin
t:
it
iden
ties
a
set
Axm
(IN
;
OUT
)
of
axioms
suc
h
that,
for
an
y
axiom
ax

Axm
(IN
;
OUT
).
A
j
=
ax
,
B
j
=
ax
if
A
IN
 
!
OUT
B
.
That
is,
Axm
(IN
;
OUT
)
is
a
set
of
axioms
whose
satisfaction
is
in
v
arian
t
under
b
eha
vioural
equiv
alence.

Beha
vioural
Equiv
alence

Sc
ho
ett
considers
almost
exactly
this
question
in
the
in
tro
duction
to
[].
(The
main
dierences
are
that,
lik
e
Meseguer
and
Goguen,
Sc
ho
ett
considers
the
sp
ecial
case
IN
=
OUT
and
that
Sc
ho
ett
do
es
not
pro
v
e
that
he
ac
hiev
es
his
goal.)
Sc
ho
ett
argues
that,
in
an
\observ
ational
sp
ecication"
(that
is
a
b
eha
viourally
closed
sp
ecication)
one
should
disallo
w
equations
b
et
w
een
terms
of
unobserv
able
sorts
since
suc
h
equations
\demand
equalit
y
of
represen
tation
v
alues
that
is
not
rel-
ev
an
t
to
(nor
ev
en
observ
able
b
y)
a
user"
[
p.
0].
He
also
argues
that
one
should
use
reac
hable
quan
tication
instead
of
(plain)
quan
tication
since
unreac
hable
v
al-
ues
\cannot
b
e
generated
with
the
user
op
erations,
and
hence
[their]
existence
and
[their]
prop
erties
are
not
relev
an
t
to
the
users"
[
p.
0].
F
ollo
wing
this
lead,
w
e
dene
the
set
Axm
(IN
;
OUT
)
of
\observ
ational
axioms"
to
b
e
the
set
of
all
axioms
using
only
equations
o
v
er
sorts
in
OUT
and
reac
hable
quan
tication
with
resp
ect
to
the
sorts
IN
.
That
is,
Denition
.
(observ
ational
form
ul
and
axioms)
Let

b
e
a
signature,
let
IN
and
OUT
b
e
subsets
of
the
sort
sym
b
ols
in

.
The
set
WFF
(IN
;
OUT
)
of
w
ell-formed
(IN
;
OUT
)-observ
ational

-form
ul
is
the
least
subset
of
WFF
(
)
satisfying
true

WFF
(IN
;
OUT
)
t
=

t

WFF
(IN
;
OUT
)
if


OUT
and
t
;
t

W
(
;
X
)

:P

WFF
(IN
;
OUT
)
if
P

WFF
(IN
;
OUT
)
P
^
Q

WFF
(IN
;
OUT
)
if
P

WFF
(IN
;
OUT
)
and
Q

WFF
(IN
;
OUT
)


0
T
0
x
:

:
P

WFF
(IN
;
OUT
)
if
P

WFF
(IN
;
OUT
)
and
T
0

IN
x
:

:
P

WFF
(IN
;
OUT
)
if
P

WFF
(IN
;
OUT
)
and


IN
W
e
write
Axm
(IN
;
OUT
)
to
denote
the
set
of
all

-axioms
in
WFF
(IN
;
OUT
).
End
Denition.
Theorem
.
(
IN
 
!
OUT


Axm
(IN
;OUT
)
)
Let

b
e
a
signature
and
IN
and
OUT
subsets
of
the
sorts
of

.

..
Observ
ational
Axioms

If
A
and
B
are

-algebras
and
ax

Axm
(IN
;
OUT
),
then
A
IN
 
!
OUT
B
)
A
j
=
ax
,
B
j
=
ax
Pro
of
W
e
b
egin
b
y
sho
wing
that
if
h
:
A
IN
!
OUT
B
then,
for
eac
h

-form
ula
'

WFF
(IN
;
OUT
)
and
v
aluation
v

V
al
(A;
'),
A
j
=
v
'
,
B
j
=
h
.
v
'
The
pro
of
is
b
y
induction
o
v
er
the
structure
of
'.
Base
case:
('
=
true
)
F
or
an
y
v
aluation
v

V
al
(A
;
').
A
j
=
v
true
=
f
denition
of
j
=
g
true
=
f
denition
of
j
=
g
B
j
=
h
.
v
true
Base
case:
('
=
t
=

t
and


OUT
)
This
follo
ws
imme
diately
from
lemm
a
..
Inductiv
e
step:
('
=
:P
)
Supp
ose
that,
for
all
v

V
al(A;
P
),
A
j
=
v
P
,
B
j
=
h
.
v
P
.
Then,
A
j
=
v
:P
=
f
denition
of
j
=
:P
g
:A
j
=
v
P
=
f
inductiv
e
assumption
g
:B
j
=
h
.
v
P
Inductiv
e
step:
('
=
P
^
Q
)
Supp
ose
that,
for
all
v

V
al
(A;
P
^
Q
),
A
j
=
v
P
,
B
j
=
h
.
v
P
and
A
j
=
v
Q
,
B
j
=
f
.
v
Q
.
Then,

Beha
vioural
Equiv
alence

A
j
=
v
P
^
Q
=
f
denition
of
j
=
P
^
Q
g
A
j
=
v
P
^
A
j
=
v
Q
=
f
inductiv
e
assumption
g
B
j
=
h
.
v
P
^
B
j
=
h
.
v
Q
=
f
denition
of
j
=
P
^
Q
g
B
j
=
h
.
v
P
^
Q
Inductiv
e
step:
(x
:

:
P
and


IN
)
Supp
ose
that,
for
all
v

V
al(A;
P
),
A
j
=
v
P
,
B
j
=
h
.
v
P
.
Then,
A
j
=
v
x
:

:
P
=
f
denition
of
j
=

g
(a
:
a

A

:
A
j
=
v
[fx
:=a
g
P
)
=
f
inductiv
e
assumption
g
(a
:
a

A

:
B
j
=
h
.
(v
fx
:=a
g)
P
)
=
f
.
distributes
o
v
er

g
(a
:
a

A

:
B
j
=
(h
.
v
)fx
:=h
(a
)g)
P
)
=
f
surjectivit
y
of
h
j
IN
g
(b
:
b

B

:
B
j
=
(h
.
v
)fx
:=b
g)
P
)
=
f
denition
of
j
=

g
B
j
=
h
.
v
x
:

:
P
Inductiv
e
step:
(

0
T
0
x
:

:
P
and
T
0

IN
)
Supp
ose
that,
for
all
v

V
al(A;
P
),
A
j
=
v
P
,
B
j
=
h
.
v
P
.
Then,
A
j
=
v


0
T
0
x
:

:
P
=
f
denition
of
j
=

g
(a
:
a

A

^
R
(
0
;
T
0
;
a
)
:
A
j
=
v
fx
:=a
g
P
)
=
f
inductiv
e
assumption
g
(a
:
a

A

^
R
(
0
;
T
0
;
a
)
:
B
j
=
h
.
(v
fx
:=a
g)
P
)
=
f
.
distributes
o
v
er

g
(a
:
a

A

^
R
(
0
;
T
0
;
a
)
:
B
j
=
(h
.
v
)fx
:=h
(a
)g
P
)
=
f
surjectivit
y
of
h
j
IN
g
(b
:
b

B

^
R
(
0
;
T
0
;
b
)
:
B
j
=
(h
.
v
)fx
:=b
g
P
)
=
f
denition
of
j
=

g
B
j
=
h
.
v


0
T
0
x
:

:
P
Hence,
b
y
the
principle
of
structural
induction,
w
e
conclude
that,
for
an
y
form
ula
'

WFF
(IN
;
OUT
),
and
v
aluation
v

V
al(A;
')
A
j
=
v
'
,
B
j
=
h
.
v
'

..
Observ
ational
Axioms
	
and
hence,
for
an
y
axiom
ax

Axm
(IN
;
OUT
),
A
j
=
ax
,
B
j
=
ax
T
o
see
that
the
same
holds
when
A
IN
 
!
OUT
B
,
let

Ax
b
e
dened
as
in
denition
.
and
write
R

for
the
least
equiv
alence
con
taining
a
binary
relation
R
.
The
result
follo
ws
b
y
straigh
tforw
ard
calculation:
true
=
f
ab
o
v
e
g
IN
!
OUT


fax
g
)
f
set
theory
g
(
IN
!
OUT
)


(
fax
g
)

=
f
denition
of
IN
 
!
OUT
and

fax
g
is
an
equiv
alence
g
IN
 
!
OUT


fax
g
Hence,
for
an
y

-algebras
A
and
B
and
an
y
observ
ational
axioms
ax

Axm
(IN
;
OUT
),
A
IN
 
!
OUT
B
)
A
j
=
ax
,
B
j
=
ax
End
Theorem.
An
immediate
corollary
is
that
a
sp
ecication
satises
exactly
the
same
set
of
\ob-
serv
ations"
as
do
es
its
b
eha
vioural
closure.
Corollary
.
(SP
j
=
ax
,
b
eha
viour
SP
wrt
(IN
;
OUT
)
j
=
ax
)
Let

b
e
a
signature,
IN
and
OUT
subsets
of
the
sorts
of

and
SP
a

-
sp
ecication.
F
or
an
y
axiom
ax

Axm
(IN
;
OUT
),
SP
j
=
ax
i
b
eha
viour
SP
wrt
(IN
;
OUT
)
j
=
ax
Pro
of

Beha
vioural
Equiv
alence
0
b
eha
viour
SP
wrt
(IN
;
OUT
)
j
=
ax
=
f
denition
j
=
for
sp
ecications
g
(A
:
A
:
b
eha
viour
SP
wrt
(IN
;
OUT
):
A
j
=
ax
)
=
f
denition
A:
b
eha
viour
SP
wrt
(IN
;
OUT
),
set
theory
g
(A
;
A
0
:
A
:
SP
^
A
IN
 
!
OUT
A
0
:
A
0
j
=
ax
)
=
f
theorem
.
g
(A
;
A
0
:
A
:
SP
^
A
IN
 
!
OUT
A
0
:
A
j
=
ax
)
=
f
set
theory
g
(A
:
A
:
SP
:
A
j
=
ax
)
=
f
denition
of
j
=
for
sp
ecications
g
SP
j
=
ax
End
Corollary
.
An
in
teresting
corollary
to
theorem
.
is
that
IN
 
!
OUT
is
stronger
than

EQ
(IN
;OUT
)
.
W
e
rep
eat
t
w
o
results
from
[]
b
efore
stating
and
pro
ving
the
corollary
.
The
rst
result
states
that
the
satisfaction
of
a
set
Cl
()
of
axioms
is
in
v
arian
t
under


.
Lemma
.
(



Cl
()
(
[
F
act
].))
Let

b
e
a
signature,
and

a
set
of

-form
ul.
Then,
for
an
y
t
w
o

-algebras
A
and
B
,
and
axiom
ax

Cl
(),
A


B
)
A
j
=
ax
,
B
j
=
ax
where
Cl
()
is
dened
to
b
e
the
closure
of

under
negation,
conjunction,
equiv
a-
lence
and
uniform
quan
tication,
that
is,
'

Cl
()
implies
xs
:

s
:
'

Cl
()
and
	xs
:

s
:
'

Cl
()
where
xs
=
v
ars(').
End
Lemma.
Note
that,
b
ecause
of
the
restriction
to
uniform
quan
tication,
Cl
(EQ
(IN
;
OUT
))
is
a
prop
er
subset
of
Axm
(IN
;
OUT
).
In
particular,
Cl
(EQ
(IN
;
OUT
))
do
es
not
con
tain
an
y
form
ul
of
the
form
x
:

:
	y
:

:
'

..
Observ
ational
Axioms

The
second
result
is
that

EQ
(IN
;OUT
)


Axm
(IN
;OUT
)
.
Sannella
and
T
arlec
ki
pro
v
e
this
with
the
aid
of
the
follo
wing
coun
terexample.
Coun
terexample
.	
(
EQ
(IN
;OUT
)


Axm
(IN
;OUT
)
)
Let

=
sign
R
at
;
Bo
ol
:t
yp
e
;
<:
R
at

R
at
!
Bo
ol
;
T
rue
:!
Bo
ol
end.
Let
A
and
B
b
e
algebras
with
R
at
b
eing,
resp
ectiv
ely
,
the
op
en
and
closed
in
terv
al
0
:
:
:

of
rational
n
um
b
ers.
That
is,
A
def
=
h
Bo
ol
=
f0
;

g
T
rue
=

R
at
=
fr
:
0
<
r
<

:
r
g
r
<
r
=
r
<
r
i
and
B
def
=
h
Bo
ol
=
f0
;

g
T
rue
=

R
at
=
fr
:
0

r


:
r
g
r
<
r
=
r
<
r
i
T
o
see
that
A

EQ
(fR
at
g;fBo
ol
g)
B
,
consider
an
y
v
aluation
va

V
al(A)
and
let
vb
def
=
va
and
observ
e
that
A
j
=
va
(r
<
r
)
=
T
rue
i
B
j
=
vb
(r
<
r
)
=
T
rue
T
o
see
that
B

EQ
(fR
at
g;fBo
ol
g)
A,
consider
an
y
v
aluation
vb

V
al(B
)
and
let
va
def
=
f
.
vb
where
f
(r
)
def
=
(r
+
)

.
Again,
observ
e
that
A
j
=
va
(r
<
r
)
=
T
rue
i
B
j
=
vb
(r
<
r
)
=
T
rue
Th
us,
A

EQ
(fR
at
g;fBo
ol
g)
B
.
Ho
w
ev
er,
it
is
easy
to
sho
w
that
A

Axm
(fR
at
g;fBo
ol
g)
B
Consider
the
observ
ational
axiom
x
:
R
at
:
	y
:
R
at
:
(y
<
x
)
=
T
rue
whic
h
asserts
that
there
is
no
smallest
R
at
.
It
is
easy
to
sho
w
that
A
j
=
x
:
R
at
:
	y
:
R
at
:
(y
<
x
)
=
T
rue

Beha
vioural
Equiv
alence

(consider
y
=
x


)
but
that
B
j
=
x
:
R
at
:
	y
:
R
at
:
(y
<
x
)
=
T
rue
(consider
x
=
0
).
Hence,
A

EQ
(fR
at
g;fBo
ol
g)
B
)
A

Axm
(fR
at
g;fBo
ol
g)
B
.
End
Coun
terexample.
An
imm
ediate
corollary
is
that
the
relation
IN
 
!
OUT
is
strictly
stronger
than

EQ
(IN
;OUT
)
.
Corollary
.0
(
IN
 
!
OUT


EQ
(IN
;OUT
)
)
Let

b
e
a
signature,
IN
and
OUT
subsets
of
the
sorts
of

and
A
and
B
t
w
o

-algebras.
Then,
b
y
lemma
.,
A
IN
 
!
OUT
B
)
A

EQ
(IN
;OUT
)
B
but,
b
y
coun
terexample
.	,
A

EQ
(IN
;OUT
)
B
)
A
IN
 
!
OUT
B
:
End
Corollary
.
The
ab
o
v
e
inequalit
y
presen
ts
us
with
a
dilemm
a.
If
the
t
w
o
general
cases
of
b
e-
ha
vioural
equiv
alence
(that
is,
IN
 
!
OUT
and

EQ
(IN
;OUT
)
)
w
ere
equiv
alen
t,
w
e
could
b
e
conden
t
that
the
t
w
o
denitions
w
ere
appropriate
generalisations;
since
the
deni-
tions
are
not
equiv
alen
t,
at
most
one
denition
is
appropriate
(or,
at
least,
they
are
appropriate
for
dieren
t
tasks).
F
or
our
purp
oses,
our
generalisation
of
Meseguer
and
Goguen's
b
eha
vioural
equiv-
alence
(that
is,
IN
 
!
OUT
)
is
appropriate
|
in
c
hapter

w
e
use
IN
 
!
OUT
to
giv
e
a
precise
seman
tics
to
Wirsing
and
Bro
y's
ultralo
ose
sp
ecication
st
yle.

..
Observ
ational
Axioms

W
e
also
nd
Sannella
and
T
arlec
ki's
restriction
to
uniform
quan
tication
in
lemma
.
rather
\un
tidy"
in
comparision
to
theorem
..
Ho
w
ev
er,
Sannella
and
T
arlec
ki's
denition
dep
ends
only
on
the
notions
of
axiom,
mo
del
and
satisfaction
pro
vided
b
y
a
logical
framew
ork
and
so
is
easily
generalised
whereas
our
denition
dep
ends
on
a
rather
delicate
c
hoice
of
relationship
b
et
w
een
mo
dels
and
so
is
considerably
harder
to
generalise.
This
is
a
signican
t
adv
an
tage
of
their
denition
|
if
suc
h
generalit
y
is
required.
Before
lea
ving
the
topic
of
observ
ational
axioms,
w
e
note
the
follo
wing
op
en
question:
It
is
straigh
tforw
ard
to
sho
w
that
IN
 
!
OUT
=

Axm
(IN
;OUT
)
if
IN
=
;.
It
is
in
teresting
to
ask
whether
the
same
holds
if
IN
is
non-empt
y
.
Suc
h
a
result
is
imp
ortan
t
for
t
w
o
reasons:
.
Sho
wing
that
the
t
w
o
quite
dieren
t
st
yles
of
denition
are
equiv
alen
t
w
ould
impro
v
e
condence
that
our
notion
of
b
eha
vioural
equiv
alence
is
appropriate.
.
It
w
ould
allo
w
us
to
pro
v
e
results
of
the
form
b
eha
viour
SP
wrt
(IN
;
OUT
)
 
SP
0
b
y
sho
wing
that,
for
all
axioms
ax

Axm
(IN
;
OUT
),
SP
j
=
ax
,
SP
0
j
=
ax
Hennic
k
er
[,]
describ
es
a
pro
of
tec
hnique
he
calls
\con
text
induction"
for
sho
wing
results
of
this
kind.
(W
e
shall
not
explore
this
in
detail
since
it
requires
a
rather
un
usual
notion
of
b
eha
vioural
equiv
alence
where
the
set
of
observ
able
v
alues
is
dened
axiomatically
.)

Beha
vioural
Equiv
alence

Lemma
.
sho
ws
that
IN
 
!
OUT


Axm
(IN
;OUT
)
W
e
b
elieve
(but
ha
v
e
not
tried
to
pro
v
e)
that
the
rev
erse
only
holds
in
the
presence
of
at
most
coun
tably
man
y
unreac
hable
elemen
ts.
.
Sc
ho
ett's
Imp
ossibilit
y
Theorem
The
in
tro
duction
to
this
thesis
suggests
that
it
is
metho
dologically
imp
ortan
t
to
write
b
eha
viourally
closed
sp
ecications
since
this
ensures
that
the
follo
wing
closure
prop
ert
y
holds.
If
a
program
mo
dule
implem
en
ts
a
sp
ecication
then
so
should
all
b
e-
ha
viourally
equiv
alen
t
program
mo
dules.
Since
theorem
.
sho
ws
that
an
y
at
sp
ecication
con
taining
only
observ
ational
axioms
will
b
e
b
eha
viourally
closed
it
seems
that
w
e
need
only
restrict
ourselv
es
to
observ
ational
axioms
to
ensure
that
our
sp
ecications
are
b
eha
viourally
closed.
Ho
w
ev
er,
Sc
ho
ett
[,]
has
sho
wn
that
observ
ational
axioms
alone
are
to
o
w
eak
to
b
e
useful.
This
section
outlines
his
result.
*
*
Sc
ho
ett
considers
\coun
ter
algebras".
That
is,
mo
dels
of
the
sp
ecication
Counter
(gure
.).
Sc
ho
ett
sho
ws
that
there
is
no
nite
set
Ax
of
observ
ational
axioms
suc
h
that
all
algebras
satisfying
Ax
are
b
eha
viourally
equiv
alen
t
(with
resp
ect
to
Bo
ol
)
to
a
mo
del
of
Counter
.
(In
the
follo
wing
it
is
sucien
t
to
consider
a
single
nite
axiom
since
ev
ery
nite
set
of
observ
ational
axioms
is
equiv
alen
t
to
a
single
observ
ational
axiom,
namely
their
conjunction.)

..
Sc
ho
ett's
Imp
ossibilit
y
Theorem

Counter
def
=
enric
h
Bo
olBase
b
y
sign
Ctr
:
t
yp
e
zer
o
:
!
Ctr
inc
;
de
c
:
C
tr
!
Ctr
isZer
o
:
Ctr
!
Bo
ol
axioms
de
c
(zer
o
)
=
Ctr
zer
o
c
:
ctr
:
de
c
(inc
(c
))
=
Ctr
c
isZer
o
(zer
o
)
=
Bo
ol
T
rue
c
:
ctr
:
isZer
o
(inc
(c
))
=
Bo
ol
F
alse
end
Figure
.:
Coun
ter
Sp
ecication
Theorem
.
(Sc
ho
ett's
imp
ossibilit
y
result
[
theorem
.])
F
or
ev
ery
algebra
A
:
Counter
and
observ
ational
axiom
ax

Axm
(fBo
ol
g;
fBo
ol
g)
suc
h
that
A
j
=
ax
,
there
is
a
Sig(Counter
)-algebra
B
suc
h
that
B
j
=
ax
but
A
and
B
are
not
(fBo
ol
g;
fBo
ol
g)-b
eha
viourally
equiv
alen
t.
In
particular,
there
exists
n

0
suc
h
that
for
all
terms
c
comp
osed
of
zer
o
,
inc
and
de
c
,
B
j
=
isZer
o
(de
c
n
(c
))
=
Bo
ol
F
alse
(that
is,
B
cannot
coun
t
higher
than
n
).
End
Theorem.
Sc
ho
ett
pro
v
es
this
theorem
b
y
sho
wing
ho
w,
for
an
y
algebra
A:
Counter
and
an
y
n
um
b
er
i
,
one
can
dene
an
algebra
A
(i
)
diering
in
its
in
terpretation
of
n
um
b
ers
ab
o
v
e
i
.
That
is,
suc
h
that,
inc
j
(zer
o
)
A
(i
)
=
(
inc
j
(zer
o
)
A
;
if
j
<
i
;
and
inc
i
(zer
o
)
A
;
if
j

i
.
(Ob
viously
,
A
and
A
(i
)
are
not
(fBo
ol
g;
fBo
ol
g)-b
eha
viourally
equiv
alen
t
|
con-
sider
the
axiom
isZer
o
(de
c
i
+
(inc
i
+
(zer
o
)))
=
Bo
ol
T
rue.)

Beha
vioural
Equiv
alence

He
then
sho
ws
that,
for
an
y
A
:
Counter
and
an
y
nite
observ
ational
axiom
ax

Axm
(fBo
ol
g;
fBo
ol
g),
A
j
=
ax
,
A
(k
(ax
))
j
=
ax
where
k
(ax
)
is
the
maxim
um
n
um
b
er
of
o
ccurrences
of
the
sym
b
ol
de
c
in
a
term
in
ax
.
F
or
example,
consider
the
algebra
A
def
=
h
Bo
ol
=
f0
;

g
Ctr
=
f0
;

;

;
:
:
:
g
T
rue
=

F
alse
=
0
zer
o
=
0
inc
(x
)
=
x
+

de
c
(c
)
=
if
x
>
0
then
x
 
else
0
isZer
o
(x
)
=
if
x
>
0
then
0
else

i
and
the
axiom
ax
def
=

fzer
o
;inc
;de
c
g
;
c
:
Ctr
:
isZer
o
(de
c
(c
))
=
F
alse
)
isZer
o
(c
)
=
F
alse
In
this
case,
k
(ax
)
=

and
A
(
)
is
dened
b
y
A
(
)
def
=
h
Bo
ol
=
f0
;

g
Ctr
=
f0
;

;

;
:
:
:
g
T
rue
=

F
alse
=
0
zer
o
=
0
inc
(x
)
=
if
x
>

then
x
else
x
+

de
c
(c
)
=
if
x
>
0
then
x
 
else
0
isZer
o
(x
)
=
if
x
>
0
then
0
else

i
Ob
viously
b
oth
A
and
A
(
)
satisfy
ax
.

..
Sc
ho
ett's
Imp
ossibilit
y
Theorem

An
imme
diate
corollary
to
theorem
.
is
that
the
class
of
all
algebras
ha
ving
the
same
b
eha
viour
as
a
coun
ter
cannot
b
e
sp
ecied
b
y
a
nite
set
of
observ
ational
axioms.
Corollary
.
(w
eakness
of
observ
ational
axioms)
There
is
no
nite
set
Ax
=
fax
;
:
:
:
axm
g

Axm
(fBo
ol
g;
fBo
ol
g)
suc
h
that
hSig
(Counter
)
;
Ax
i
=
b
eha
viour
Counter
wrt
(fBo
ol
g;
fBo
ol
g)
Pro
of
Supp
ose
that
A
j
=
Ax
)
A

Mo
d
fBo
ol
g
fBo
ol
g
(Counter
).
Then,
from
the
denition
of
Mo
d
fBo
ol
g
fBo
ol
g
and
corollary
.,
w
e
ha
v
e
that
A:
Counter
,
A
j
=
Ax
Since
Counter
is
consisten
t,
it
follo
ws
that
there
is
a
mo
del
A
suc
h
that
A:
Counter
^
A
j
=
Ax
But,
b
y
theorem
.,
A
(k
(ax
^:::axm
))
j
=
Ax
Since
A
(i
)
do
es
not
satisfy
the
observ
ational
axiom
isZer
o
(de
c
i
+
(inc
i
+
(zer
o
)))
=
Bo
ol
T
rue
(where
i
=
k
(ax
^
:
:
:
axm
)),
A
(i
)
cannot
b
e
a
mem
b
er
of
Mo
d
IN
OUT
(Counter
).
It
follo
ws
that
A
(k
(ax
^:::axm
))
:
hSig(Counter
)
;
Ax
i
)
A
(k
(ax
^:::axm
))
:
b
eha
viour
Counter
wrt
(fBo
ol
g;
fBo
ol
g)
End
Corollary
.
Since
no
at
sp
ecication
consisting
of
observ
ational
axioms
can
sp
ecify
the
set
of
coun
ter-lik
e
algebras,
w
e
conclude
that
an
y
language
based
on
observ
ational
axioms
alone
will
b
e
to
o
w
eak
to
b
e
useful.

Beha
vioural
Equiv
alence

.
Summary
This
c
hapter
denes
the
notion
of
b
eha
vioural
equiv
alence
used
in
this
thesis
and
compares
it
with
t
w
o
signican
t
alternativ
e
denitions
|
sho
wing
that
our
denition
is
a
generalisation
of
that
of
Meseguer
and
Goguen
and
sligh
tly
stronger
than
that
of
Sannella
and
T
arlec
ki.
It
also
denes
the
notion
of
observ
ational
axiom
and
sho
ws
that
satisfaction
of
observ
ational
axioms
is
in
v
arian
t
under
b
eha
vioural
equiv
alence
but
sho
ws
that,
although
a
sp
ecication
language
whic
h
p
ermits
only
observ
ational
axioms
w
ould
result
in
b
eha
viourally
closed
sp
ecications,
the
language
w
ould
b
e
to
o
w
eak
to
b
e
useful.

Chapter

Ultralo
ose
Sp
ecications
In
c
hapter

w
e
presen
ted
a
subset
of
Axm
(
)
whic
h
has
the
prop
ert
y
that
an
y
(at)
sp
ecication
written
using
these
axioms
will
b
e
b
eha
viourally
closed.
Sadly
,
Sc
ho
ett
has
sho
wn
that
an
innite
n
um
b
er
of
these
\observ
ational
axioms"
are
required
to
sp
ecify
something
as
simple
as
a
coun
ter.
This
c
hapter
describ
es
a
sligh
tly
indirect
w
a
y
of
writing
sp
ecications
used
b
y
Wirs-
ing
and
Bro
y
[,]
whic
h
w
e
call
\ultralo
ose
st
yle"
(section
.)
and
c
haracterises
the
seman
tic
eect
of
this
st
yle
in
three
previously
unpublished
theorems.

Theorem
.
sho
ws
that
sp
ecications
written
in
the
ultralo
ose
st
yle
(\ul-
tralo
ose
sp
ecications")
are
do
wn
w
ard
closed
under
IN
!
OUT
.
T
o
our
kno
wledge,
this
is
the
rst
attempt
to
relate
the
(syn
tactic)
ultralo
ose
sp
ecication
st
yle
to
a
seman
tic
concept
suc
h
as
a
b
eha
vioural
ordering.

Theorem
.
sho
ws
that
ultralo
ose
sp
ecications
are
closed
under
IN
 
!
OUT
pro-
vided
they
con
tain
no
inequations.
This
result
is
in
teresting
b
ecause
it
pro
vides
sp
eciers
with
a
precise
metho
d-
ology
for
dev
eloping
b
eha
viourally
closed
USL
sp
ecications.

Theorem
.0
uses
theorem
.
to
demonstrate
that
an
y
ultralo
ose
sp
ecica-
tion
SP
IN
OUT
is
seman
tically
equiv
alen
t
to
the
corresp
onding
ASL
sp
ecication
	

Ultralo
ose
Sp
ecications
0
b
eha
viour
SP
wrt
(IN
;
OUT
)
if
SP
con
tains
no
inequations
or
existen
tial
quan
tication.
As
w
ell
as
pro
viding
a
precise
c
haracterisation
of
the
seman
tic
eect
of
adopt-
ing
the
ultralo
ose
sp
ecication
st
yle,
this
result
sho
ws
that,
con
trary
to
what
Sc
ho
ett's
\imp
ossibilit
y
theorem"
[]
(discussed
in
section
.)
se
ems
to
sug-
gest
it
is
p
ossible
to
write
useful
b
eha
viourally
closed
sp
ecications
in
rst-
order
logic
|
w
e
explain
wh
y
there
is
no
conict.
W
e
consider
theorem
.0
to
b
e
the
most
imp
ortan
t
result
in
this
thesis:
it
precisely
c
haracterises
the
seman
tic
consequences
of
the
ultralo
ose
st
yle;
and
it
precisely
de-
scrib
es
the
relationship
b
et
w
een
ASL
and
USL.
.
Dening
Ultralo
ose
St
yle
The
\ultralo
ose
st
yle"
of
sp
ecication
has
t
w
o
distinctiv
e
c
haracteristics:
.
The
use
of
reac
hable
quan
tication
(

IN
instead
of
);
and
.
The
use
of
a

-congruence

instead
of
equalit
y
.
[Later
sections
use
these
prop
erties
and
lemm
as
.
(whic
h
relates
reac
habilit
y
to
IN
!
OUT
)
and
.0
(whic
h
relates
congruences
to
IN
!
OUT
)
to
relate
this
st
yle
to
the
relations
IN
!
OUT
and
IN
 
!
OUT
.]
Figure
.
giv
es
a
simple
example
of
an
\ultralo
ose
sp
ecication"
(that
is
a
sp
eci-
cation
written
in
the
ultralo
ose
st
yle).
It
is
iden
tical
to
the
sp
ecication
in
gure
.
except
that
it
is
more
explicit
ab
out
the
quan
tication
and
the
sp
ecications
of
Nat
and
Bo
ol
ha
v
e
b
een
expanded.
F
or
comparision,
gure
.
con
tains
a
more
usual
sp
ecication
of
a
stac
k.
The
main
dierences
b
et
w
een
the
t
w
o
sp
ecications
are:

..
Dening
Ultralo
ose
St
yle

Stack
0
def
=
exp
ort
StackSig
from
enric
h
Bo
ol
b
y
sp
ec
sign
Nat
;
Stack
:
t
yp
e
0
:
!
Nat
suc
c
:
Nat
!
Nat
empty
:
!
Stack
push
:
Nat

Stack
!
Stack
p
op
:
Stack
!
Stack
top
:
Stack
!
Nat
isEmpty
:
Stack
!
Bo
ol
:
Stack

Stack
!
Bo
ol
axioms

fempty
;p
op
;push
g
fNat
g
s
:
Stack
;
x
:
Nat
:
top
(push
(x
;
s
))
=
Nat
x

fempty
;p
op
;push
g
fNat
g
s
:
Stack
;
x
:
Nat
:
p
op
(push
(x
;
s
))

s
isEmpty
(empty
)
=
T
rue

fempty
;p
op
;push
g
fNat
g
s
:
Stack
;
x
:
Nat
:
isEmpty
(push
(x
;
s
))
=
F
alse
m
:
Nat
:
suc
c
(m
)
=
Nat
0
m
;
n
:
Nat
:
suc
c
(m
)
=
Nat
suc
c
(n
)
)
m
=
Nat
n
m
:
Nat
:
	
f0
;suc
c
g
;
n
:
Nat
:
m
=
Nat
n
s
:
Stack
:
s

s
s
;
s
:
Stack
:
s

s
,
s

s
s
;
s
;
s
:
Stack
:
s

s
^
s

s
)
s

s
empty

empty
s
;
s
:
Stack
;
x
:
Nat
:
s

s
)
push
(x
;
s
)

push
(x
;
s
)
s
;
s
:
Stack
:
s

s
)
p
op
(s
)

p
op
(s
)
s
;
s
:
Stack
:
s

s
)
top
(s
)
=
top
(s
)
s
;
s
:
Stack
:
s

s
)
isEmpty
(s
)
=
isEmpty
(s
)
end
Figure
.:
An
Ultralo
ose
Stac
k
Sp
ecication

Ultralo
ose
Sp
ecications


The
rst
four
axioms
in
gure
.
(whic
h
sp
ecify
op
erations
on
Stack
)
are
obtained
from
the
rst
four
axioms
in
gure
.
b
y
replacing
(plain)
quan-
tication
b
y
reac
hable
quan
tication
and
replacing
equations
t
=
Stack
t
b
y
t

t
.

The
next
three
axioms
in
gure
.
(whic
h
sp
ecify
the
op
erations
on
Nat
)
are
iden
tical
to
the
last
three
axioms
in
gure
..

The
next
t
w
o
axioms
in
gure
.
(whic
h
sp
ecify
the
sort
Bo
ol
)
are
the
stan-
dard
axioms
sp
ecifying
the
b
o
oleans.
(Since
the
sp
ecication
language
in
tro-
duced
in
c
hapter

do
es
not
pro
vide
a
w
a
y
of
sp
ecifying
new
predicates,
w
e
mo
del
predicates
b
y
functions
with
result
t
yp
e
Bo
ol
and
w
e
distinguish
the
atomic
form
ul
true
and
false
from
the
constan
t
function
sym
b
ols
T
rue
and
F
alse
.)

The
remaining
axioms
in
gure
.
sp
ecify
that
=
Nat
,
=
Bo
ol
and

Stack
together
mak
e
up
a
congruence.
The
remainder
of
this
section
denes
ho
w
to
tr
ansform
a
\normal
sp
ecication"
SP
in
to
an
\ultralo
ose
sp
ecication"
SP
IN
OUT
.
W
e
b
egin
with
the
axioms
that
sp
ecify
the
congruence
.
In
the
ab
o
v
e
example,
(a
c
haracteristic
function
represen
ting)
a
relation


w
as
sp
ecied
only
for
the
sorts

whic
h
w
ere
not
directly
observ
able
(i.e.
for
Stack
).
T
o
simplify
the
sp
ecication
of
,
it
is
con
v
enien
t
to
dene


for
all
sorts

in

and
dene
a
set
Equality
(OUT
)
of
axioms
whic
h
sp
ecify
that
(

)
=
(=)
if


OUT
.
Denition
.
(congruence
axioms)
Let

b
e
a
signature
with
sorts
T
and
OUT
a
subset
of
T
.
The
\OUT
-ultralo
ose
signature"

OUT
is
dened
b
y

OUT
def
=

[
Sig(Bo
ol
)
[
f
:


T
:
(

:



!
Bo
ol
)g

..
Dening
Ultralo
ose
St
yle

Stack
def
=
sp
ec
sign
Nat
;
Bo
ol
;
Stack
:
t
yp
e
0
:
!
Nat
suc
c
:
Nat
!
Nat
T
rue
;
F
alse
:
!
Bo
ol
empty
:
!
Stack
push
:
Nat

Stack
!
Stack
p
op
:
Stack
!
Stack
top
:
Stack
!
Nat
isEmpty
:
Stack
!
Bo
ol
axioms
s
:
Stack
;
x
:
Nat
:
top
(push
(x
;
s
))
=
Nat
x
s
:
Stack
;
x
:
Nat
:
p
op
(push
(x
;
s
))
=
Stack
s
isEmpty
(empty
)
=
Bo
ol
T
rue
s
:
Stack
;
x
:
Nat
:
isEmpty
(push
(x
;
s
))
=
Bo
ol
F
alse
T
rue
=
F
alse
x
:
Bo
ol
:
x
=
T
rue
_
x
=
F
alse
m
:
Nat
:
suc
c
(m
)
=
Nat
0
m
;
n
:
Nat
:
suc
c
(m
)
=
Nat
suc
c
(n
)
)
m
=
Nat
n
m
:
Nat
:
	
f0
;suc
c
g
;
n
:
Nat
:
m
=
Nat
n
end
Figure
.:
A
\Normal"
Stac
k
Sp
ecication

Ultralo
ose
Sp
ecications

The
set
of
axioms
Equiv

that
sp
ecify
that
(the
relation
with
c
haracteristic
function)


is
an
equiv
alence
is
dened
b
y
Equiv

def
=
f
x
:

:


(x
;
x
)
=
Bo
ol
T
rue
x
;
y
:

:


(x
;
y
)
=
Bo
ol


(y
;
x
)
x
;
y
;
z
:

:


(x
;
y
)
=
Bo
ol
T
rue
^


(y
;
z
)
=
Bo
ol
T
rue
)


(x
;
z
)
=
Bo
ol
T
rue
g
The
set
of
axioms
Subst
(
)
that
sp
ecify
that
(the
relation
with
c
haracteristic
func-
tion)

is
substitutiv
e
with
resp
ect
to
the
op
erations
in

is
dened
b
y
Subst
(
)
def
=
ff
;

s
;

:
(f
:

s
!

)

Op(
):
xs
;
ys
:

s
:


s
(xs
;
ys
)
=
Bo
ol
T
rue
)


(f
(xs
);
f
(ys
))
=
Bo
ol
T
rueg
The
set
of
axioms
Equality
(OUT
)
that
sp
ecify
that
(the
relation
with
c
haracteristic
function)


is
the
equalit
y
for
eac
h
sort


OUT
is
dened
b
y
Equality
(OUT
)
def
=
f
:


OUT
:
(x
;
y
:

:


(x
;
y
)
=
Bo
ol
T
rue
,
x
=

y
)g
Finally
,
the
\OUT
-congruence
axioms"
Cong
(
)
OUT
whic
h
sp
ecify
that
(the
T
-
indexed
relation
with
c
haracteristic
function)

is
a
(
;
OUT
)-congruence
is
the
set
of

OUT
-axioms
dened
b
y
Cong
(
)
OUT
def
=
(
[

:


T
:
Equiv

)
[
Subst
(
)
[
Equality
(OUT
)
End
Denition.
The
remainder
of
the
ultralo
ose
transformation
consists
of
a
straigh
tforw
ard
trans-
formation
of

-axioms
(replacing

b
y


IN
and
=

b
y


).
Denition
.
(ultralo
ose
axiom
and
sp
ecication
transformation)
Let

b
e
a
signature
and
IN
and
OUT
subsets
of
the
sorts
of

.

..
Dening
Ultralo
ose
St
yle

F
or
an
y
form
ula
'

WFF
(
),
the
\IN
-ultralo
ose
transformation
of
'"
(written
'
IN
)
is
the

OUT
-form
ula
inductiv
ely
dened
b
y
true
IN
def
=
true
(t
=

t
)
IN
def
=


(t
;
t
)
=
Bo
ol
T
rue
(:P
)
IN
def
=
:(P
IN
)
(P
^
Q
)
IN
def
=
P
IN
^
Q
IN
(x
:

:
P
)
IN
def
=


IN
x
:

:
P
IN
F
or
an
y
set
Ax
of

-axioms,
the
\IN
-ultralo
ose
transformation
of
Ax
"
(written
Ax
IN
)
is
dened
b
y
Ax
IN
def
=
fax
:
ax

Ax
:
ax
IN
g
Finally
,
for
an
y
at

-sp
ecication
SP
def
=
h
;
Ax
i,
the
\(IN
;
OUT
)-ultralo
ose
trans-
formation
of
SP
"
(written
SP
IN
OUT
)
is
the

-sp
ecication
dened
b
y
SP
IN
OUT
def
=
exp
ort

from
enric
h
Bo
ol
b
y
sign

OUT
axioms
Ax
IN
Cong
(
)
OUT
end
End
Denition.
F
or
example,
gure
.
sho
ws
the
eect
of
the
transformation
on
the
sp
ecication
in
gure
..

W
e
note
that
this
diers
sligh
tly
from
the
sp
ecication
in
gure
.
whic
h
omits
the
congruence
axioms
for
the
sorts
Nat
,
uses
=
Nat
instead
of

Nat
and
names
only
the
op
erations
empty
,
p
op
and
push
in
the
quan
tication.
It
is
straigh
tforw
ard
to
sho
w
that
the
t
w
o
sp
ecications
are,
in
fact,
equiv
alen
t.
In
the
in
terests
of
readabilit
y
,
w
e
often
abbreviate
suc
h
sp
ecications
as
follo
ws:

W
e
omit
the
enric
hmen
t
since
Stack
already
con
tains
the
sp
ecication
Bo
ol
.

Ultralo
ose
Sp
ecications

Stack
0
def
=
exp
ort
StackSig
from
sp
ec
sign
Nat
;
Bo
ol
;
Stack
:
t
y
p
e
0
:
!
Nat
suc
c
:
Nat
!
Nat
T
rue;
F
alse:
!
Bo
ol
empty
:
!
Stack
push
:
Nat

Stack
!
Stack
p
op
:
Stack
!
Stack
top
:
Stack
!
Nat
isEmpty
:
Stack
!
Bo
ol

Nat
:
Nat

Nat
!
Bo
ol

Stack
:
Stack

Stack
!
Bo
ol
axioms

StackSig
fNat
g
s
:
Stack
;
x
:
Nat
:

Nat
(top
(push
(x
;
s
));
x
)
=
T
rue

StackSig
fNat
g
s
:
Stack
;
x
:
Nat
:

Stack
(p
op
(push
(x
;
s
));
s
)
=
T
rue

Bo
ol
(isEmpty
(empty
);
T
rue
)
=
T
rue

StackSig
fNat
g
s
:
Stack
;
x
:
Nat
:

(isEmpty
(push
(x
;
s
));
F
alse
)
=
T
rue

StackSig
fNat
g
m
:
Nat
:

Nat
(suc
c
(m
);
0
)
=
T
rue

StackSig
fNat
g
m
;
n
:
Nat
:

Nat
(suc
c
(m
);
suc
c
(n
))
=
T
rue
)

Nat
(m
;
n
)
=
T
rue

StackSig
fNat
g
m
:
Nat
:
	
f0
;suc
c
g
;
n
:
Nat
:

Nat
(m
;
n
)
=
T
rue
T
rue
=
F
alse
b
:
Bo
ol
:
b
=
T
rue
_
b
=
F
alse
n
:
Nat
:

Nat
(n
;
n
)
=
T
rue
n
;
n
:
Nat
:

Nat
(n
;
n
)
=
T
rue
,

Nat
(n
;
n
)
=
T
rue
n
;
n
;
n
:
Nat
:

Nat
(n
;
n
)
=
T
rue
^

Nat
(n
;
n
)
=
T
rue
)

Nat
(n
;
n
)
=
T
rue
s
:
Stack
:

Stack
(s
;
s
)
=
T
rue
s
;
s
:
Stack
:

Stack
(s
;
s
)
=
T
rue
,

Stack
(s
;
s
)
=
T
rue
s
;
s
;
s
:
Stack
:

Stack
(s
;
s
)
=
T
rue
^

Stack
(s
;
s
)
=
T
rue
)

Stack
(s
;
s
)
=
T
rue

Nat
(0
;
0
)
=
T
rue
n
;
n
:
Nat
:

Nat
(n
;
n
)
=
T
rue
)

Nat
(suc
c
(n
);
suc
c
(n
))
=
T
rue

Stack
(empty
;
empty
)
=
T
rue
n
;
n
:
Nat
;
s
;
s
:
Stack
:

Stack
(s
;
s
)
=
T
rue
^

Nat
(n
;
n
)
=
T
rue
)

Stack
(push
(n
;
s
);
push
(n
;
s
))
=
T
rue
s
;
s
:
Stack
:

Stack
(s
;
s
)
=
T
rue
)

Stack
(p
op
(s
);
p
op
(s
))
=
T
rue
s
;
s
:
Stack
:

Stack
(s
;
s
)
=
T
rue
)

Stack
(top
(s
);
top
(s
))
=
T
rue
s
;
s
:
Stack
:

Stack
(s
;
s
)
=
T
rue
)

Bo
ol
(isEmpty
(s
);
isEmpty
(s
))
=
T
rue
n
;
n
:
Nat
:

Nat
(n
;
n
)
=
T
rue
,
x
=
Nat
y
end
Figure
.:
An
Ultralo
ose
Stac
k
Sp
ecication

..
Dening
Ultralo
ose
St
yle


W
e
abbreviate


(t
;
t
)
=
T
rue
to
t


t
and
:(

(t
;
t
)
=
T
rue)
to
t


t
.

If


OUT
w
e
omit


from
the
signature
and
write
t
=

t
instead
of
t


t
in
the
axioms.

W
e
abbreviate


IN
x
:

:
P
to

r
x
:

:
P
and
add
the
line
IN
=
IN
to
the
signature.
The
eect
of
these
abbreviations
is
sho
wn
in
gure
..
W
e
nd
it
con
v
enien
t
to
k
eep
the
axioms
Cong
(
)
OUT
explicit
since
they
are
re-
quired
when
reasoning
ab
out
sp
ecications.
It
w
ould
probably
b
e
more
con
v
enien
t
to
abbreviate
them
if
one
w
as
more
in
terested
in
creating
or
understanding
sp
eci-
cations
than
in
formal
pro
ofs.
W
e
noted
ab
o
v
e
that
the
function


is
not
a
relation
but
rather
the
c
haracteristic
function
of
a
relation.
The
follo
wing
t
w
o
denitions
mak
e
this
more
precise.
Denition
.
((A
))
Let

b
e
a
signature,
IN
and
OUT
subsets
of
the
sorts
of

,
A
a

-algebra
and

a
(
;
OUT
)-congruence
o
v
er
A
.
The

OUT
-algebra

(A)
is
dened
for
eac
h
sym
b
ol
s


OUT
b
y
(A)
s
def
=

>
>
>
>
>
>
>
>
>
<
>
>
>
>
>
>
>
>
>
:
A
s
;
if
s


;
f0
;

g;
if
s
=
Bo
ol
;

;
if
s
=
T
rue;
0
;
if
s
=
F
alse;


if
s
=

.
where,
for
eac
h


T
,
the
function


:
A


A

!
f0
;

g
is
dened
b
y


(a
;
a
)
def
=
a


a
.
End
Denition.

Ultralo
ose
Sp
ecications

StackU
def
=
exp
ort
Stack
from
StackU
0
StackU
0
def
=
enric
h
Nat
+
Bo
ol
b
y
sign
Stack
:
t
yp
e
empty
:
!
Stack
push
:
Nat

Stack
!
Stack
p
op
:
Stack
!
Stack
top
:
Stack
!
Nat
isEmpty
:
Stack
!
Bo
ol
:
Stack

Stack
!
Bo
ol
IN
=
Nat
axioms

r
s
:
Stack
;
x
:
Nat
:
top
(push
(x
;
s
))
=
x

r
s
:
Stack
;
x
:
Nat
:
p
op
(push
(x
;
s
))

s
isEmpty
(empty
)
=
T
rue

r
s
:
Stack
;
x
:
Nat
:
isEmpty
(push
(x
;
s
))
=
F
alse
s
:
Stack
:
s

s
s
;
s
:
Stack
:
s

s
,
s

s
s
;
s
;
s
:
Stack
:
s

s
^
s

s
)
s

s
empty

empty
s
;
s
:
Stack
;
x
:
Nat
:
s

s
)
push
(x
;
s
)

push
(x
;
s
)
s
;
s
:
Stack
:
s

s
)
p
op
(s
)

p
op
(s
)
s
;
s
:
Stack
:
s

s
)
top
(s
)
=
top
(s
)
s
;
s
:
Stack
:
s

s
)
isEmpty
(s
)
=
isEmpty
(s
)
end
Figure
.:
A
Beha
viourally
Closed
USL
Stac
k
Denition
.
(
A
)
Let

b
e
a
signature
with
sorts
T
,
IN
and
OUT
subsets
of
T
and
A
a

OUT
-algebra.
The

-congruence

A
is
dened
for
eac
h
sort


T
and
v
alues
a
;
a

A

b
y
a


a
def
=
A

A

(t
;
t
)
=
A
T
rue
End
Denition.

..
Closure
of
SP
IN
OUT
under
IN
!
OUT
	
.
Closure
of
SP
IN
OUT
under
IN
!
OUT
The
previous
section
dened
a
transformation
from
a
\normal
sp
ecication"
SP
to
an
\ultralo
ose
sp
ecication"
SP
IN
OUT
and
hin
ted
that,
b
ecause
of
the
use
of
reac
hable
quan
tication
and
congruences
in
SP
IN
OUT
,
there
is
a
strong
link
with
the
relations
IN
!
OUT
and
IN
 
!
OUT
.
This
section
presen
ts
the
rst
of
three
theorems
whic
h
states
this
link
more
precisely
.
In
particular,
w
e
sho
w
that
the
sp
ecication
SP
IN
OUT
is
do
wn
w
ard
closed
under
IN
!
OUT
.
Theorem
.
(do
wn
w
ard
closure
of
SP
IN
OUT
)
Let

b
e
a
signature,
IN
and
OUT
subsets
of
the
sorts
of

,
Ax
a
set
of

-axioms
and
SP
the
at
sp
ecication
h
;
Ax
i.
SP
IN
OUT
is
do
wn
w
ard
closed
under
IN
!
OUT
.
That
is,
if
A
IN
!
OUT
B
and
B
:
SP
IN
OUT
then
A
:
SP
IN
OUT
.
Pro
of
Let
SP
0
b
e
the
sp
ecication
enric
h
Bo
ol
b
y
sign

OUT
axioms
Ax
IN
Cong
(
)
OUT
end
By
the
seman
tics
of
exp
ort

from
,
for
ev
ery
mo
del
B
of
SP
IN
OUT
,
there
is
an
extension
B
0
:
SP
0
.
Let
B
0
b
e
a
mo
del
of
SP
0
and
let
A
and
B
b
e

-algebras
and
h
a

-homomorphism
suc
h
that
B
=
B
0
j

and
h
:
A
IN
!
OUT
B

Ultralo
ose
Sp
ecications
0
Let

b
e
the

-congruence
o
v
er
A
is
dened
for
a
;
a

A

b
y
a


a
def
=
=
h

(a
)

B

h

(a
)
Since

B
is
a
congruence,
it
is
ob
vious
that

(A)
satises
the
congruence
axioms.
It
remains
to
sho
w
that
(A)
j
=
Ax
IN
.
W
e
shall
sho
w
that,
for
eac
h

-form
ula
'
and
v
aluation
v

V
al
(A
;
'
IN
),
(A)
j
=
v
'
IN
,
B
0
j
=
h
.
v
'
IN
Since

(A)
and
B
0
satisfy
the
same
axioms
(i.e.
closed
form
ulae)
and
B
0
satis-
es
all
axioms
in
Ax
IN
,
it
follo
ws
that
(A)
satises
all
axioms
in
Ax
IN
and
so
(A)j

:
SP
IN
OUT
.
The
pro
of
is
b
y
induction
o
v
er
the
structure
of
'.
Base
case:
('
=
true
)
F
or
an
y
v
aluation
v

V
al
(
(A);
').

(A)
j
=
v
true
IN
=
f
denition
of
ax
IN
g

(A)
j
=
v
true
=
f
denition
of
j
=
g
true
=
f
denition
of
j
=
g
B
0
j
=
h
.
v
true
=
f
denition
of
ax
IN
g
B
0
j
=
h
.
v
true
IN
Base
case:
('
=
t
=

t
)
F
or
an
y
v
aluation
v

V
al
(
(A);
').

(A)
j
=
v
(t
=

t
)
IN
=
f
denition
of
ax
IN
g

(A)
j
=
v


(t
;
t
)
=
T
rue
=
f
denition
of

(A)
g
B
0


(h
(t

(A
)
(v
));
h
(t

(A)
(v
)))
=
B
0
T
rue
=
f
lemma
.
g

..
Closure
of
SP
IN
OUT
under
IN
!
OUT

B
0


(t
(A)
(h
(v
));
t

(A
)
(h
(v
)))
=
B
0
T
rue
=
f
denition
of
j
=
t
=
t
g
B
0
j
=
h
.
v


(t
;
t
)
=
T
rue
=
f
denition
of
ax
IN
g
B
0
j
=
h
.
v
(t
=
t
)
IN
Inductiv
e
step:
('
=
:P
)
Supp
ose
that,
for
all
v

V
al
(
(A);
P
IN
),
(A)
j
=
v
P
IN
,
B
0
j
=
h
.
v
P
IN
.
Then,

(A)
j
=
v
(:P
)
IN
=
f
denition
of
ax
IN
g

(A)
j
=
v
:(P
IN
)
=
f
denition
of
j
=
:P
g
:
(A)
j
=
v
P
IN
=
f
inductiv
e
assumption
g
:B
0
j
=
h
.
v
P
IN
=
f
denition
of
j
=
:P
g
B
0
j
=
h
.
v
:(P
IN
)
=
f
denition
of
ax
IN
g
B
0
j
=
h
.
v
(:P
)
IN
Inductiv
e
step:
('
=
P
^
Q
)
Supp
ose
that,
for
all
v

V
al
((A
);
(P
^
Q
)
IN
),
(A
)
j
=
v
P
IN
,
B
j
=
h
.
v
P
IN
and
(A)
j
=
v
Q
IN
,
B
j
=
f
.
v
Q
IN
.
Then,

(A)
j
=
v
(P
^
Q
)
IN
=
f
denition
of
ax
IN
g

(A)
j
=
v
P
IN
^
Q
IN
=
f
denition
of
j
=
P
^
Q
g

(A)
j
=
v
P
IN
^
(A)
j
=
v
Q
IN
=
f
inductiv
e
assumption
g
B
j
=
h
.
v
P
IN
^
B
j
=
h
.
v
Q
IN
=
f
denition
of
j
=
P
^
Q
g
B
j
=
h
.
v
P
IN
^
Q
IN
=
f
denition
of
ax
IN
g
B
j
=
h
.
v
(P
^
Q
)
IN
Inductiv
e
step:
('
=
x
:

:
P
)
Supp
ose
that,
for
all
v

V
al((A);
P
IN
),

(A)
j
=
v
P
IN
,
B
j
=
h
.
v
P
IN
.
Then,

Ultralo
ose
Sp
ecications


(A)
j
=
v
(x
:

:
P
)
IN
=
f
denition
of
'
IN
g

(A)
j
=
v


IN
x
:

:
P
IN
=
f
denition
of
j
=


IN
g
(a
:
a


(A)

^
R(
;
IN
;
a
)
:
(A)
j
=
v
fx
:=a
g
P
IN
)
=
f
inductiv
e
assumption
g
(a
:
a


(A)

^
R(
;
IN
;
a
)
:
B
j
=
h
.
(v
fx
:=a
g)
P
IN
)
=
f
.
distributes
o
v
er

g
(a
:
a


(A)

^
R(
;
IN
;
a
)
:
B
j
=
(h
.
v
)fx
:=h
(a
)g
P
IN
)
=
f
surjectivit
y
of
h
j
IN
g
(b
:
b


(B
)

^
R(
;
IN
;
b
)
:
B
j
=
(h
.
v
)fx
:=b
g
P
IN
)
=
f
denition
of
j
=

g
B
0
j
=
h
.
v


0
T
0
x
:

:
P
IN
=
f
denition
of
'
IN
g
B
j
=
h
.
v
(x
:

:
P
)
IN
Hence,
b
y
the
principle
of
structural
induction,
w
e
conclude
that,
for
an
y
form
ula
'

WFF
(IN
;
OUT
),
and
v
aluation
v

V
al((A);
'
IN
)
(A)
j
=
v
'
IN
,
B
0
j
=
h
.
v
'
IN
Since

(A)
and
B
0
satisfy
the
same
axioms
(i.e.
closed
form
ulae)
and
B
0
satis-
es
all
axioms
in
Ax
IN
,
it
follo
ws
that
(A)
satises
all
axioms
in
Ax
IN
and
so
(A)j

:
SP
IN
OUT
.
Since

(A)j

=
A,
it
follo
ws
that,
if
A
IN
!
OUT
B
and
B
:
SP
IN
OUT
then
A:
SP
IN
OUT
.
End
Theorem.
F
ollo
wing
the
observ
ation
that
the
use
of
reac
hable
quan
tication
and
congruences
in
ultralo
ose
sp
ecications
suggests
that
there
should
b
e
a
link
b
et
w
een
the
ultralo
ose
st
yle
and
the
relation
IN
!
OUT
,
w
e
ha
v
e
sho
wn
that
SP
IN
OUT
is
do
wn
w
ard
closed
under
IN
!
OUT
.
It
is
tempting
to
conjecture
that
Mo
d(SP
IN
OUT
)
=
Cl
IN
!
OUT
(Mo
d(SP
))
T
o
see
that
this
do
es
not
hold,
consider
the
follo
wing
pathological
example:

..
Closure
of
SP
IN
OUT
under
IN
!
OUT

SP
def
=
sp
ec

:t
yp
e
axioms
	x
:

:
true
end
whic
h
has
as
mo
dels
an
y

-algebra
A
with
non-empt
y
carrier
A

(where

def
=
Sig
(SP
)).
Applying
the
ultralo
ose
transformation,
w
e
obtain
the
sp
ecication
SP
;
;
def
=
sp
ec

:t
yp
e
.
.
.
axioms
	

;
x
:

:
true
.
.
.
Since
there
are
no
terms
in
W
(
;
;),
w
e
can
easily
sho
w
that
for
an
y

;
;
-algebra
A
0
,
A
0
j
=
	

;
x
:

:
true
:
A
0
j
=
	

;
x
:

:
true
=
f
denition
of
	
g
A
0
j
=
:

;
x
:

:
false
=
f
denition
of
j
=
g
:(a
:
a

A
0

^
R(
;
;;
a
):
false
)
=
f
A
0

con
tains
no
(
;
;)-reac
hable
v
alues
g
:true
=
false
Hence,
SP
;
;
is
inconsisten
t
and
therefore
cannot
b
e
the
closure
of
the
(consisten
t)
sp
ecication
SP
.
This
coun
terexample
sho
ws
a
signican
t
dierence
b
et
w
een
the
ultralo
ose
trans-
formation
and
b
eha
vioural
abstraction.
Namely
,
that
in
certain
circumstances
the
ultralo
ose
transformation
can
reduce
the
n
um
b
er
of
mo
dels
of
a
sp
ecication
whereas
b
eha
vioural
abstraction
can
only
increase
the
n
um
b
er
of
mo
dels.
Sections
.
and
.
sho
w
that
this
can
happ
en
only
if
the
sp
ecication
uses
inequations
or
existen
tial
quan
tication
and
iden
ties
\safe"
w
a
ys
of
using
these
constructs.

Ultralo
ose
Sp
ecications

.
Closure
of
SP
IN
OUT
under
IN
 
!
OUT
The
previous
section
sho
w
ed
that
SP
IN
OUT
is
do
wn
w
ard
closed
under
IN
!
OUT
.
It
is
tempting
to
assume
that
SP
IN
OUT
will
also
b
e
closed
under
the
(w
eak
er)
relation
IN
 
!
OUT
.
Ho
w
ev
er,
this
is
not
so:
consider
the
follo
wing
pathological
example:
SP
def
=
sp
ec
sign

:t
yp
e
a
;
b
:!

axioms
a
=
b
end
Under
the
ultralo
ose
transformation,
this
is
transformed
in
to
SP
;
;
def
=
exp
ort
f
;
a
;
b
g
from
sp
ec
sign
Bo
ol
;

:t
yp
e
T
rue;
F
alse
:!
Bo
ol
a
;
b
:!



:



!
Bo
ol
axioms
a


b
T
rue
=
F
alse
b
:
Bo
ol
:
b
=
T
rue
_
b
=
F
alse
x
:

:
x


x
x
;
y
:

:
x


y
,
y


x
x
;
y
;
z
:

:
x


y
^
y


z
)
x


z
a


a
b


b
end
One
mo
del
of
SP
;
;
is
the
algebra
A
def
=
h

=
f0
;

g
a
=
0
b
=

i

..
Closure
of
SP
IN
OUT
under
IN
 
!
OUT

This
is
(;;
;)-b
eha
viourally
equiv
alen
t
to
the
algebra
B
dened
b
y
B
def
=
h

=
f0
g
a
=
0
b
=
0
i
(to
see
that
A
;
 
!
;
B
,
consider
the
(;;
;)-homomorphism
h

(x
)
def
=
0
).
Since
B
a
=
B
b
,
it
is
easy
to
sho
w
that
there
is
no
reexiv
e
relation
:
B

$
B

suc
h
that
B
a

B
b
and
so
B
cannot
b
e
a
mo
del
of
SP
;
;
.
Since
A
;
 
!
;
B
,
w
e
conclude
that
SP
;
;
is
not
closed
under
;
 
!
;
.
Th
us
the
(IN
;
OUT
)-ultralo
ose
transformation
of
a
sp
ecication
SP
whic
h
con
tains
inequations
is
not
(IN
;
OUT
)-b
eha
viourally
closed.
One
complication
in
this
statemen
t
is
that
is
not
clear
what
w
e
mean
when
w
e
sa
y
that
an
axiom
\con
tains
an
inequation".
T
o
see
wh
y
this
is
v
ague,
consider
the
follo
wing
eigh
t
axioms:
:x
:

:
t
=
t
	x
:

:
t
=
t
x
:

:
:t
=
t
x
:

:
t
=
t
:x
:

:
t
=
t
^
t
=
t
	x
:

:
t
=
t
_
t
=
t
:x
:

:
t
=
t
	x
:

:
t
=
t
Considering
the
rst
column,
the
rst
t
w
o
axioms
don't
lexic
al
ly
con
tain
inequations
but
the
last
t
w
o
axioms
do.
Ho
w
ev
er,
if
w
e
consider
the
equiv
alen
t
axioms
in
the
second
column,
the
rst
t
w
o
axioms
do
lexic
al
ly
con
tain
inequations
but
the
last
t
w
o
axioms
don't.
W
e
resolv
e
this
am
biguit
y
b
y
\pushing
negations
in
w
ards":
transforming
axioms
in
to
\negation
normal
form"
(see,
for
example,
[
section
..]).
This
mak
es
use
of
_
and
	
explicit
allo
wing
us
to
apply
a
simple
lexical
test.
(The
axioms
in
the
second
column
are
in
negation
normal
form.)
Denition
.
(negation
normal
form)

Ultralo
ose
Sp
ecications

Let

b
e
a
signature.
The
\negation
normal
form"
of
an
y

-form
ula
'
(written
NNF
('))
is
inductiv
ely
dened
b
y
NNF
(true
)
def
=
true
NNF
(:true
)
def
=
false
NNF
(t
=

t
)
def
=
t
=

t
NNF
(:(t
=

t
))
def
=
t
=

t
NNF
(P
^
Q
)
def
=
NNF
(P
)
^
NNF
(Q
)
NNF
(:(P
^
Q
))
def
=
NNF
(:P
)
_
NNF
(:Q
)
NNF
(x
:

:
P
)
def
=
x
:

:
NNF
(P
)
NNF
(:(x
:

:
P
))
def
=
	x
:

:
NNF
(:P
)
W
e
sa
y
that
a
form
ula
'
is
in
ne
gation
normal
form
if
'
=
NNF
(').
End
Denition.
Theorem
.
(closure
of
SP
IN
OUT
)
Let

b
e
a
signature,
IN
and
OUT
subsets
of
the
sorts
of

,
Ax
a
set
of

-axioms
and
SP
the
at
sp
ecication
h
;
Ax
i.
If
all
inequations
in
NNF
(
jAx
j
)
are
o
v
er
sorts
in
OUT
,
then
SP
IN
OUT
is
(IN
;
OUT
)-
b
eha
viourally
closed.
Pro
of
Let
SP
0
b
e
the
sp
ecication
enric
h
Bo
ol
b
y
sign

OUT
axioms
Ax
IN
Cong
(
)
OUT
end
By
the
seman
tics
of
exp
ort

from
,
for
ev
ery
mo
del
A
of
SP
IN
OUT
,
there
is
an
extension
A
0
:
SP
0
.

..
Closure
of
SP
IN
OUT
under
IN
 
!
OUT

Let
A
0
b
e
a
mo
del
of
SP
0
and
A
def
=
A
0
j

.
Let
B
b
e
a

-algebra
suc
h
that
A
IN
 
!
OUT
B
.
Since
A
0
satises
the
congruence
axioms,

A
0
is
a
congruence
o
v
er
Aj

and
so,
b
y
lemm
a
.	,
there
is
a

-congruence

B
o
v
er
B
and
a
homomorphism
h
:
R(
;
IN
;
A
)
!
R(
;
IN
;
B)=

B
suc
h
that,
for
eac
h
sort


T
and
(
;
IN
)-reac
hable
v
alues
a
;
a

A

,
a

A
0

a
)
h

(a
)
=
h
(a
)
Since

A
0
is
a
congruence,

B
(B
)
satises
the
congruence
axioms.
W
e
shall
sho
w
that,
for
eac
h

-form
ula
'
and
v
aluation
v

V
al
(A
;
'
IN
),
A
0
j
=
v
'
IN
)

B
(B
)
j
=
h
.
v
'
IN
pro
vided
that
all
inequations
in
NNF
(')
are
o
v
er
sorts
in
OUT
.
F
rom
whic
h
it
follo
ws
that
A
0
j
=
Ax
IN
)

B
(B
)
j
=
Ax
IN
pro
vided
that
all
inequations
in
NNF
(')
are
o
v
er
sorts
in
OUT
.
Hence
the
result.
The
pro
of
is
b
y
induction
o
v
er
the
structure
of
NNF
(').
Base
cases:
('
=
true
and
'
=
false
)
F
or
an
y
v
aluation
v

V
al
(A
0
;
').
A
0
j
=
v
true
IN
=
f
denition
of
ax
IN
g
A
0
j
=
v
true
=
f
denition
of
j
=
g
true
=
f
denition
of
j
=
g

B
(B
)
j
=
h
.
v
true
=
f
denition
of
ax
IN
g

B
(B
)
j
=
h
.
v
true
IN

Ultralo
ose
Sp
ecications

Hence,
A
0
j
=
v
true
IN
)

B
(B
)
j
=
h
.
v
true
IN
and
A
0
j
=
v
false
IN
)

B
(B
)
j
=
h
.
v
false
IN
Base
case:
('
=
t
=

t
)
F
or
an
y
v
aluation
v

V
al
(A
0
;
').
A
0
j
=
v
(t
=

t
)
IN
=
f
denition
of
ax
IN
g
A
0
j
=
v


(t
;
t
)
=
T
rue
=
f
denition
of
j
=
and

A
0
g
t
A
(v
)

A
0

t
A
(v
)
)
f
Liebniz
g
h
(t
A
(v
))

B

h
(t
A
(v
))
=
f
lemma
.
g
t
B
(h
.
v
)

B

t
B
(h
.
v
)
=
f
denition
of

A
0
and
j
=
g

B
(B
)
j
=
h
.
v


(t
;
t
)
=
T
rue
=
f
denition
of
ax
IN
g

B
(B
)
j
=
h
.
v
(t
=

t
)
IN
Base
case:
('
=
t
=

t
and


OUT
)
F
or
an
y
v
aluation
v

V
al
(A
0
;
').
A
0
j
=
v
(t
=

t
)
IN
=
f
denition
of
ax
IN
g
A
0
j
=
v


(t
;
t
)
=
F
alse
=
f
denition
of
j
=
and

A
0
g
t
A
(v
)

A
0

t
A
(v
)
=
f
lemma
.	
and


OUT
g
h
(t
A
(v
))

B

h
(t
A
(v
))
=
f
lemma
.
g
t
B
(h
.
v
)

B

t
B
(h
.
v
)
=
f
denition
of

A
0
and
j
=
g

B
(B
)
j
=
h
.
v


(t
;
t
)
=
F
alse
=
f
denition
of
ax
IN
g

B
(B
)
j
=
h
.
v
(t
=

t
)
IN

..
Closure
of
SP
IN
OUT
under
IN
 
!
OUT
	
Inductiv
e
steps:
('
=
P
^
Q
and
'
=
P
_
Q
)
Supp
ose
that,
for
all
v

V
al(A
0
;
(P
^
Q
)
IN
),
A
0
j
=
v
P
IN
)
B
j
=
h
.
v
P
IN
and
A
0
j
=
v
Q
IN
)
B
j
=
h
.
v
Q
IN
.
Then,
A
0
j
=
v
(P
^
Q
)
IN
=
f
denition
of
ax
IN
g
A
0
j
=
v
P
IN
^
Q
IN
=
f
denition
of
j
=
P
^
Q
g
A
0
j
=
v
P
IN
^
A
0
j
=
v
Q
IN
)
f
inductiv
e
assumption
g
B
j
=
h
.
v
P
IN
^
B
j
=
h
.
v
Q
IN
=
f
denition
of
j
=
P
^
Q
g
B
j
=
h
.
v
P
IN
^
Q
IN
=
f
denition
of
ax
IN
g
B
j
=
h
.
v
(P
^
Q
)
IN
By
a
similar
pro
of,
w
e
ma
y
sho
w
that,
if
A
0
j
=
v
P
IN
)
B
j
=
h
.
v
P
IN
and
A
0
j
=
v
Q
IN
)
B
j
=
h
.
v
Q
IN
,
then
A
0
j
=
v
(P
_
Q
)
IN
)
B
j
=
h
.
v
(P
_
Q
)
IN
Inductiv
e
step:
('
=
x
:

:
P
and
'
=
	x
:

:
P
)
Supp
ose
that,
for
all
v

V
al(A
0
;
P
IN
),
A
0
j
=
v
P
IN
)
B
j
=
h
.
v
P
IN
.
Then,
A
0
j
=
v
(x
:

:
P
)
IN
=
f
denition
of
'
IN
g
A
0
j
=
v


IN
x
:

:
P
IN
=
f
denition
of
j
=


IN
g
(a
:
a

A

^
R
(
;
IN
;
a
)
:
A
j
=
v
fx
:=a
g
P
IN
)
)
f
inductiv
e
assumption
g
(a
:
a

A

^
R
(
;
IN
;
a
)
:
B
j
=
h
.
(v
fx
:=a
g)
P
IN
)
=
f
.
distributes
o
v
er

g
(a
:
a

A

^
R
(
;
IN
;
a
)
:
B
j
=
(h
.
v
)fx
:=h
(a
)g
P
IN
)
=
f
surjectivit
y
of
h
j
IN
g
(b
:
b

B

^
R
(
;
IN
;
b
)
:
B
j
=
(h
.
v
)fx
:=b
g
P
IN
)
=
f
denition
of
j
=

g

B
(B
)
j
=
h
.
v


IN
x
:

:
P
IN
=
f
denition
of
'
IN
g
B
j
=
h
.
v
(x
:

:
P
)
IN
By
a
similar
argumen
t,
w
e
ma
y
sho
w
that
A
0
j
=
v
(	x
:

:
P
)
IN
)
B
j
=
h
.
v
(	x
:

:
P
)
IN

Ultralo
ose
Sp
ecications
	0
Hence,
b
y
the
principle
of
structural
induction,
w
e
conclude
that,
for
an
y
form
ula
'

WFF
(IN
;
OUT
),
and
v
aluation
v

V
al(A
0
;
')
suc
h
that
all
inequations
in
NNF
(')
are
o
v
er
sorts
in
OUT
,
that
A
0
j
=
v
'
IN
,

B
(B
)
j
=
h
.
v
'
IN
Hence,
whenev
er
A
is
a
mo
del
of
SP
IN
OUT
and
A
IN
 
!
OUT
B
,
then

B
(B
)
is
a
mo
del
of
SP
IN
OUT
and
w
e
conclude
that
SP
IN
OUT
is
b
eha
viourally
closed.
End
Theorem.
This
result
is
imp
ortan
t
b
ecause
it
pro
vides
sp
eciers
with
a
precise
metho
dology
for
writing
b
eha
viourally
closed
sp
ecications:
rst
write
the
sp
ecication
in
the
normal
w
a
y
(but
a
v
oiding
inequations!);
then
apply
the
ultralo
ose
transformation
to
obtain
a
b
eha
viourally
closed
sp
ecication.
W
e
ha
v
e
giv
en
coun
terexamples
to
sho
w
that
it
is
not
true
that
SP
IN
OUT
is
(IN
;
OUT
)-
b
eha
viourally
closed
for
an
y
sp
ecication
SP
.
Observing
that
the
problem
la
y
in
inequations,
w
e
dened
negation
normal
form
to
let
us
iden
tify
problematic
axioms
(those
whose
negation
normal
form
con
tains
inequations
t
=

t
where

=

OUT
)
and
sho
w
ed
that,
if
SP
do
es
not
con
tain
suc
h
axioms
then
SP
IN
OUT
is
(IN
;
OUT
)-
b
eha
viourally
closed.
.
Equiv
alence
of
ASL
and
USL
The
previous
section
sho
w
ed
that
SP
IN
OUT
is
closed
under
IN
 
!
OUT
(pro
vided
SP
con
tains
no
inequations).
It
is
natural
to
w
onder
whether,
for
suc
h
sp
ecications,
Mo
d(SP
IN
OUT
)
=
Cl
IN
 
!
OUT
(SP
)
But,
at
the
end
of
section
.
w
e
sho
w
ed
that
this
do
es
not
hold
for
IN
!
OUT
.
Since
IN
 
!
OUT
is
w
eak
er
than
IN
!
OUT
w
e
ma
y
conclude
that
it
do
es
not
hold
for
IN
 
!
OUT
either.

..
Equiv
alence
of
ASL
and
USL
	
In
this
case,
the
problem
lies
in
the
use
of
existen
tial
quan
tication.
W
e
shall
sho
w
that
the
seman
tics
of
the
transformed
sp
ecication
SP
IN
OUT
is
exactly
the
b
eha
vioural
closure
of
the
mo
dels
of
SP
pro
vided
SP
con
tains
neither
existen
tial
quan
tication
nor
inequations.
The
pro
of
requires
t
w
o
supp
orting
lemmas.
The
rst
states
that
all
mo
dels
of
SP
IN
OUT
are
b
eha
viourally
equiv
alen
t
to
a
mo
del
of
SP
.
Lemma
.
(Mo
d(SP
IN
OUT
)

Mo
d
IN
OUT
(SP
))
Let

b
e
a
signature,
IN
and
OUT
subsets
of
the
sorts
of

,
Ax
a
set
of

-axioms
and
SP
the
at
sp
ecication
h
;
Ax
i.
Then,
for
an
y

-algebra
A,
A

Mo
d(SP
IN
OUT
)
)
A

Mo
d
IN
OUT
(SP
)
(Mo
d
IN
OUT
(SP
)
is
dened
in
denition
..)
Pro
of
W
e
shall
sho
w
that
for
an
y
mo
del
A
of
SP
IN
OUT
,
there
is
an
(IN
;
OUT
)-b
eha
viourally
equiv
alen
t

-algebra
B
suc
h
that
B
is
a
mo
del
of
SP
.
Let
SP
0
b
e
the
sp
ecication
enric
h
Bo
ol
b
y
sign

OUT
axioms
Ax
IN
Cong
(
)
OUT
end
Let
A
0
b
e
an
y
mo
del
of
SP
0
and
let
A
def
=
A
0
j

.
Since
A
0
satises
the
congruence
axioms,

A
0
is
a

-congruence.
Let
B
b
e
dened
b
y
B
def
=
R(
;
IN
;
A)=

A
0
and
let
h
def
=
[
[
]
]

A
0
.

Ultralo
ose
Sp
ecications
	
W
e
shall
sho
w
that,
for
eac
h

-form
ula
'
and
v
aluation
v

V
al
(A;
'
IN
)
A
0
j
=
v
'
IN
,
B
j
=
h
.
v
'
The
pro
of
is
b
y
induction
o
v
er
the
structure
of
'.
Base
case:
('
=
true
)
F
or
an
y
v
aluation
v

V
al
(A
0
;
').
A
0
j
=
v
true
IN
=
f
denition
of
ax
IN
g
A
0
j
=
v
true
=
f
denition
of
j
=
g
true
=
f
denition
of
j
=
g
B
j
=
h
.
v
true
Base
case:
('
=
t
=

t
)
F
or
an
y
v
aluation
v

V
al
(A
0
;
').
A
0
j
=
v
(t
=

t
)
IN
=
f
denition
of
ax
IN
g
A
0
j
=
v


(t
;
t
)
=
T
rue
=
f
denition
of
j
=
g

A
0

(t
A
0
(v
);
t
A
0
(v
))
=
A
0
T
rue
=
f
denition
of

A
0
g
t
0
A
(v
)
A
0

t
0
A
(v
)
=
f
denition
of
h
g
h
(t
0
A
(v
))
=
h
(t
0
A
(v
))
=
f
lemma
.
g
t
B
(h
.
v
)
=
t
B
(h
.
v
)
=
f
denition
of
j
=
t
=
t
g
B
j
=
h
.
v
t
=
t
Inductiv
e
step:
('
=
:P
)
Supp
ose
that,
for
all
v

V
al(A
0
;
P
IN
),
A
0
j
=
v
P
IN
,
B
j
=
h
.
v
P
IN
.
Then,
A
0
j
=
v
(:P
)
IN
=
f
denition
of
ax
IN
g
A
0
j
=
v
:(P
IN
)

..
Equiv
alence
of
ASL
and
USL
	
=
f
denition
of
j
=
:P
g
:A
0
j
=
v
P
IN
,
f
inductiv
e
assumption
g
:B
j
=
h
.
v
P
=
f
denition
of
j
=
:P
g
B
j
=
h
.
v
:(P
)
Inductiv
e
step:
('
=
P
^
Q
)
Supp
ose
that,
for
all
v

V
al(A
0
;
(P
^
Q
)
IN
),
A
0
j
=
v
P
IN
,
B
j
=
h
.
v
P
IN
and
A
0
j
=
v
Q
IN
,
B
j
=
f
.
v
Q
IN
.
Then,
A
0
j
=
v
(P
^
Q
)
IN
=
f
denition
of
ax
IN
g
A
0
j
=
v
P
IN
^
Q
IN
=
f
denition
of
j
=
P
^
Q
g
A
0
j
=
v
P
IN
^
A
0
j
=
v
Q
IN
,
f
inductiv
e
assumption
g
B
j
=
h
.
v
P
^
B
j
=
h
.
v
Q
=
f
denition
of
j
=
P
^
Q
g
B
j
=
h
.
v
P
^
Q
Inductiv
e
step:
('
=
x
:

:
P
)
Supp
ose
that,
for
all
v

V
al(A
0
;
P
IN
),
A
0
j
=
v
P
IN
,
B
j
=
h
.
v
P
IN
.
Then,
A
0
j
=
v
(x
:

:
P
)
IN
=
f
denition
of
'
IN
g
A
0
j
=
v


IN
x
:

:
P
IN
=
f
denition
of
j
=


IN
g
(a
:
a

A

^
R
(
;
IN
;
a
)
:
A
j
=
v
fx
:=a
g
P
IN
)
=
f
inductiv
e
assumption
g
(a
:
a

A

^
R
(
;
IN
;
a
)
:
B
j
=
h
.
(v
fx
:=a
g)
P
)
=
f
.
distributes
o
v
er

g
(a
:
a

A

^
R
(
;
IN
;
a
)
:
B
j
=
(h
.
v
)fx
:=h
(a
)g
P
)
=
f
surjectivit
y
of
h
j
IN
g
(b
:
b

B

^
R
(
;
IN
;
b
)
:
B
j
=
(h
.
v
)fx
:=b
g
P
)
=
f
denition
of
j
=

g
B
j
=
h
.
v


IN
x
:

:
P

Ultralo
ose
Sp
ecications
	
Hence,
b
y
the
principle
of
structural
induction,
w
e
conclude
that,
for
an
y
form
ula
'

WFF
(IN
;
OUT
),
and
v
aluation
v

V
al(A
0
;
')
A
0
j
=
v
'
IN
,
B
j
=
h
.
v
'
Therefore
w
e
conclude
that,
for
an
y

-algebra
A,
A:
SP
IN
)
B
:
SP
Since
A
IN
 
!
OUT
B
,
the
result
immediatel
y
follo
ws.
End
Lemma.
The
second
lemma
states
that
all
mo
dels
of
SP
are
mo
dels
of
SP
IN
OUT
.
Lemma
.	
(SP
IN
OUT
 
SP
)
Let

b
e
a
signature,
IN
and
OUT
subsets
of
the
sorts
of

,
Ax
a
set
of

-axioms
and
SP
the
at
sp
ecication
h
;
Ax
i.
If
all
existen
tial
quan
tication
in
NNF
(
jAx
j
)
is
o
v
er
sorts
in
IN
then,
for
an
y

-
algebra
A,
A:
SP
)
A:
SP
IN
OUT
Pro
of
Let
SP
0
b
e
the
sp
ecication
enric
h
Bo
ol
b
y
sign

OUT
axioms
Ax
IN
Cong
(
)
OUT
end
W
e
shall
sho
w
that
for
ev
ery
mo
del
A:
SP
,
there
is
an
extension
A
0
suc
h
that
A
0
:
SP
0
and,
hence,
A:
SP
IN
OUT
.

..
Equiv
alence
of
ASL
and
USL
	
Let
A
b
e
a
mo
del
of
SP
.
Since
equalit
y
is
a
congruence
relation,
=(A)
satises
the
congruence
axioms.
W
e
shall
sho
w
that,
for
eac
h

-form
ula
'
and
v
aluation
v

V
al
(A
;
')
suc
h
that
all
existen
tial
quan
tication
in
NNF
(')
is
o
v
er
sorts
in
IN
,
that
A
j
=
v
'
)
=(A
)
j
=
v
'
IN
The
pro
of
is
b
y
induction
o
v
er
the
structure
of
NNF
(').
Base
cases:
('
=
true
and
'
=
false
)
F
or
an
y
v
aluation
v

V
al
(A
;
').
A
j
=
v
true
=
f
denition
of
j
=
g
true
=
f
denition
of
j
=
g
=
(A)
j
=
h
.
v
true
=
f
denition
of
ax
IN
g
=
(A)
j
=
h
.
v
true
IN
Base
cases:
('
=
t
=

t
and
'
=
t
=

t
F
or
an
y
v
aluation
v

V
al
(A
;
').
A
j
=
v
t
=

t
=
f
denition
of
j
=
g
t
A
(v
)
=
t
A
(v
)
=
f
denition
of

and
=
(A)
g


(t
=
(A
)
(v
);
t
=
(A)
(v
))
=
=(A)
T
rue
=
f
denition
of
j
=
g
=
(A)
j
=
v


(t
;
t
)
=
T
rue
=
f
denition
of
ax
IN
g
=
(A)
j
=
v
(t
=

t
)
IN
Hence,
A
j
=
v
t
=

t
)
=(A
)
j
=
v
t
=

t
and
A
j
=
v
t
=

t
)
=(A
)
j
=
v
t
=

t

Ultralo
ose
Sp
ecications
	
Inductiv
e
step:
('
=
P
^
Q
and
'
=
P
_
Q
)
Supp
ose
that,
for
all
v

V
al
(A;
P
^
Q
),
A
j
=
v
P
)
=(A)
j
=
v
P
IN
and
A
j
=
v
Q
)
=(A)
j
=
v
Q
IN
.
Then,
A
j
=
v
P
^
Q
=
f
denition
of
j
=
P
^
Q
g
A
j
=
v
P
^
A
j
=
v
Q
)
f
inductiv
e
assumption
g
=
(A)
j
=
v
P
IN
^
=(A)
j
=
v
Q
IN
=
f
denition
of
j
=
P
^
Q
g
=
(A)
j
=
v
P
IN
^
Q
IN
=
f
denition
of
ax
IN
g
=
(A)
j
=
v
(P
^
Q
)
IN
By
a
similar
pro
of,
w
e
ma
y
sho
w
that,
if
A
j
=
v
P
)
=(A)
j
=
v
P
IN
and
A
j
=
v
Q
)
=(A)
j
=
v
Q
IN
,
then
A
j
=
v
P
_
Q
)
=(A
)
j
=
v
(P
_
Q
)
IN
Inductiv
e
step:
('
=
x
:

:
P
)
Supp
ose
that,
for
all
v

V
al(A;
P
),
A
j
=
v
P
)
=(A)
j
=
v
P
IN
.
Then,
A
j
=
v
x
:

:
P
=
f
denition
of
j
=

g
(a
:
a

A

:
A
j
=
v
fx
:=a
g
P
)
)
f
predicate
calculus
g
(a
:
a

A

^
R(
;
IN
;
a
):
A
j
=
v
fx
:=a
g
P
)
)
f
inductiv
e
assumption
g
(a
:
a

A

^
R(
;
IN
;
a
):
=
(A)
j
=
v
fx
:=a
g
P
IN
)
=
f
denition
of
j
=


IN
g
=
(A)
j
=
v


IN
x
:

:
P
IN
=
f
denition
of
'
IN
g
=
(A)
j
=
v
(x
:

:
P
)
IN
Inductiv
e
step:
('
=
	x
:

:
P
and


IN
)
Supp
ose
that,
for
all
v

V
al(A;
P
IN
),
A
j
=
v
P
IN
)
B
j
=
h
.
v
P
IN
.
Then,
A
j
=
v
	x
:

:
P
=
f
denition
of
j
=
	

IN
g
(	a
:
a

A

:
A
j
=
v
fx
:=a
g
P
)
=
f


IN
g

..
Equiv
alence
of
ASL
and
USL
	
(	a
:
a

A

^
R(
;
IN
;
a
):
A
j
=
v
fx
:=a
g
P
)
)
f
inductiv
e
assumption
g
(	a
:
a

A

^
R(
;
IN
;
a
):
=
(A)
j
=
v
fx
:=a
g
P
IN
)
=
f
denition
of
j
=
	

IN
g
=
(A)
j
=
v
	

IN
x
:

:
P
IN
=
f
denition
of
'
IN
g
=
(A)
j
=
v
(	x
:

:
P
)
IN
Hence,
b
y
the
principle
of
structural
induction,
w
e
conclude
that,
for
an
y
form
ula
'

WFF
(IN
;
OUT
),
and
v
aluation
v

V
al
(A;
')
suc
h
that
all
existen
tial
quan-
tication
in
NNF
(')
is
o
v
er
sorts
in
IN
,
A
j
=
v
'
)
=(A)
j
=
v
'
IN
It
follo
ws
that,
for
an
y
observ
ational
axiom
ax
suc
h
that
all
existen
tial
quan
tication
in
NNF
(ax
)
is
o
v
er
sorts
in
IN
,
A
j
=
ax
)
=(A)
j
=
ax
IN
and
so,
for
ev
ery
mo
del
A
of
SP
,
(A
)
is
a
mo
del
of
SP
0
.
Hence
result.
End
Lemma.
W
e
can
no
w
state
and
pro
v
e
the
ma
jor
result
of
this
thesis.
Theorem
.0
(seman
tic
eect
of
ultralo
ose
transformation)
Let

b
e
a
signature,
IN
and
OUT
subsets
of
the
sorts
of

,
Ax
a
set
of

-axioms
and
SP
the
at

-sp
ecication
h
;
Ax
i.
If
all
existen
tial
quan
tication
in
NNF
(
jAx
j
)
is
o
v
er
sorts
in
IN
and
all
inequations
in
NNF
(
jAx
j
)
is
o
v
er
sorts
in
OUT
,
then
Mo
d(SP
IN
OUT
)
=
Mo
d
IN
OUT
(SP
)
Pro
of

Ultralo
ose
Sp
ecications
	
Mo
d
(SP
IN
OUT
)
=
Mo
d
IN
OUT
(SP
)
=
f
theorem
.
g
Mo
d
IN
OUT
(SP
IN
OUT
)
=
Mo
d
IN
OUT
(SP
)
=
f
set
theory
g
Mo
d
IN
OUT
(SP
)

Mo
d
IN
OUT
(SP
IN
OUT
)
^
Mo
d
IN
OUT
(SP
IN
OUT
)

Mo
d
IN
OUT
(SP
)
(
f
closure
prop
erties
g
Mo
d
(SP
)

Mo
d(SP
IN
OUT
)
^
Mo
d
IN
OUT
(SP
IN
OUT
)

Mo
d
IN
OUT
(SP
)
=
f
lemma
.	
g
Mo
d
IN
OUT
(SP
IN
OUT
)

Mo
d
IN
OUT
(SP
)
=
f
theorem
.
g
Mo
d
(SP
IN
OUT
)

Mo
d
IN
OUT
(SP
)
=
f
lemma
.
g
true
End
Theorem.
Ha
ving
seen
coun
terexamples
to
sho
w
that
Mo
d(SP
IN
OUT
)
=
Cl
IN
 
!
OUT
(Mo
d(SP
))
do
es
not
hold
if
SP
con
tains
problematic
axioms
(axioms
con
taining
inequations
or
existen
tial
quan
tication)
w
e
sho
w
ed
that
it
do
es
hold
in
the
absence
of
suc
h
problematic
axioms.
W
e
ha
v
e
therefore
succeeded
in
precisely
c
haracterising
the
seman
tic
eect
of
the
ultralo
ose
sp
ecication
transformation.
No
suc
h
c
haracterisation
has
b
een
published
b
efore
although
w
e
ha
v
e
b
een
informed
that
Reic
hel
[]
presen
ts
a
similar
result
to
the
ab
o
v
e.
W
e
ha
v
e
not
b
een
able
to
obtain
this
pap
er
but
base
the
follo
wing
comparision
on
Reic
hel's
b
o
ok
[
c
hapter

]
published
t
w
o
y
ears
later
(whic
h
w
e
assume
presen
ts
essen
tially
the
same
w
ork).
W
e
note
three
signican
t
dierences
b
et
w
een
Reic
hel's
framew
ork
and
our
o
wn:
.
The
most
ob
vious
dierence
is
that
Reic
hel
do
es
not
discuss
ultralo
ose
sp
eci-
cations!
Ho
w
ev
er,
w
e
b
eliev
e
Reic
hel's
w
ork
is
comparable
since
he
obtains
a
similar
eect
b
y
replacing
the
normal
notion
of
satisfaction
of
axioms
b
y
a
notion
of

..
Equiv
alence
of
ASL
and
USL
		
b
eha
vioural
satisfaction
of
axioms.
This
notion
is
based
(in
the
ob
vious
w
a
y)
on
a
notion
of
b
eha
vioural
equiv
alence
of
elemen
ts
of
an
algebra
whic
h
serv
es
a
similar
r^
ole
to
the
congruence

in
ultralo
ose
sp
ecications.
That
said,
w
e
b
eliev
e
that
a
v
ery
considerable
amoun
t
of
w
ork
w
ould
b
e
re-
quired
to
apply
Reic
hel's
w
ork
to
ultralo
ose
sp
ecications.
(The
principal
problem
is
that
mo
dels
of
ultralo
ose
sp
ecications
can
v
ary
in
their
in
ter-
pretation
of

whereas,
in
Reic
hel's
framew
ork,
the
corresp
onding
notion
of
b
eha
vioural
equiv
alence
of
elemen
ts
is
completely
determined
b
y
the
other
parts
of
the
algebra.)
.
Reic
hel
uses
the
follo
wing
(less
general)
notion
of
b
eha
vioural
equiv
alence.
F
or
a
signature

with
sorts
T
and
a
distinguished
subset
I

T
,
t
w
o

-
algebras
A
and
B
are
I
-equiv
alen
t
(written
A

B
mo
d
I
)
if
there
is
a

-
algebra
F
suc
h
that
F
T
!
I
A
and
F
T
!
I
B
.
W
e
b
eliev
e
that
this
denition
is
equiv
alen
t
to
IN
 
!
OUT
with
IN
=
Tp
(
)
and
OUT
=
I
.
The
restriction
that
IN
=
Tp
(
)
a
v
oids
the
need
to
use
reac
hable
quan
tication
since,
with
IN
=
Tp(
),


0
IN
x
:

:
P
and
x
:

:
P
are
equiv
alen
t.
.
(In
order
to
guaran
tee
the
existence
of
initial
mo
dels)
Reic
hel
restricts
axioms
to
b
e
conditional
equations
of
the
form
xs
:

s
:
l
=


r
^
:
:
:
lm
=

m
rm
)
l
=

r
The
relativ
e
simplicit
y
of
axioms
of
this
form
a
v
oids
the
need
to
resort
to
negation
normal
form
to
detect
problematic
uses
of
inequalit
y
and
prev
en
ts
the
problem
of
existen
tial
quan
tication
from
arising.
T
o
summarise:
Though
there
are
similarities
to
Reic
hel's
w
ork,
our
result
applies
directly
to
ultralo
ose
sp
ecications
and
is
considerably
more
general
b
oth
in
the
form
of
axioms
allo
w
ed
in
sp
ecications
and
(most
signican
tly)
in
the
form
of
b
eha
vioural
equiv
alence
used.
There
are
t
w
o
imme
diate
corollaries
to
theorem
.0.

Ultralo
ose
Sp
ecications
00
Corollary
.
(Counter
fBo
ol
g
fBo
ol
g
is
b
eha
viourally
closed)
The
sp
ecication
Counter
fBo
ol
g
fBo
ol
g
is
a
(fBo
ol
g;
fBo
ol
g)-b
eha
viourally
closed
sp
ecica-
tion
of
coun
ters.
End
Corollary
.
This
seems
to
directly
con
tradict
Sc
ho
ett's
\imp
ossibilit
y
theorem"
(theorem
.)
that
one
cannot
sp
ecify
a
b
eha
viourally
closed
set
of
coun
ter-lik
e
algebras
using
only
a
nite
set
of
axioms.
In
fact,
there
is
no
con
tradiction:
Sc
ho
ett's
result
applies
to
at
sp
ecications
whereas
the
sp
ecication
Counter
fBo
ol
g
fBo
ol
g
consists
not
just
of
axioms
but
also
the
hid-
ing
op
eration
exp
ort
from
.
Since
the
late
	0's
[,]
it
has
b
een
kno
wn
that
some
nite
sp
ecications
with
hidden
op
erations
cannot
b
e
nitely
written
without
hidden
op
erations.
It
is
therefore
not
to
o
surprising
that
allo
wing
the
hidden
op
er-
ation

Stack
allo
ws
a
nite
sp
ecication.
The
second
corollary
to
theorem
.0
is
that
the
ultralo
ose
transformation
has
pre-
cisely
the
same
eect
as
the
b
eha
vioural
abstraction
op
erator.
Corollary
.
(SP
IN
OUT
=
b
eha
viour
SP
wrt
(IN
;
OUT
))
Let

b
e
a
signature,
IN
and
OUT
subsets
of
the
sorts
of

,
Ax
a
set
of

-axioms
and
SP
the
at

-sp
ecication
h
;
Ax
i.
If
all
existen
tial
quan
tication
in
NNF
(
jAx
j
)
is
o
v
er
sorts
in
IN
and
all
inequations
in
NNF
(
jAx
j
)
is
o
v
er
sorts
in
OUT
,
then
SP
IN
OUT
=
b
eha
viour
SP
wrt
(IN
;
OUT
)
End
Corollary
.
Th
us,
not
only
ha
v
e
w
e
succeeded
in
precisely
c
haracterising
the
seman
tic
eect
of
the
ultralo
ose
sp
ecication
transformation;
w
e
ha
v
e
also
sho
wn
ho
w
at
ASL
sp
ecications
can
b
e
transformed
in
to
equiv
alen
t
USL
sp
ecications.

..
Summary
0
.
Summary
The
in
tro
duction
to
this
thesis
argues
that
b
eha
vioural
closure
is
an
imp
ortan
t
prop
ert
y
for
sp
ecications
and
notes
that
the
\ultralo
ose
sp
ecication
st
yle"
used
b
y
Wirsing
and
Bro
y
[]
app
ears
to
pro
duce
b
eha
viourally
closed
sp
ecications
but
that
no-one
has
stated
(or
pro
v
ed)
what
the
precise
eect
of
this
st
yle
is.
Based
on
the
notions
of
b
eha
vioural
equiv
alence
dev
elop
ed
in
the
previous
c
hapter,
this
c
hapter
pro
vides
three
results
whic
h
c
haracterise
the
eect
of
the
ultralo
ose
st
yle
with
increasing
precision.
The
most
imp
ortan
t
of
these
results
is
the
last
one
(theorem
.0)
whic
h
sho
ws
that
the
seman
tic
eect
of
the
ultralo
ose
transformation
is
to
close
a
sp
ecication
under
b
eha
vioural
equiv
alence
(pro
vided
certain
purely-syn
tactic
side-conditions
are
met).
The
v
alue
of
this
result
is
threefold:
.
It
pro
vides
a
precise
c
haracterisation
of
the
seman
tic
eect
of
the
ultralo
ose
transformation;
.
It
sho
ws
ho
w
ASL
and
USL
are
related
to
eac
h
other;
and
.
It
sho
ws
that
the
meaning
of
Sc
ho
ett's
\imp
ossibilit
y
theorem"
is
not
that
one
cannot
write
useful
b
eha
viourally
closed
sp
ecications
but
that
one
m
ust
sometimes
use
hidden
op
erations
when
writing
them.

Chapter

Ease
of
Pro
ofs
in
ASL
and
USL
The
previous
c
hapter
compares
ASL
with
USL
from
a
sp
ecier's
p
oin
t
of
view:
sho
wing
when
sp
ecications
written
in
eac
h
language
ha
v
e
the
same
me
aning.
This
c
hapter
compares
ASL
with
USL
from
an
implem
e
n
tor's
p
oin
t
of
view:
considering
ho
w
easy
it
is
to
pro
v
e
prop
erties
of
(equiv
alen
t)
b
eha
viourally
closed
sp
ecications
written
in
ASL
and
in
USL.
In
particular,
w
e
consider
the
(apparen
tly
straigh
tforw
ard)
task
of
sho
wing
that
the
sp
ecication
MCounter
(gure
.)
(and
an
equiv
alen
t
ultralo
ose
sp
ecication)
satisfy
the
follo
wing
axiom


r
n
;
m
:
Nat
;
c
:
Ctr
:
n
<
m
)
isZer
o
(mde
c
(n
;
minc
(m
;
c
)))
=
Bo
ol
F
alse
(.)
This
is
t
ypical
of
the
kind
of
results
one
migh
t
wish
to
sho
w
ab
out
suc
h
a
sp
ecica-
tion.
Section
.
rep
eats
Sc
ho
ett's
argumen
t
[]
that
the
only
kno
wn
tec
hnique
for
pro
v-
ing
the
result
requires
an
innite
pro
of;
and
section
.
sho
ws
that
a
nite
pro
of
is
p
ossible
using
the
equiv
alen
t
ultralo
ose
sp
ecication.
(Equiv
alence
follo
ws
from

Except
in
sp
ecications
(where
w
e
mak
e
quan
tication
explicit)
w
e
use

r
as
an
abbreviation
for

fzer
o
;inc
;de
c
g
fNat
g
throughout
this
c
hapter.
0

Ease
of
Pro
ofs
in
ASL
and
USL
0
MCounter
def
=
enric
h
Nat
+
Counter
b
y
sign
minc
;
mde
c
:
N
at

Ctr
!
Ctr
axioms
(MC
)
c
:
Ctr
:
minc
(0
;
c
)
=
c
(MC
)
n
:
Nat
;
c
:
Ctr
:
minc
(suc
c
(n
);
c
)
=
minc
(n
;
inc
(c
))
(MC
)
c
:
Ctr
:
mde
c
(0
;
c
)
=
c
(MC
)
n
:
Nat
;
c
:
Ctr
:
mde
c
(suc
c
(n
);
c
)
=
mde
c
(n
;
de
c
(c
))
end
Counter
def
=
b
eha
viour
enric
h
Bo
ol
b
y
sign
Ctr
:
t
yp
e
zer
o
:
!
Ctr
inc
;
de
c
:
Ctr
!
Ctr
isZer
o
:
Ctr
!
Bo
ol
axioms
(C
)
de
c
(zer
o
)
=
zer
o
(C
)
c
:
Ctr
:
de
c
(inc
(c
))
=
c
(C
)
isZer
o
(zer
o
)
=
T
rue
(C
)
c
:
Ctr
:
isZer
o
(inc
(c
))
=
F
alse
end
wrt
(fBo
ol
g
;
fBo
ol
g
)
Figure
.:
Multiple
Coun
ter
|
ASL
theorem
.0
and
the
fact
that
MCounter
do
es
not
con
tain
inequations
or
existen
tial
quan
tication.)
Though
useful
to
users
of
MCounter
,
the
main
in
terest
of
this
result
lies
not
in
whether
MCounter
satises
axiom
.
but
in
the
fact
that
the
result
is
dicult
or
imp
ossible
in
ASL
but
straigh
tforw
ard
in
USL.
That
is,
this
c
hapter
demonstrates
a
substan
tial
dierence
in
the
ease
of
pro
ving
results
ab
out
sp
ecications
written
in
ASL
and
USL.

Ease
of
Pro
ofs
in
ASL
and
USL
0
.
Dicult
y
of
Pro
ofs
in
ASL
This
section
discusses
ho
w
one
migh
t
pro
v
e
that
the
sp
ecication
MCounter
satises
axiom
..
The
discussion
is
divided
b
et
w
een
a
rep
eat
of
Sc
ho
ett's
argumen
t
from
[
section
]
that
a
nite
pro
of
is
imp
ossible
using
a
tec
hnique
suggested
b
y
Sannella
and
T
arlec
ki
and
a
demonstration
that
an
alternativ
e
approac
h
is
unsound.
In
essence,
the
task
is
to
sho
w
a
result
of
the
form
(b
eha
viour
Counter
wrt
(IN
;
OUT
))
+
SP
j
=
ax
Since
w
e
b
eha
viourally
close
Counter
,
the
pro
of
should
only
mak
e
use
of
b
eha
vioural
prop
erties
of
Counter
.
That
is,
the
pro
of
should
only
in
v
olv
e
observ
ational
axioms
satised
b
y
Counter
.
(Sannella
and
T
arlec
ki
[
section
]
giv
e
a
sligh
tly
w
eak
er
inference
rule
|
the
dierence
is
the
restriction
to
\uniformly
quan
tied"
axioms
discussed
in
section
.
and
is
not
signican
t
in
the
follo
wing.)
Sc
ho
ett
[
p.
	]
argues
as
follo
ws
(w
e
ha
v
e
substituted
our
notation
and
refer-
ences):
\In
a
nite
pro
of
ab
out
the
coun
ter
data
t
yp
e
sp
ecied
b
y
b
eha
viour
Counter
wrt
(fBo
ol
g;
fBo
ol
g),
the
pro
of
rule
of
Sannella
and
T
arlec
ki
can
only
b
e
applied
a
nite
n
um
b
er
of
times
to
yield
a
nite
n
um
b
er
of
axioms
in
Axm
(fBo
ol
g;
fBo
ol
g).
Theorem
.
tells
us
that
this
set
of
axioms
has
a
mo
del
B
with
a
n
um
b
er
n
suc
h
that
for
all
terms
c
comp
osed
of
zer
o
,
inc
and
de
c
,
w
e
ha
v
e
isZer
o
(de
c
n
(c
))
B
=
T
rue
B
.
Putting
c
=
inc
m
(zer
o
),
w
e
obtain
isZer
o
(mde
c
(n
;
minc
(m
;
zer
o
)))
=
isZer
o
(de
c
n
(inc
m
(zer
o
)))
=
T
rue
Since
this
holds
for
all
m
,
the
la
w
desired
b
y
the
user
is
false
in
B
.
The
la
w
therefore
cannot
b
e
a
consequence
of
a
nite
set
of
form
ulas
in

..
Dicult
y
of
Pro
ofs
in
ASL
0
Axm
(fBo
ol
g;
fBo
ol
g)
and
th
us
cannot
b
e
nitely
pro
v
ed
with
the
pro
of
rule
of
Sannella
and
T
arlec
ki."
So,
b
y
Sc
ho
ett's
argumen
t,
w
e
cannot
sho
w
the
result
if
w
e
treat
Counter
as
a
\blac
k
b
o
x"
of
whic
h
w
e
can
only
observ
e
(a
nite
set
of
)
observ
ational
axioms.
Ho
w
ev
er,
it
is
clear
that
w
e
can
pro
v
e
a
similar
result
if
w
e
\ignore"
the
b
eha
vioural
abstraction.
That
is,
w
e
could
sho
w
a
result
of
the
form
Counter
+
SP
j
=
ax
Unfortunately
,
it
is
not
generally
sound
to
conclude
from
this
that
(b
eha
viour
Counter
wrt
(IN
;
OUT
))
+
SP
j
=
ax
as
the
follo
wing
lemma
sho
ws.
Lemma
.
(ignoring
b
eha
vioural
abstraction
is
unsound)
There
exist
sp
ecications
SP
and
SP
and
an
observ
ational
axiom
ax
suc
h
that
SP
+
SP
j
=
ax
)
b
eha
viour
SP
wrt
(IN
;
OUT
)
+
SP
j
=
ax
Pro
of
Consider
the
follo
wing
sp
ecications
SP
def
=
h
:t
yp
e
c
:!

;
x
:

:
x
=
c
i
SP
def
=
h
:t
yp
e
c
:!

;
:x
:

:
x
=
c
i
T
o
see
that
(b
eha
viour
SP
wrt
(fg;
f
g
))
+
SP
is
consisten
t
consider
the
mo
del
A
def
=
h
=
f
;

g;
c
=

i.
Since
A:
SP
and
A's
reac
hable
subalge-
bra
is
a
mo
del
of
SP
and
b
eha
viourally
equiv
alen
t
to
SP
,
A
is
a
mo
del
of
(b
eha
viour
SP
wrt
(fg;
f
g
))
+
SP
.

Ease
of
Pro
ofs
in
ASL
and
USL
0
Since
(b
eha
viour
SP
wrt
(fg;
f
g))
+
SP
is
consisten
t,
w
e
ha
v
e
that
(b
eha
viour
SP
wrt
(fg;
f
g
))
+
SP
j
=
false
Whereas,
SP
+
SP
is
ob
viously
inconsisten
t
and
therefore
SP
+
SP
j
=
false
It
follo
ws
that
SP
+
SP
j
=
ax
)
b
eha
viour
SP
wrt
(fg
;
f
g)
+
SP
j
=
ax
End
Lemma.
W
e
conclude
that
the
t
w
o
ob
vious
w
a
ys
of
sho
wing
the
result
cannot
b
e
used:
the
rst
is
not
nitely
complete
and
the
second
is
not
sound.
This
se
ems
to
suggest
that,
since
the
ob
vious
tec
hniques
cannot
b
e
applied,
it
is
at
least
\dicult"
and
at
w
orst
\imp
ossible"
to
pro
v
e
the
result
for
the
ASL
sp
ecication.
W
e
return
to
this
topic
in
section
..
.
Ease
of
Pro
ofs
in
USL
This
section
discusses
ho
w
one
migh
t
pro
v
e
that
the
ultralo
ose
sp
ecication
MCounter
(gure
.)
satises
axiom
..
Though
t
ypical
of
the
kind
of
result
ab
out
MCounter
one
migh
t
wish
to
sho
w,
the
principal
in
terest
lies
not
in
the
re-
sult
but
in
the
fact
that
it
is
p
erfectly
straigh
tforw
ard
to
pro
v
e
|
in
mark
ed
con
trast
to
our
exp
erience
in
section
.
for
the
equiv
alen
t
ASL
sp
ecication.
As
with
the
ASL
sp
ecication,
it
is
ob
vious
that
the
result
is
true.
It
seems
that
w
e
can
pro
v
e
the
result
b
y
pro
ving
that
MCounter
satises
some
simple
prop
erties
suc
h
as

r
n
;
m
:
Nat
;
c
:
Ctr
:
n

m
)
mde
c
(n
;
minc
(m
;
c
))

minc
(m
 n
;
c
)

r
m
:
Nat
;
c
:
Ctr
:
0
<
m
)
isZer
o
(minc
(m
;
c
))
=
F
alse

..
Ease
of
Pro
ofs
in
USL
0
MCounter
def
=
enric
h
Nat
+
Counter
b
y
sign
minc
;
mde
c
:
N
at

Ctr
!
Ctr
axioms
(MC
0
)
c
:
Ctr
:
minc
(0
;
c
)
=
c
(MC
0
)
n
:
Nat
;
c
:
Ctr
:
minc
(suc
c
(n
);
c
)
=
minc
(n
;
inc
(
c
))
(MC
0
)
c
:
Ctr
:
mde
c
(0
;
c
)
=
c
(MC
0
)
n
:
Nat
;
c
:
Ctr
:
mde
c
(suc
c
(n
);
c
)
=
mde
c
(n
;
de
c
(c
))
end
Counter
def
=
hide

in
enric
h
Bo
ol
b
y
sign
Ctr
:
t
yp
e
zer
o
:
!
Ctr
inc
;
de
c
:
Ctr
!
Ctr
isZer
o
:
Ctr
!
Bo
ol
:
Ctr

Ctr
!
Bo
ol
IN
=
Bo
ol
axioms
(C
0
)
de
c
(zer
o
)

zer
o
(C
0
)

r
c
:
Ctr
:
de
c
(inc
(c
)
)

c
(C
0
)
isZer
o
(zer
o
)
=
T
rue
(C
0
)

r
c
:
Ctr
:
isZer
o
(inc
(c
)
)
=
F
alse
c
:
Ctr
:
c

c
c
;
c
:
Ctr
:
c

c
,
c

c
c
;
c
;
c
:
Ctr
:
c

c
^
c

c
)
c

c
c
;
c
:
Ctr
:
c

c
)
inc
(c
)

inc
(c
)
c
;
c
:
Ctr
:
c

c
)
de
c
(c
)

de
c
(c
)
c
;
c
:
Ctr
:
c

c
)
isZer
o
(c
)
=
isZer
o
(c
)
end
Figure
.:
Multiple
Coun
ter
|
USL
from
whic
h
the
result
easily
follo
ws.
W
e
cannot
sho
w
these
results
directly
b
ecause
the
op
eration

is
hidden
in
MCounter
.
Ho
w
ev
er,
it
is
straigh
tforw
ard
to
transform
MCounter
in
to
an
equiv
a-
len
t
sp
ecication
and
to
sho
w
that
these
results
hold
in
this
equiv
alen
t
sp
ecication.
(This
abilit
y
to
transform
the
sp
ecication
in
to
a
more
con
v
enien
t
form
is
the
prin-

Ease
of
Pro
ofs
in
ASL
and
USL
0
cipal
dierence
from
the
ASL
case!)
Expanding
Counter
,
the
sp
ecication
in
gure
.
is
of
the
form
enric
h
Nat
+
hide

in
enric
h
Bo
olBase
b
y
sign
Ctr
axioms
CtrAx
end
b
y
sign
mde
c
;
minc
:
Nat

Ctr
!
Ctr
axioms
MCtrAx
end
By
mo
ving
the
hide
op
eration
out
and
rearranging
the
use
of
+
and
enric
h,
w
e
obtain
an
equiv
alen
t
sp
ecication
of
the
form

hide

in
enric
h
Nat
+
Bo
olBase
b
y
sign
mde
c
;
minc
:
Nat

Ctr
!
Ctr
Ctr
axioms
CtrAx
MCtrAx
end
sho
wn
in
gure
..
It
is
no
w
straigh
tforw
ard,
if
a
little
tedious,
to
sho
w
the
result.
W
e
shall
use
the
follo
wing
t
w
o
lemm
as
in
the
pro
of.
Lemma
.
Counter
j
=

r
m
;
n
:
Nat
;
c
:
Ctr
:
minc
(m
+
n
;
c
)

minc
(m
;
minc
(n
;
c
))

See
[0,]
for
rules
whic
h
can
b
e
used
to
demonstrate
that
these
sp
ecications
are
equiv
alen
t.

..
Ease
of
Pro
ofs
in
USL
0	
MCounter
def
=
hide

in
Counter
Counter
def
=
enric
h
Bo
ol
+
Nat
b
y
sign
minc
;
mde
c
:
N
at

Ctr
!
Ctr
Ctr
:
t
yp
e
zer
o
:
!
Ctr
inc
;
de
c
:
Ctr
!
Ctr
isZer
o
:
Ctr
!
Bo
ol
:
Ctr

Ctr
!
Bo
ol
axioms
(MC
0
)
c
:
Ctr
:
minc
(0
;
c
)
=
c
(MC
0
)
n
:
Nat
;
c
:
Ctr
:
minc
(suc
c
(n
);
c
)
=
minc
(n
;
inc
(
c
))
(MC
0
)
c
:
Ctr
:
mde
c
(0
;
c
)
=
c
(MC
0
)
n
:
Nat
;
c
:
Ctr
:
mde
c
(suc
c
(n
);
c
)
=
mde
c
(n
;
de
c
(c
))
(C
0
)
de
c
(zer
o
)

zer
o
(C
0
)

fzer
o
;inc
;de
c
g
;
c
:
Ctr
:
de
c
(inc
(c
)
)

c
(C
0
)
isZer
o
(zer
o
)
=
T
rue
(C
0
)

fzer
o
;inc
;de
c
g
;
c
:
Ctr
:
isZer
o
(inc
(c
)
)
=
F
alse
c
:
Ctr
:
c

c
c
;
c
:
Ctr
:
c

c
,
c

c
c
;
c
;
c
:
Ctr
:
c

c
^
c

c
)
c

c
c
;
c
:
Ctr
:
c

c
)
inc
(c
)

inc
(c
)
c
;
c
:
Ctr
:
c

c
)
de
c
(c
)

de
c
(c
)
c
;
c
:
Ctr
:
c

c
)
isZer
o
(c
)
=
isZer
o
(c
)
end
Figure
.:
Restructured
Multiple
Coun
ter
Lemma
.
Counter
j
=

r
m
:
Nat
;
c
:
Ctr
:
mde
c
(m
;
minc
(m
;
c
))

c
Throughout
these
pro
ofs
w
e
silen
tly
mak
e
use
of
the
reexivit
y
of

so
that
whenev
er
w
e
establish
that
c
=
c
,
w
e
can
conclude
that
c

c
.

Ease
of
Pro
ofs
in
ASL
and
USL
0
Lemma
.
(minc
(m
+
n
;
c
)

minc
(m
;
minc
(n
;
c
)))
Counter
j
=

r
m
;
n
:
Nat
;
c
:
Ctr
:
minc
(m
+
n
;
c
)

minc
(m
;
minc
(n
;
c
))
Pro
of
Since
Counter
j
=
n
:
Nat
:
n

f0
;
suc
c
g(;),
w
e
can
use
structural
induction
with
resp
ect
to
0
and
suc
c
to
pro
v
e
the
result.
Base
case:
n
=
0
minc
(m
;
minc
(0
;
c
))
=
f
(MC
0
)
g
minc
(m
;
c
)
=
f
m
+
0
=
m
g
minc
(m
+
0
;
c
)
Inductiv
e
Step:
n
=
suc
c
(n
0
)
Supp
ose
that
minc
(m
;
minc
(n
0
;
c
))

minc
(m
+
n
0
;
c
).
Then
minc
(m
;
minc
(suc
c
(n
0
);
c
))
=
f
(MC
0
)
g
minc
(m
;
minc
(n
0
;
inc
(c
))
)

f
Inductiv
e
Assumption
g
minc
(m
+
n
0
;
inc
(c
))
=
f
(MC
0
)
g
minc
(suc
c
(m
+
n
0
);
c
)
=
f
suc
c
(m
+
n
0
)
=
m
+
suc
c
(n
0
)
g
minc
(m
+
suc
c
(n
0
);
c
)
Since
minc
(m
;
minc
(0
;
c
))
=
minc
(m
+
0
;
c
)
and
minc
(m
;
minc
(n
0
;
c
))

minc
(m
+
n
0
;
c
)
)
minc
(m
;
minc
(suc
c
(n
0
);
c
))

minc
(m
+
suc
c
(n
0
);
c
),
w
e
conclude
that
Counter
j
=

r
m
;
n
:
Nat
;
c
:
Ctr
:
minc
(m
+
n
;
c
)

minc
(m
;
minc
(n
;
c
))
End
Lemma.

..
Ease
of
Pro
ofs
in
USL

Lemma
.
(mde
c
(n
;
minc
(n
;
c
))

c
)
Counter
j
=

r
n
:
Nat
;
c
:
Ctr
:
mde
c
(n
;
minc
(n
;
c
))

c
Pro
of
Since
Counter
j
=
n
:
Nat
:
n

f0
;
suc
c
g(;),
w
e
can
use
structural
induction
with
resp
ect
to
0
and
suc
c
to
pro
v
e
the
result.
Base
case:
n
=
0
mde
c
(0
;
minc
(0
;
c
))
=
f
(MC
0
)
g
mde
c
(0
;
c
)
=
f
(MC
0
)
g
c
Inductiv
e
Step:
n
=
suc
c
(m
)
Supp
ose
that
mde
c
(m
;
minc
(m
;
c
))

c
.
Then
mde
c
(suc
c
(m
);
minc
(s
uc
c
(
m
);
c
))
=
f
suc
c
(m
)
=

+
m
,
lemma
.
g
mde
c
(suc
c
(m
);
minc
(
;
minc
(m
;
c
)))
=
f

=
suc
c
(0
),
(MC
0
),
(MC
0
)
g
mde
c
(suc
c
(m
);
inc
(
minc
(
m
;
c
)
))
=
f
(MC
0
)
g
mde
c
(m
;
de
c
(inc
(minc
(m
;
c
)))
)

f
(C
0
)
g
mde
c
(m
;
minc
(m
;
c
)))

f
Inductiv
e
assumption
g
c
Since
mde
c
(0
;
minc
(0
;
c
))
=
c
and
mde
c
(m
;
minc
(m
;
c
))

c
)
mde
c
(suc
c
(m
);
minc
(suc
c
(m
);
c
))

c
,
w
e
conclude
that
Counter
j
=

r
n
:
Nat
;
c
:
Ctr
:
mde
c
(n
;
minc
(n
;
c
))

c
End
Lemma.

Ease
of
Pro
ofs
in
ASL
and
USL

W
e
can
no
w
pro
v
e
the
main
result
of
this
section:
that
MCounter
(and,
hence,
MCounter
)
satises
axiom
..
Theorem
.
(n
<
m
)
:isZer
o
(mde
c
(n
;
minc
(m
;
c
))))
MCounter
j
=

r
n
;
m
:
Nat
;
c
:
Ctr
:
n
<
m
)
isZer
o
(mde
c
(n
;
minc
(m
;
c
)))
=
Bo
ol
F
alse
Pro
of

r
n
;
m
:
Nat
;
c
:
Ctr
:
n
<
m
)
isZer
o
(mde
c
(n
;
minc
(
m
;
c
)
))
=
Bo
ol
F
alse
=
f
arithmetic
g

r
n
;
m
:
Nat
;
c
:
Ctr
:
n
<
m
)
isZer
o
(mde
c
(n
;
minc
(
n
+
(m
 n
);
c
)))
=
Bo
ol
F
alse
=
f
lemma
.
g

r
n
;
m
:
Nat
;
c
:
Ctr
:
n
<
m
)
isZer
o
(mde
c
(n
;
minc
(
n
;
min
c
(m
 n
;
c
))))
=
Bo
ol
F
alse
=
f
lemma
.
g

r
n
;
m
:
Nat
;
c
:
Ctr
:
n
<
m
)
isZer
o
(minc
(m
 n
;
c
))
=
Bo
ol
F
alse
=
f
arithmetic
g

r
n
:
Nat
;
c
:
Ctr
:
n
>
0
)
isZer
o
(minc
(n
;
c
)
)
=
Bo
ol
F
alse
=
f
arithmetic
g

r
n
:
Nat
;
c
:
Ctr
:
n

0
)
isZer
o
(minc
(
+
n
;
c
))
=
Bo
ol
F
alse
=
f
lemma
.,

=
suc
c
(0
),
(MC
0
),
(MC
0
)
g

r
n
:
Nat
;
c
:
Ctr
:
n

0
)
isZer
o
(inc
(minc
(n
;
c
)))
=
Bo
ol
F
alse
=
f
(C
0
)
g

r
n
:
Nat
;
c
:
Ctr
:
n

0
)
F
alse
=
Bo
ol
F
alse
=
f
predicate
calculus
g
true
End
Theorem.
.
Comparision
The
previous
t
w
o
sections
demonstrate
a
substan
tial
dierence
in
the
ease
of
pro
ving
results
ab
out
sp
ecications
written
in
ASL
and
USL.
W
e
ha
v
e
sho
wn
that
it
is
hard
to
pro
v
e
that
the
ASL
sp
ecication
MCounter
satises
the
axiom

r
n
;
m
:
Nat
;
c
:
Ctr
:
n
<
m
)
isZer
o
(mde
c
(n
;
minc
(m
;
c
)))
=
Bo
ol
F
alse
but
that
it
is
straigh
tforw
ard
to
pro
v
e
that
the
equiv
alen
t
ultralo
ose
sp
ecication
MCounter
satises
this
axiom.

..
Comparision

W
e
considered
t
w
o
tec
hniques
for
pro
ving
the
result
for
the
ASL
sp
ecication:
.
T
o
main
tain
soundness,
w
e
migh
t
restrict
ourselv
es
to
using
observ
ational
ax-
ioms
in
the
pro
of
as
suggested
in
[
section
].
Unfortunately
,
Sc
ho
ett
has
sho
wn
that
no
nite
pro
of
exists
under
this
restric-
tion.
.
T
o
ac
hiev
e
a
nite
pro
of,
w
e
migh
t
just
\ignore"
the
b
eha
vioural
abstraction.
Unfortunately
,
this
is
easily
sho
wn
to
b
e
unsound.
That
is,
ev
en
for
an
obser-
v
ational
axiom
ax
,
w
e
cannot
conclude
that
b
eha
viour
SP
wrt
(IN
;
OUT
)
+
SP
j
=
ax
if
SP
+
SP
j
=
ax
holds.
These
problems
with
b
eha
vioural
abstraction
in
ASL
seem
to
supp
ort
Wirsing
and
Bro
y's
suggestion
[
paragraph
]
that
the
b
eha
vioural
abstraction
op
erator
is
\mathematically
dicult."
They
also
suggest
an
alternativ
e
use
of
the
ultralo
ose
transformation:
one
migh
t
dev
elop
sp
ecications
using
ASL
and
then
transform
them
in
to
the
equiv
alen
t
(but
somewhat
longer)
ultralo
ose
sp
ecication
to
eliminate
the
use
of
b
eha
vioural
abstraction
and,
hence,
simplify
pro
ofs.
Ho
w
ev
er,
a
recen
t
idea
of
Sannella
and
T
arlec
ki
[
section

]
suggests
a
w
a
y
round
the
problems
in
ASL
based
on
Sc
ho
ett's
idea
of
stabilit
y
whic
h
w
e
briey
describ
e.
In
Sannella
and
T
arlec
ki's
framew
ork
for
program
dev
elopmen
t
(as
describ
ed
in
[	,0]),
an
y
function
:
Alg
(
)
!
Alg
(
0
)
giv
es
rise
to
a
sp
ecication
building
op
erator

:
Sp
ec
(
)
!
Sp
ec(
0
)
dened
b
y
Mo
d(

(SP
))
def
=
fA:
A

Mo
d(SP
):
(A)g

Ease
of
Pro
ofs
in
ASL
and
USL

Suc
h
sp
ecication
building
op
erators
are
kno
wn
as
\constructors."
F
or
example,
the
sp
ecication
building
op
erators
deriv
e
,
quotien
t
and
extend
to
via
are
constructors.
The
notion
of
constructors
is
imp
ortan
t
b
ecause
some
constructors
can
b
e
easily
impleme
n
ted
using
programming
language
constructs
and
so
a
useful
step
in
dev
el-
oping
a
program
is
to
rene
a
sp
ecication
SP
to
a
sp
ecication
of
the
form

(SP
0
)
|
replacing
part
of
SP
b
y
an
easily
impleme
n
ted
constructor

.
(Considerably
more
detail
ma
y
b
e
found
in
[	].)
A
constructor


is
said
to
b
e
\stable"
(with
resp
ect
to
an
equiv
alence
relation
)
if,
for
an
y

-algebras
A
and
B
,
A

B
)
(A
)

(B
)
That
is,
a
constructor
is
stable
if
the
function
on
whic
h
it
is
based
do
esn't
in
tro
duce
dierences
b
et
w
een
equiv
alen
t
algebras.
The
practical
consequence
of
these
ideas
is
the
follo
wing:
If
all
sp
ecication
building
op
erators
pro
vided
b
y
a
sp
ecication
language
are
stable
(with
resp
ect
to
b
eha
vioural
equiv
alence),
then
the
straigh
t-
forw
ard
pro
of
tec
hnique
of
\ignoring"
b
eha
vioural
abstraction
is
v
alid.

In
other
w
ords,
if
w
e
are
willing
to
tak
e
the
(en
tirely
reasonable)
step
of
restrict-
ing
ourselv
es
to
a
stable
subset
of
ASL,
the
problems
encoun
tered
in
section
.
disapp
ear.
.
Summary
This
c
hapter
considers
the
question
of
ho
w
ultralo
ose
sp
ecications
compare
with
equiv
alen
t
ASL
sp
ecications
from
the
implem
en
tors
p
oin
t
of
view.
In
particular,
it
considers
what
one
can
pro
v
e
ab
out
a
a
b
eha
viourally
closed
sp
ecication.

The
reason
for
the
problems
in
lemma
.
ab
o
v
e
is
that
+
is
not
stable.

..
Summary

W
e
found
that,
when
the
b
eha
viourally
closed
sp
ecication
is
written
using
the
b
eha
vioural
abstraction
op
erator
b
eha
viour
,
the
t
w
o
ob
vious
w
a
ys
of
pro
ving
that
the
sp
ecication
satises
an
axiom
could
not
b
e
used.
This
supp
orts
Wirsing
and
Bro
y's
suggestion
[
paragraph
]
that
the
b
eha
vioural
abstraction
op
erator
is
\mathematically
dicult"
although
w
e
note
that
these
problems
disapp
ear
if
w
e
restrict
ourselv
es
to
\stable"
sp
ecication
building
op
erators.

Chapter

Summary
and
Conclusions
This
thesis
is
concerned
with
ho
w
one
migh
t
a
v
oid
o
v
ersp
ecication
when
writing
sp
ecications.
In
particular,
it
examines
t
w
o
alternativ
e
approac
hes
to
writing
b
e-
ha
viourally
closed
sp
ecications:
using
a
\b
eha
vioural
abstraction
op
erator"
as
in
ASL;
or
using
reac
hable
quan
tication
and
a
v
ery
st
ylised
form
of
sp
ecication
as
in
USL.
The
main
questions
ask
ed
in
the
in
tro
duction
w
ere:

Under
what
circumstances
are
USL
sp
ecications
b
eha
viourally
closed?

Under
what
circumstances
do
these
t
w
o
approac
hes
giv
e
the
same
result?

F
or
whic
h
approac
h
is
it
easiest
to
pro
v
e
prop
erties
of
the
resulting
sp
ecications?
The
rst
t
w
o
questions
w
ere
tac
kled
in
c
hapter

whic
h
sho
w
ed
the
follo
wing
results
(for
at
sp
ecications).

Theorem
.
sho
ws
that
at
ultralo
ose
sp
ecications
are
closed
under
IN
 
!
OUT
pro
vided
they
con
tain
no
inequations.


Summary
and
Conclusions


Theorem
.0
uses
theorem
.
to
demonstrate
that
an
y
at
ultralo
ose
sp
eci-
cation
SP
IN
OUT
is
seman
tically
equiv
alen
t
to
a
corresp
onding
ASL
sp
ecication
b
eha
viour
SP
wrt
(IN
;
OUT
)
if
SP
con
tains
no
inequations
or
existen
tial
quan
tication.
Chapter

tac
kled
the
third
question.
Using
an
argumen
t
due
to
Sc
ho
ett,
w
e
sa
w
that
it
w
as
surprisingly
hard
to
sho
w
that
a
b
eha
viourally
closed
ASL
sp
ecication
satises
a
giv
en
axiom.
Replacing
the
b
eha
viourally
closed
sp
ecication
with
an
equiv
alen
t
ultralo
ose
sp
ecication,
w
e
sa
w
that
the
pro
of
w
as
quite
straigh
tforw
ard.
W
e
concluded
that,
at
least
in
this
case,
the
more
explicit
st
yle
of
the
ultralo
ose
sp
ecication
w
as
an
adv
an
tage.
Ho
w
ev
er,
ultralo
ose
sp
ecications
are
somewhat
more
v
erb
ose
than
their
corresp
onding
ASL
sp
ecications
and
so
w
e
suggested
that
it
migh
t
b
e
con
v
enien
t
to
write
an
ASL
sp
ecication
initially
and
only
transform
in
to
the
ultralo
ose
st
yle
b
efore
doing
an
y
pro
ofs.
(The
soundness
of
this
approac
h
follo
ws
imme
diately
from
theorem
.0.)
An
alternativ
e
approac
h
w
ould
b
e
to
w
ork
in
a
language
suc
h
as
Extended
ML
[]
whic
h
restricts
the
sp
ecier
to
\stable"
sp
ec-
ication
building
op
erators
whic
h
allo
ws
straigh
tforw
ard
pro
ofs
ev
en
in
the
presence
of
b
eha
vioural
abstraction.
The
fo
cus
of
this
thesis
is
v
ery
m
uc
h
on
the
or
etic
al
results
rather
than
on
their
pr
actic
al
application.
It
is
therefore
w
orth
emphasising
the
practical
consequences
of
the
ab
o
v
e
results.

W
e
b
eliev
e
that
b
eha
vioural
closure
is
an
essen
tial
prop
ert
y
of
sp
ecications.
An
easy
w
a
y
of
ensuring
that
(at)
sp
ecications
are
b
eha
viourally
closed
is
to
use
reac
hable
quan
tication
instead
of
the
normal
quan
tication
and
to
use
a
congruence
instead
of
equalit
y
in
the
w
a
y
formalised
in
our
ultralo
ose
transformation.
The
only
requiremen
t
is
that
the
sp
ecication
should
not
con
tain
inequations
(theorem
.).

Mo
dern
approac
hes
to
formal
program
dev
elopmen
t
emphasise
the
gr
adual
re-
nemen
t
of
sp
ecications
in
a
series
of
smal
l
steps.
W
e
b
eliev
e
(but
ha
v
e
not
attempted
to
demonstrate)
that
the
more
explicit
sp
ecication
of
b
eha
vioural

Summary
and
Conclusions

equiv
alence
in
ultralo
ose
sp
ecications
allo
ws
sp
ecications
to
b
e
rened
in
considerably
smaller
(and
hence,
simpler)
steps
than
is
p
ossible
in
ASL.
Our
demonstration
of
the
relationship
b
et
w
een
(at)
ASL
sp
ecications
and
USL
sp
ecications
pro
vides
the
theoretical
justication
for
transforming
ASL
sp
ec-
ications
in
to
USL
sp
ecications
in
preparation
for
suc
h
transformation.
The
only
requiremen
t
is
that
the
sp
ecication
should
not
con
tain
inequations
or
existen
tial
quan
tication
(theorem
.0).
Inciden
tal
Results
Answ
ering
the
ab
o
v
e
questions
required
us
to
generalise
Meseguer
and
Goguen's
denition
of
b
eha
vioural
equiv
alence
and
to
dene
the
\ultralo
ose
transformation."
W
e
also
came
across
the
follo
wing
in
teresting
inciden
tal
results:

Theorem
.
demonstrates
that
the
satisfaction
of
\observ
ational
axioms"
is
in
v
arian
t
under
b
eha
vioural
equiv
alence.
This
result
is
stronger
than
a
similar
result
b
y
Sannella
and
T
arlec
ki
[
F
act
]
for
their
(w
eak
er)
notion
of
b
eha
vioural
equiv
alence.
W
e
nd
this
a
con-
vincing
argumen
t
for
the
use
of
(our
generalisation
of
)
Meseguer
and
Goguen's
denition
of
b
eha
vioural
equiv
alence
rather
than
that
of
Sannella
and
T
arlec
ki.

Theorem
.
sho
ws
that
sp
ecications
written
in
the
ultralo
ose
st
yle
(\ul-
tralo
ose
sp
ecications")
are
do
wn
w
ard
closed
under
IN
!
OUT
.
This
suggests
a
link
with
the
implem
en
tation
notions
of
the
ADJ
group
and
Ehrig
etc
al.
[,0]whic
h
w
e
did
not
pursue.
F
urther
W
ork
Finally
,
w
e
note
the
follo
wing
areas
for
further
w
ork:

The
ab
o
v
e
results
are
for
at
sp
ecications
only
.
It
should
b
e
straigh
tforw
ard
to
extend
the
ultralo
ose
transformation
and
asso
ciated
results
to
handle
struc-

Summary
and
Conclusions
	
tured
sp
ecications
although
some
care
is
required
with
the
deriv
e
op
erator
since
it
do
es
not
preserv
e
closure
under
isomorphism
(coun
terexample
.).

There
are
sev
eral
alternativ
e
w
a
ys
of
dening
an
equiv
alence
IN
 
!
OUT
lik
e
our
b
e-
ha
vioural
equiv
alence.
T
o
our
kno
wledge,
no-one
has
answ
ered
the
question
of
whether
or
not
these
an
y
of
these
equiv
alences
are
equiv
alen
t
to

Axm
(IN
;OUT
)
.
That
is,
if
t
w
o
algebras
satisfy
exactly
the
same
set
of
observ
ational
axioms,
are
they
b
eha
viourally
equiv
alen
t
and
vice-v
ersa.
W
e
kno
w
of
t
w
o
partial
answ
ers:
.
F
or
IN
=
;,
it
is
straigh
tforw
ard
to
sho
w
that
the
ab
o
v
e
holds.
.
A
result
b
y
Sannella
and
T
arlec
ki
[
F
act
]
suggests
that
this
ma
y
b
e
true
for
our
denition
of
b
eha
vioural
equiv
alence
using
innitary
obser-
v
ational
axioms.
W
e
b
elieve
(but
ha
v
e
not
tried
to
pro
v
e)
that
this
is
true
using
nitary
observ
ational
axioms
in
the
presence
of
at
most
coun
tably
man
y
unreac
hable
elemen
ts.

It
is
common
to
base
the
seman
tics
of
sp
ecication
languages
on
partial
alge-
bras
(that
is
algebras
whic
h
allo
w
partial
functions
as
in
terpretations
of
func-
tion
sym
b
ols)
rather
than
total
algebras.
P
artialit
y
allo
ws
non-terminating
computations
and
errors
to
b
e
mo
delled
directly
.
The
ma
jor
problem
in
trying
to
apply
the
results
in
this
thesis
to
sp
ecications
allo
wing
partial
functions
is
that
the
standard
framew
ork
for
partial
algebras
requires
functions
to
b
e
strict.
This
complicates
the
in
terpretation
of
the
function


:



!
Bo
ol
as
relation
since
it
is
not
clear
ho
w
to
in
terpret
an
undened
result
from


.
The
most
direct
line
of
attac
k
migh
t
b
e
to
dene
a
logical
framew
ork
whic
h
allo
w
ed
non-strict
functions
(or
just
non-strict
predicates).
A
less
radical
ap-
proac
h
migh
t
b
e
to
consider
a
framew
ork
in
whic
h
the
in
built
(non-strict)
predicate
=
is
allo
w
ed
to
denote
an
arbitrary
congruence
rather
than
equalit
y
.

Our
motiv
ation
for
considering
b
eha
vioural
equiv
alence
w
as
the
desire
to
cap-
ture
when
it
w
as
p
ossible
to
replace
one
mo
dule
b
y
another
without
c
hanging

Summary
and
Conclusions
0
the
o
v
erall
result
of
a
program.
Ho
w
ev
er,
in
some
circumstances,
the
denition
of
b
eha
vioural
equiv
alence
w
e
adopt
(and
most
other
denitions
in
the
literature)
is
to
o
strong.
Consider
a
program
that
uses
a
stac
k
mo
dule
but
for
whic
h
w
e
are
able
to
sho
w
that
it
nev
er
generates
stac
ks
with
more
than
00
elemen
ts.
In
this
case,
it
w
ould
b
e
p
ossible
to
use
either
an
un
b
ounded
stac
k
(lik
e
those
considered
in
this
thesis)
or
a
b
ounded
stac
k
of
size
00
or
more.
Ho
w
ev
er,
despite
the
fact
that
w
e
can
substitute
one
for
the
other
in
this
program,
b
ounded
stac
ks
and
un
b
ounded
stac
ks
are
not
b
eha
viourally
equiv
alen
t.
(It
migh
t
b
e
argued
that
allo
wing
suc
h
b
ounded
implem
en
tations
in
tro
duces
an
undesirable
degree
of
coupling
b
et
w
een
the
mo
dule
and
the
rest
of
the
program.
But,
from
a
practical
p
oin
t
of
view,
suc
h
implem
en
tati
ons
are
v
ery
common
and
it
is
desirable
to
b
e
able
to
b
e
able
to
pro
v
e
their
correctness
with
resp
ect
to
an
appropriate
sp
ecication.
F
urthermore,
from
a
theoretical
p
oin
t
of
view,
no
real
computers
ha
v
e
an
un
b
ounded
amoun
t
of
storage
and
so
it
is
imp
ossible
to
impleme
n
t
un
b
ounded
data
structures.)
An
imp
ortan
t
area
for
further
w
ork
is
extending
b
oth
the
denition
of
b
e-
ha
vioural
equiv
alence
and
the
ultralo
ose
sp
ecication
st
yle
to
handle
suc
h
cases.
Hennic
k
er
[,]
describ
es
an
approac
h
where
one
(axiomatically)
sp
ecies
a
family
of
predicates
Obs

:

!
Bo
ol
whic
h
iden
ties
those
v
alues
whic
h
are
considered
observ
able.
This
approac
h
w
ould
pro
vide
the
exibilit
y
required
though
it
is
not
clear
ho
w
this
approac
h
w
ould
in
teract
with
the
ultralo
ose
sp
ecication
st
yle.

References
[]
Manfred
Bro
y,
B.
M
oller,
P
eter
P
epp
er
&
Martin
Wirsing,
\Algebraic
Implem
en-
tations
Preserv
e
Program
Correctness,"
Sci.
Comput.
Programming

(	).
[]
Manfred
Bro
y
&
Martin
Wirsing,
\Ultralo
ose
Algebraic
Sp
ecication,"
Bull.
Eu-
rop
ean
Asso
c.
Theoret.
Comput.
Sci.

(June
	),
{.
[]
Chang
&
Keisler,
Mo
del
Theory
,
Studies
in
Logic
and
the
F
oundations
of
Math-
ematics
#,
North-Holland,
	.
[]
Hartm
ut
Ehrig,
H.-J.
Kreo
wski,
Bernd
Mahr
&
P
.
P
ada
witz,
\Comp
ound
alge-
braic
implem
en
tations:
an
approac
h
to
step
wise
renemen
t
of
soft
w
are
systems.,"
Lect.
Notes
in
Comp.
Sci.

(Sept.
{,
	0),
{.
[]
Hartm
ut
Ehrig
&
Bernd
Mahr,
F
undamen
tals
of
Algebraic
Sp
ecication

|
Equations
and
Initial
Seman
tics
,
EA
TCS
Monographs
on
Theoretical
Computer
Science
#,
Springer-V
erlag,
New
Y
ork{Heidelb
erg{Berlin,
	.
[]
Marie-Claude
Gaudel,
\Structuring
and
Mo
dularising
Algebraic
Sp
ecications:
the
PLUSS
Sp
ecication
Language,
Ev
olution
and
P
ersp
ectiv
es,"
Lect.
Notes
in
Comp.
Sci.

(		),
{.
[]
V.
Giarratana,
F.
Gimona
&
U.
Mon
tanari,
\Observ
abilit
y
concepts
in
abstract
data
t
yp
e
sp
ecications,"
Lect.
Notes
in
Comp.
Sci.

(	),
{.
[]
Joseph
A.
Goguen
&
Jos

e
Meseguer,
\Univ
ersal
Realization,
P
ersisten
t
In
tercon-
nection
and
Implem
en
tation
of
Abstract
Mo
dules,"
Lect.
Notes
in
Comp.
Sci.

(	).
[	]
Joseph
A.
Goguen,
James
W.
Thatc
her
&
Eric
G.
W
agner,
\An
Initial
Algebra
Approac
h
to
the
Sp
ecication,
Correctness
and
Implem
en
tation
of
Abstract
Data
T
yp
es,"
in
Adv
ances
in
Computer
Programming
,
Y
eh,
ed.
#,
	,
0{	
.


References

[0]
Joseph
A.
Goguen,
James
W.
Thatc
her,
Eric
G.
W
agner
&
Jesse
B.
W
righ
t,
\Initial
Algebra
Seman
tics
and
Con
tin
uous
Algebras,"
J.
Asso
c.
Comput.
Mac
h.
,

(Jan.
	),
{	.
[]
R.
Hennic
k
er,
\Observ
ational
Implem
en
tations,"
Lect.
Notes
in
Comp.
Sci.
	
(	),
	{.
[]
R.
Hennic
k
er,
\Impleme
n
tation
of
P
arameterised
Observ
ational
Sp
ecications,"
Lect.
Notes
in
Comp.
Sci.

(		),
	0{0.
[]
C.
A.
R.
Hoare,
\Pro
of
of
Correctness
of
Data
Represen
tations,"
Acta
Inform.

(	),
{.
[]
T.
S.
E.
Maibaum,
M.
R.
Sadler
&
P
.
A.
S.
V
eloso,
\Logical
Implem
en
tation,"
Departmen
t
of
Computing,
Imp
erial
College,
London,
T
ec
hnical
Rep
ort,
August
	.
[]
T.
S.
E.
Maibaum,
P
.
A.
S.
V
eloso
&
M.
R.
Sadler,
\A
theory
of
abstract
data
t
yp
es
for
program
dev
elopmen
t:
bridging
the
gap?,"
in
Mathematical
F
ounda-
tions
of
Soft
w
are
Dev
elopmen
t
'
#,
Springer-V
erlag,
New
Y
ork{Heidelb
erg{
Berlin,
	,
{0.
[]
M.
E.
Ma
jster,
\Limits
of
the
\algebraic"
sp
ecication
of
abstract
data
t
yp
es,"
A
CM
SIGPLAN
Notices

(	),
{.
[]
Jos

e
Meseguer
&
Joseph
A.
Goguen,
\Initialit
y
,
induction
and
computabilit
y,"
in
Algebraic
Metho
ds
in
Seman
tics
,
M.
Niv
at
&
J.
Reynolds,
eds.,
Cam
bridge
Univ.
Press,
New
Y
ork,
NY,
	,
0{.
[]
Carroll
C.
Morgan,
\Data
Renemen
t
b
y
Miracles,"
Information
Pro
cessing
Let-
ters

(	/),
{.
[	]
Joseph
M.
Morris,
\La
ws
of
Data
Renemen
t,"
Acta
Inform.

(		),
{0.
[0]
P
.
Niv
ela
&
F.
Orejas,
\Initial
b
eha
viour
seman
tics
for
algebraic
sp
ecications,"
Lect.
Notes
in
Comp.
Sci.

(	),
{0.
[]
Axel
P
oign

e,
\P
artial
Algebras,
Subsorting
and
Dep
enden
t
T
yp
es
|
Prerequisites
of
Error
Handling
in
Algebraic
Sp
ecications,"
Lect.
Notes
in
Comp.
Sci.

(	),
0{.
[]
A.
Ramsa
y
,
F
ormal
metho
ds
in
Articial
In
telligence
,
Cam
bridge
T
racts
in
The-
oretical
Computer
Science
#,
Cam
bridge
Univ.
Press,
New
Y
ork,
NY,
	.
[]
Horst
Reic
hel,
\Initial
restrictions
of
b
eha
viour,"
Pro
ceedings
The
Role
of
Ab-
stract
Mo
dels
in
Information
Pro
cessing
(	).

References

[]
Horst
Reic
hel,
Initial
computabilit
y
,
algebraic
sp
ecications
and
partial
alge-
bras,
The
In
ternational
series
of
monographs
on
Computer
Science
#,
Clarendon
Press,
Oxford,
	.
[]
Donald
T.
Sannella,
\F
ormal
Sp
ecication
of
ML
Programs,"
LF
CS,
Univ.
of
Edin
burgh,
Researc
h
Rep
ort,
	.
[]
Donald
T.
Sannella
&
Andrzej
T
arlec
ki,
\Extended
ML:
an
Institution-
indep
enden
t
F
ramew
ork
for
F
ormal
Program
Dev
elopmen
t,"
LF
CS,
Univ
ersit
y
of
Edin
burgh,
Researc
h
Rep
ort,
	.
[]
Donald
T.
Sannella
&
Andrzej
T
arlec
ki,
\On
Observ
ational
Equiv
alence
and
Al-
gebraic
Sp
ecication,"
J.
Comput.
System
Sci.

(	),
0{.
[]
Donald
T.
Sannella
&
Andrzej
T
arlec
ki,
\Sp
ecications
in
an
Arbitrary
Institu-
tion,"
Information
and
Computation

(	),
{0.
[	]
Donald
T.
Sannella
&
Andrzej
T
arlec
ki,
\T
o
w
ard
F
ormal
Dev
elopmen
t
of
Pro-
grams
from
Algebraic
Sp
ecications:
Impleme
n
tations
Revisited,"
Acta
Inform.

(	),
{.
[0]
Donald
T.
Sannella
&
Andrzej
T
arlec
ki,
A
k
ernel
sp
ecication
formalism
with
higher-order
parameterisation,
Dept.
of
Computer
Science,
Univ.
of
Edin
burgh,
		.
[]
Donald
T.
Sannella
&
Andrzej
T
arlec
ki,
\Program
Sp
ecication
and
Dev
elopmen
t
in
Standard
ML,"
Pro
ceedings
th
A
CM
Symp
osium
on
Principles
of
Program-
ming
Languages
,
New
Orleans
(Jan.
	).
[]
Donald
T.
Sannella
&
Andrzej
T
arlec
ki,
\T
o
w
ard
formal
dev
elopmen
t
of
programs
from
algebraic
sp
ecications:
mo
del-theoretic
foundations,"
Dept.
of
Computer
Science,
Univ.
of
Edin
burgh,
ECS-LF
CS-	-0
,
Mar.
		.
[]
Donald
T.
Sannella,
Andrzej
T
arlec
ki
&
Stefan
Sok
olo
wski,
\T
o
w
ard
formal
de-
v
elopmen
t
of
programs
from
algebraic
sp
ecications:
parameterisation
revisited,"
FB
|
Mathematik/Informatik,
Univ
ersit
at
Bremen,
Draft
rep
ort,
F
eb.
,
		0.
[]
Donald
T.
Sannella
&
Martin
Wirsing,
\A
k
ernel
language
for
algebraic
sp
eci-
cation
and
implem
en
tation,"
Lect.
Notes
in
Comp.
Sci.

(	),
{.
[]
Oliv
er
Sc
ho
ett,
\Data
Abstraction
and
the
correctness
of
mo
dular
programming,"
Univ
of
Edin
burgh,
CST--,
	,
Ph.D.
thesis
.
[]
Oliv
er
Sc
ho
ett,
\An
observ
ational
subset
of
rst-order
logic
cannot
sp
ecify
the
b
eha
viour
of
a
coun
ter,"
Lect.
Notes
in
Comp.
Sci.
0
(		),
		{0,
extended
abstract.

References

[]
Oliv
er
Sc
ho
ett,
\Tw
o
Imp
ossibilit
y
Theorems
on
Beha
viour
Sp
ecication
of
Ab-
stract
Data
T
yp
es,"
Acta
Inform.
	
(		),
	{.
[]
J.
W.
Thatc
her,
E.
G.
W
agner
&
J.
B.
W
righ
t,
\Data
T
yp
e
Sp
ecication:
P
a-
rameterisation
and
the
P
o
w
er
of
Sp
ecication
T
ec
hniques,"
A
CM
T
ransactions
on
Programming
Languages
and
Systems
,

(Oct.
	),
{,
(abbrevi-
ated
v
ersion
presen
ted
at
0th
Ann
ual
Symp
osium
on
Theory
of
Computing,
San
Diego,
California,
Ma
y
{,
	.).
[	]
M.
W
and,
\Final
algebra
seman
tics
and
data
t
yp
e
extensions,"
Journal
of
Com-
puter
and
System
Sciences
	
(	),
{.
[0]
Martin
Wirsing,
\Structured
Algebraic
Sp
ecication:
a
k
ernel
language,"
Theo-
retical
Computer
Science

(	),
{	.
[]
Martin
Wirsing,
\Algebraic
Sp
ecications,"
in
Handb
o
ok
of
Theoretical
Com-
puter
Science,
F
ormal
Mo
dels
and
Seman
tics,
V
olume
B
,
Elsevier,
Amsterdam{
New
Y
ork,
		0,
{,
Chapter
.
[]
Martin
Wirsing
&
Manfred
Bro
y,
\A
Mo
dular
F
ramew
ork
for
Sp
ecication
and
Implem
en
tation,"
Lect.
Notes
in
Comp.
Sci.

(		),
{.

